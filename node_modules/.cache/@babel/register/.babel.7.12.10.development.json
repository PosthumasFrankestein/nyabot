{
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Bot = _interopRequireDefault(require(\"./Bot\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION_TOKEN = '';\nvar DEV_TOKEN = '';\nvar mode = process.env.NODE_ENV;\nnew _Bot[\"default\"](mode === 'development' ? DEV_TOKEN : PRODUCTION_TOKEN);\nprocess.on('unhandledRejection', function (reason, promise) {\n  _Logger[\"default\"].error('Unhandled promise rejection ' + reason.toString());\n\n  console.log(reason);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT05fVE9LRU4iLCJERVZfVE9LRU4iLCJtb2RlIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiRGlzY29yZEJvdCIsIm9uIiwicmVhc29uIiwicHJvbWlzZSIsImxvZ2dlciIsImVycm9yIiwidG9TdHJpbmciLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsZ0JBQWdCLEdBQUcsRUFBekI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsRUFBbEI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUF6QjtBQUVBLElBQUlDLGVBQUosQ0FBZUosSUFBSSxLQUFLLGFBQVQsR0FBeUJELFNBQXpCLEdBQXFDRCxnQkFBcEQ7QUFDQUcsT0FBTyxDQUFDSSxFQUFSLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0MsTUFBRCxFQUFTQyxPQUFULEVBQXFCO0FBQ2xEQyxxQkFBT0MsS0FBUCxDQUFhLGlDQUFpQ0gsTUFBTSxDQUFDSSxRQUFQLEVBQTlDOztBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sTUFBWjtBQUNILENBSEQiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFzaGkvRGVza3RvcC9ueWFib3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpc2NvcmRCb3QgZnJvbSBcIi4vQm90XCI7XHJcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vTG9nZ2VyXCI7XHJcblxyXG5jb25zdCBQUk9EVUNUSU9OX1RPS0VOID0gJyc7XHJcbmNvbnN0IERFVl9UT0tFTiA9ICcnO1xyXG5cclxuY29uc3QgbW9kZSA9IHByb2Nlc3MuZW52Lk5PREVfRU5WO1xyXG5cclxubmV3IERpc2NvcmRCb3QobW9kZSA9PT0gJ2RldmVsb3BtZW50JyA/IERFVl9UT0tFTiA6IFBST0RVQ1RJT05fVE9LRU4pO1xyXG5wcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCAocmVhc29uLCBwcm9taXNlKSA9PiB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiAnICsgcmVhc29uLnRvU3RyaW5nKCkpO1xyXG4gICAgY29uc29sZS5sb2cocmVhc29uKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PRODUCTION_TOKEN",
        "DEV_TOKEN",
        "mode",
        "process",
        "env",
        "NODE_ENV",
        "DiscordBot",
        "on",
        "reason",
        "promise",
        "logger",
        "error",
        "toString",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAG,EAAzB;AACA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAzB;AAEA,IAAIC,eAAJ,CAAeJ,IAAI,KAAK,aAAT,GAAyBD,SAAzB,GAAqCD,gBAApD;AACAG,OAAO,CAACI,EAAR,CAAW,oBAAX,EAAiC,UAACC,MAAD,EAASC,OAAT,EAAqB;AAClDC,qBAAOC,KAAP,CAAa,iCAAiCH,MAAM,CAACI,QAAP,EAA9C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,CAHD",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import DiscordBot from \"./Bot\";\r\nimport logger from \"./Logger\";\r\n\r\nconst PRODUCTION_TOKEN = '';\r\nconst DEV_TOKEN = '';\r\n\r\nconst mode = process.env.NODE_ENV;\r\n\r\nnew DiscordBot(mode === 'development' ? DEV_TOKEN : PRODUCTION_TOKEN);\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n    logger.error('Unhandled promise rejection ' + reason.toString());\r\n    console.log(reason);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303705735
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/Bot.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/Bot.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/Bot.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/Bot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "Bot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.VERSION = exports.COMMAND_CHARACTER = void 0;\n\nvar _discord = require(\"discord.js\");\n\nvar _NyaaProvider = _interopRequireDefault(require(\"./NyaaProvider\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nvar _BotGuildInstance = _interopRequireDefault(require(\"./BotGuildInstance\"));\n\nvar _JpopSukiProvider = _interopRequireDefault(require(\"./JpopSukiProvider\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar COMMAND_CHARACTER = '+';\nexports.COMMAND_CHARACTER = COMMAND_CHARACTER;\nvar VERSION = '1.0.1';\nexports.VERSION = VERSION;\n\nvar Bot = /*#__PURE__*/function () {\n  // token = 'Nzg4OTYwNTEzNzk4NTcwMDI2.X9rGvA.5zDGeLfdLuCyb8tJHX5f6F9RQD4';\n  function Bot(token) {\n    _classCallCheck(this, Bot);\n\n    _defineProperty(this, \"bot\", null);\n\n    _defineProperty(this, \"token\", null);\n\n    _defineProperty(this, \"nyaa\", null);\n\n    _defineProperty(this, \"jpop\", null);\n\n    _defineProperty(this, \"subBots\", {});\n\n    this.token = \"Njk2ODgyODc3MTE5NTk0NTIz.XovMwQ.D1XU0MtrPQWipClU9_deRUZlqbk\";\n    this.bot = new _discord.Client();\n    this.nyaa = new _NyaaProvider[\"default\"]();\n    this.jpop = new _JpopSukiProvider[\"default\"]();\n    this.init();\n  }\n\n  _createClass(Bot, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.bot.on('ready', this.onReady.bind(this));\n                this.bot.login(this.token);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"onReady\",\n    value: function () {\n      var _onReady = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _iterator, _step, guild;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _Logger[\"default\"].info(\"Bot is now ready, working as \".concat(this.bot.user.tag));\n\n                _iterator = _createForOfIteratorHelper(this.bot.guilds.cache);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    guild = _step.value;\n\n                    _Logger[\"default\"].info(\"Preparing cache for \" + guild[0].toString());\n\n                    this.subBots[guild[0]] = new _BotGuildInstance[\"default\"](guild[0], this.bot, this.nyaa, this.jpop);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                this.bot.user.setActivity('hardcore rawre porn', {\n                  type: 'WATCHING'\n                });\n                this.bot.on('message', this.onMessage.bind(this));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onReady() {\n        return _onReady.apply(this, arguments);\n      }\n\n      return onReady;\n    }()\n  }, {\n    key: \"onMessage\",\n    value: function () {\n      var _onMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(msg) {\n        var guildID, content, space, command;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.bot.user.id === msg.author.id)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                guildID = msg.channel.guild.id;\n                content = msg.content;\n\n                if (!content.startsWith(COMMAND_CHARACTER)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                space = content.indexOf(' ');\n                command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\n\n                if (command in this.subBots[guildID].commands) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                _context3.next = 11;\n                return this.subBots[guildID].allowedToCommand(msg);\n\n              case 11:\n                if (_context3.sent) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 14;\n                return msg.channel.send(\"rude bitch not allowed\");\n\n              case 14:\n                return _context3.abrupt(\"return\");\n\n              case 15:\n                _context3.next = 17;\n                return this.subBots[guildID].commands[command](msg);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onMessage(_x) {\n        return _onMessage.apply(this, arguments);\n      }\n\n      return onMessage;\n    }()\n  }]);\n\n  return Bot;\n}();\n\nvar _default = Bot;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvdC5qcyJdLCJuYW1lcyI6WyJDT01NQU5EX0NIQVJBQ1RFUiIsIlZFUlNJT04iLCJCb3QiLCJ0b2tlbiIsImJvdCIsIkNsaWVudCIsIm55YWEiLCJOeWFhUHJvdmlkZXIiLCJqcG9wIiwiSnBvcFN1a2lQcm92aWRlciIsImluaXQiLCJvbiIsIm9uUmVhZHkiLCJiaW5kIiwibG9naW4iLCJsb2dnZXIiLCJpbmZvIiwidXNlciIsInRhZyIsImd1aWxkcyIsImNhY2hlIiwiZ3VpbGQiLCJ0b1N0cmluZyIsInN1YkJvdHMiLCJCb3RHdWlsZEluc3RhbmNlIiwic2V0QWN0aXZpdHkiLCJ0eXBlIiwib25NZXNzYWdlIiwibXNnIiwiaWQiLCJhdXRob3IiLCJndWlsZElEIiwiY2hhbm5lbCIsImNvbnRlbnQiLCJzdGFydHNXaXRoIiwic3BhY2UiLCJpbmRleE9mIiwiY29tbWFuZCIsInN1YnN0cmluZyIsImxlbmd0aCIsImNvbW1hbmRzIiwiYWxsb3dlZFRvQ29tbWFuZCIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLElBQU1BLGlCQUFpQixHQUFHLEdBQTFCOztBQUNBLElBQU1DLE9BQU8sR0FBRyxPQUFoQjs7O0lBRURDLEc7QUFHRjtBQUtBLGVBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQSxpQ0FQYixJQU9hOztBQUFBLG1DQU5iLElBTWE7O0FBQUEsa0NBSlosSUFJWTs7QUFBQSxrQ0FIWixJQUdZOztBQUFBLHFDQUZULEVBRVM7O0FBQ2YsU0FBS0EsS0FBTCxHQUFhLDZEQUFiO0FBQ0EsU0FBS0MsR0FBTCxHQUFXLElBQUlDLGVBQUosRUFBWDtBQUNBLFNBQUtDLElBQUwsR0FBWSxJQUFJQyx3QkFBSixFQUFaO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLElBQUlDLDRCQUFKLEVBQVo7QUFDQSxTQUFLQyxJQUFMO0FBQ0g7Ozs7Ozs7Ozs7QUFHRyxxQkFBS04sR0FBTCxDQUFTTyxFQUFULENBQVksT0FBWixFQUFxQixLQUFLQyxPQUFMLENBQWFDLElBQWIsQ0FBa0IsSUFBbEIsQ0FBckI7QUFDQSxxQkFBS1QsR0FBTCxDQUFTVSxLQUFULENBQWUsS0FBS1gsS0FBcEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUFZLG1DQUFPQyxJQUFQLHdDQUE0QyxLQUFLWixHQUFMLENBQVNhLElBQVQsQ0FBY0MsR0FBMUQ7O3VEQUVrQixLQUFLZCxHQUFMLENBQVNlLE1BQVQsQ0FBZ0JDLEs7OztBQUFsQyxzRUFBeUM7QUFBaENDLG9CQUFBQSxLQUFnQzs7QUFDckNOLHVDQUFPQyxJQUFQLENBQVkseUJBQXlCSyxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNDLFFBQVQsRUFBckM7O0FBQ0EseUJBQUtDLE9BQUwsQ0FBYUYsS0FBSyxDQUFDLENBQUQsQ0FBbEIsSUFBeUIsSUFBSUcsNEJBQUosQ0FBcUJILEtBQUssQ0FBQyxDQUFELENBQTFCLEVBQStCLEtBQUtqQixHQUFwQyxFQUF5QyxLQUFLRSxJQUE5QyxFQUFvRCxLQUFLRSxJQUF6RCxDQUF6QjtBQUNIOzs7Ozs7O0FBRUQscUJBQUtKLEdBQUwsQ0FBU2EsSUFBVCxDQUFjUSxXQUFkLENBQTBCLHFCQUExQixFQUFpRDtBQUFDQyxrQkFBQUEsSUFBSSxFQUFFO0FBQVAsaUJBQWpEO0FBQ0EscUJBQUt0QixHQUFMLENBQVNPLEVBQVQsQ0FBWSxTQUFaLEVBQXVCLEtBQUtnQixTQUFMLENBQWVkLElBQWYsQ0FBb0IsSUFBcEIsQ0FBdkI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUdBR1llLEc7Ozs7OztzQkFDUixLQUFLeEIsR0FBTCxDQUFTYSxJQUFULENBQWNZLEVBQWQsS0FBcUJELEdBQUcsQ0FBQ0UsTUFBSixDQUFXRCxFOzs7Ozs7OztBQUk5QkUsZ0JBQUFBLE8sR0FBVUgsR0FBRyxDQUFDSSxPQUFKLENBQVlYLEtBQVosQ0FBa0JRLEU7QUFFNUJJLGdCQUFBQSxPLEdBQVVMLEdBQUcsQ0FBQ0ssTzs7cUJBQ2hCQSxPQUFPLENBQUNDLFVBQVIsQ0FBbUJsQyxpQkFBbkIsQzs7Ozs7QUFDTW1DLGdCQUFBQSxLLEdBQVFGLE9BQU8sQ0FBQ0csT0FBUixDQUFnQixHQUFoQixDO0FBQ1JDLGdCQUFBQSxPLEdBQVVKLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQnRDLGlCQUFpQixDQUFDdUMsTUFBcEMsRUFBNENKLEtBQUssS0FBSyxDQUFDLENBQVgsR0FBZUYsT0FBTyxDQUFDTSxNQUF2QixHQUFnQ0osS0FBNUUsQzs7b0JBQ1ZFLE9BQU8sSUFBSSxLQUFLZCxPQUFMLENBQWFRLE9BQWIsRUFBc0JTLFE7Ozs7Ozs7Ozt1QkFJNUIsS0FBS2pCLE9BQUwsQ0FBYVEsT0FBYixFQUFzQlUsZ0JBQXRCLENBQXVDYixHQUF2QyxDOzs7Ozs7Ozs7dUJBQ0RBLEdBQUcsQ0FBQ0ksT0FBSixDQUFZVSxJQUFaLENBQWlCLHdCQUFqQixDOzs7Ozs7O3VCQUlKLEtBQUtuQixPQUFMLENBQWFRLE9BQWIsRUFBc0JTLFFBQXRCLENBQStCSCxPQUEvQixFQUF3Q1QsR0FBeEMsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBS0gxQixHIiwic291cmNlUm9vdCI6Ii9ob21lL3Rhc2hpL0Rlc2t0b3AvbnlhYm90LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2xpZW50fSBmcm9tICdkaXNjb3JkLmpzJztcclxuaW1wb3J0IE55YWFQcm92aWRlciBmcm9tIFwiLi9OeWFhUHJvdmlkZXJcIjtcclxuaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi9Mb2dnZXJcIjtcclxuaW1wb3J0IEJvdEd1aWxkSW5zdGFuY2UgZnJvbSBcIi4vQm90R3VpbGRJbnN0YW5jZVwiO1xyXG5pbXBvcnQgSnBvcFN1a2lQcm92aWRlciBmcm9tIFwiLi9KcG9wU3VraVByb3ZpZGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgQ09NTUFORF9DSEFSQUNURVIgPSAnKyc7XHJcbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzEuMC4xJztcclxuXHJcbmNsYXNzIEJvdCB7XHJcbiAgICBib3QgPSBudWxsO1xyXG4gICAgdG9rZW49bnVsbDtcclxuICAgIC8vIHRva2VuID0gJ056ZzRPVFl3TlRFek56azROVGN3TURJMi5YOXJHdkEuNXpER2VMZmRMdUN5Yjh0SkhYNWY2RjlSUUQ0JztcclxuICAgIG55YWEgPSBudWxsO1xyXG4gICAganBvcCA9IG51bGw7XHJcbiAgICBzdWJCb3RzID0ge307XHJcblxyXG4gICAgY29uc3RydWN0b3IodG9rZW4pIHtcclxuICAgICAgICB0aGlzLnRva2VuID0gXCJOamsyT0RneU9EYzNNVEU1TlRrME5USXouWG92TXdRLkQxWFUwTXRyUFFXaXBDbFU5X2RlUlVabHFia1wiO1xyXG4gICAgICAgIHRoaXMuYm90ID0gbmV3IENsaWVudCgpO1xyXG4gICAgICAgIHRoaXMubnlhYSA9IG5ldyBOeWFhUHJvdmlkZXIoKTtcclxuICAgICAgICB0aGlzLmpwb3AgPSBuZXcgSnBvcFN1a2lQcm92aWRlcigpO1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5ib3Qub24oJ3JlYWR5JywgdGhpcy5vblJlYWR5LmJpbmQodGhpcykpO1xyXG4gICAgICAgIHRoaXMuYm90LmxvZ2luKHRoaXMudG9rZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIG9uUmVhZHkoKSB7XHJcbiAgICAgICAgbG9nZ2VyLmluZm8oYEJvdCBpcyBub3cgcmVhZHksIHdvcmtpbmcgYXMgJHt0aGlzLmJvdC51c2VyLnRhZ31gKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZ3VpbGQgb2YgdGhpcy5ib3QuZ3VpbGRzLmNhY2hlKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwiUHJlcGFyaW5nIGNhY2hlIGZvciBcIiArIGd1aWxkWzBdLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICB0aGlzLnN1YkJvdHNbZ3VpbGRbMF1dID0gbmV3IEJvdEd1aWxkSW5zdGFuY2UoZ3VpbGRbMF0sIHRoaXMuYm90LCB0aGlzLm55YWEsIHRoaXMuanBvcCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJvdC51c2VyLnNldEFjdGl2aXR5KCdoYXJkY29yZSByYXdyZSBwb3JuJywge3R5cGU6ICdXQVRDSElORyd9KTtcclxuICAgICAgICB0aGlzLmJvdC5vbignbWVzc2FnZScsIHRoaXMub25NZXNzYWdlLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIG9uTWVzc2FnZShtc2cpIHtcclxuICAgICAgICBpZiAodGhpcy5ib3QudXNlci5pZCA9PT0gbXNnLmF1dGhvci5pZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBndWlsZElEID0gbXNnLmNoYW5uZWwuZ3VpbGQuaWQ7XHJcblxyXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBtc2cuY29udGVudDtcclxuICAgICAgICBpZiAoY29udGVudC5zdGFydHNXaXRoKENPTU1BTkRfQ0hBUkFDVEVSKSkge1xyXG4gICAgICAgICAgICBjb25zdCBzcGFjZSA9IGNvbnRlbnQuaW5kZXhPZignICcpO1xyXG4gICAgICAgICAgICBjb25zdCBjb21tYW5kID0gY29udGVudC5zdWJzdHJpbmcoQ09NTUFORF9DSEFSQUNURVIubGVuZ3RoLCBzcGFjZSA9PT0gLTEgPyBjb250ZW50Lmxlbmd0aCA6IHNwYWNlKTtcclxuICAgICAgICAgICAgaWYgKCEoY29tbWFuZCBpbiB0aGlzLnN1YkJvdHNbZ3VpbGRJRF0uY29tbWFuZHMpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghYXdhaXQgdGhpcy5zdWJCb3RzW2d1aWxkSURdLmFsbG93ZWRUb0NvbW1hbmQobXNnKSkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgbXNnLmNoYW5uZWwuc2VuZChcInJ1ZGUgYml0Y2ggbm90IGFsbG93ZWRcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc3ViQm90c1tndWlsZElEXS5jb21tYW5kc1tjb21tYW5kXShtc2cpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm90OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Bot.js"
      ],
      "names": [
        "COMMAND_CHARACTER",
        "VERSION",
        "Bot",
        "token",
        "bot",
        "Client",
        "nyaa",
        "NyaaProvider",
        "jpop",
        "JpopSukiProvider",
        "init",
        "on",
        "onReady",
        "bind",
        "login",
        "logger",
        "info",
        "user",
        "tag",
        "guilds",
        "cache",
        "guild",
        "toString",
        "subBots",
        "BotGuildInstance",
        "setActivity",
        "type",
        "onMessage",
        "msg",
        "id",
        "author",
        "guildID",
        "channel",
        "content",
        "startsWith",
        "space",
        "indexOf",
        "command",
        "substring",
        "length",
        "commands",
        "allowedToCommand",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,iBAAiB,GAAG,GAA1B;;AACA,IAAMC,OAAO,GAAG,OAAhB;;;IAEDC,G;AAGF;AAKA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,iCAPb,IAOa;;AAAA,mCANb,IAMa;;AAAA,kCAJZ,IAIY;;AAAA,kCAHZ,IAGY;;AAAA,qCAFT,EAES;;AACf,SAAKA,KAAL,GAAa,6DAAb;AACA,SAAKC,GAAL,GAAW,IAAIC,eAAJ,EAAX;AACA,SAAKC,IAAL,GAAY,IAAIC,wBAAJ,EAAZ;AACA,SAAKC,IAAL,GAAY,IAAIC,4BAAJ,EAAZ;AACA,SAAKC,IAAL;AACH;;;;;;;;;;AAGG,qBAAKN,GAAL,CAASO,EAAT,CAAY,OAAZ,EAAqB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAArB;AACA,qBAAKT,GAAL,CAASU,KAAT,CAAe,KAAKX,KAApB;;;;;;;;;;;;;;;;;;;;;;;;;;AAIAY,mCAAOC,IAAP,wCAA4C,KAAKZ,GAAL,CAASa,IAAT,CAAcC,GAA1D;;uDAEkB,KAAKd,GAAL,CAASe,MAAT,CAAgBC,K;;;AAAlC,sEAAyC;AAAhCC,oBAAAA,KAAgC;;AACrCN,uCAAOC,IAAP,CAAY,yBAAyBK,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,EAArC;;AACA,yBAAKC,OAAL,CAAaF,KAAK,CAAC,CAAD,CAAlB,IAAyB,IAAIG,4BAAJ,CAAqBH,KAAK,CAAC,CAAD,CAA1B,EAA+B,KAAKjB,GAApC,EAAyC,KAAKE,IAA9C,EAAoD,KAAKE,IAAzD,CAAzB;AACH;;;;;;;AAED,qBAAKJ,GAAL,CAASa,IAAT,CAAcQ,WAAd,CAA0B,qBAA1B,EAAiD;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAAjD;AACA,qBAAKtB,GAAL,CAASO,EAAT,CAAY,SAAZ,EAAuB,KAAKgB,SAAL,CAAed,IAAf,CAAoB,IAApB,CAAvB;;;;;;;;;;;;;;;;;;;iGAGYe,G;;;;;;sBACR,KAAKxB,GAAL,CAASa,IAAT,CAAcY,EAAd,KAAqBD,GAAG,CAACE,MAAJ,CAAWD,E;;;;;;;;AAI9BE,gBAAAA,O,GAAUH,GAAG,CAACI,OAAJ,CAAYX,KAAZ,CAAkBQ,E;AAE5BI,gBAAAA,O,GAAUL,GAAG,CAACK,O;;qBAChBA,OAAO,CAACC,UAAR,CAAmBlC,iBAAnB,C;;;;;AACMmC,gBAAAA,K,GAAQF,OAAO,CAACG,OAAR,CAAgB,GAAhB,C;AACRC,gBAAAA,O,GAAUJ,OAAO,CAACK,SAAR,CAAkBtC,iBAAiB,CAACuC,MAApC,EAA4CJ,KAAK,KAAK,CAAC,CAAX,GAAeF,OAAO,CAACM,MAAvB,GAAgCJ,KAA5E,C;;oBACVE,OAAO,IAAI,KAAKd,OAAL,CAAaQ,OAAb,EAAsBS,Q;;;;;;;;;uBAI5B,KAAKjB,OAAL,CAAaQ,OAAb,EAAsBU,gBAAtB,CAAuCb,GAAvC,C;;;;;;;;;uBACDA,GAAG,CAACI,OAAJ,CAAYU,IAAZ,CAAiB,wBAAjB,C;;;;;;;uBAIJ,KAAKnB,OAAL,CAAaQ,OAAb,EAAsBS,QAAtB,CAA+BH,OAA/B,EAAwCT,GAAxC,C;;;;;;;;;;;;;;;;;;;;;eAKH1B,G",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import {Client} from 'discord.js';\r\nimport NyaaProvider from \"./NyaaProvider\";\r\nimport logger from \"./Logger\";\r\nimport BotGuildInstance from \"./BotGuildInstance\";\r\nimport JpopSukiProvider from \"./JpopSukiProvider\";\r\n\r\nexport const COMMAND_CHARACTER = '+';\r\nexport const VERSION = '1.0.1';\r\n\r\nclass Bot {\r\n    bot = null;\r\n    token=null;\r\n    // token = 'Nzg4OTYwNTEzNzk4NTcwMDI2.X9rGvA.5zDGeLfdLuCyb8tJHX5f6F9RQD4';\r\n    nyaa = null;\r\n    jpop = null;\r\n    subBots = {};\r\n\r\n    constructor(token) {\r\n        this.token = \"Njk2ODgyODc3MTE5NTk0NTIz.XovMwQ.D1XU0MtrPQWipClU9_deRUZlqbk\";\r\n        this.bot = new Client();\r\n        this.nyaa = new NyaaProvider();\r\n        this.jpop = new JpopSukiProvider();\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        this.bot.on('ready', this.onReady.bind(this));\r\n        this.bot.login(this.token);\r\n    }\r\n\r\n    async onReady() {\r\n        logger.info(`Bot is now ready, working as ${this.bot.user.tag}`);\r\n\r\n        for (let guild of this.bot.guilds.cache) {\r\n            logger.info(\"Preparing cache for \" + guild[0].toString());\r\n            this.subBots[guild[0]] = new BotGuildInstance(guild[0], this.bot, this.nyaa, this.jpop);\r\n        }\r\n\r\n        this.bot.user.setActivity('hardcore rawre porn', {type: 'WATCHING'});\r\n        this.bot.on('message', this.onMessage.bind(this));\r\n    }\r\n\r\n    async onMessage(msg) {\r\n        if (this.bot.user.id === msg.author.id) {\r\n            return;\r\n        }\r\n\r\n        const guildID = msg.channel.guild.id;\r\n\r\n        const content = msg.content;\r\n        if (content.startsWith(COMMAND_CHARACTER)) {\r\n            const space = content.indexOf(' ');\r\n            const command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\r\n            if (!(command in this.subBots[guildID].commands)) {\r\n                return;\r\n            }\r\n\r\n            if (!await this.subBots[guildID].allowedToCommand(msg)) {\r\n                await msg.channel.send(\"rude bitch not allowed\");\r\n                return;\r\n            }\r\n\r\n            await this.subBots[guildID].commands[command](msg);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bot;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611308174527
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/NyaaProvider.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "NyaaProvider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _rssParser = _interopRequireDefault(require(\"rss-parser\"));\n\nvar _parseTorrentName = _interopRequireDefault(require(\"parse-torrent-name\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NyaaProvider = /*#__PURE__*/function () {\n  function NyaaProvider() {\n    _classCallCheck(this, NyaaProvider);\n\n    _defineProperty(this, \"baseURL\", 'https://nyaa.si/');\n\n    _defineProperty(this, \"parser\", null);\n\n    _defineProperty(this, \"regex\", null);\n\n    _defineProperty(this, \"episodeRegex\", null);\n\n    this.parser = new _rssParser[\"default\"]({\n      customFields: {\n        item: [['nyaa:seeders', 'seeders'], ['nyaa:leechers', 'leechers'], ['nyaa:downloads', 'downloads'], ['nyaa:size', 'size']]\n      }\n    });\n    this.regex = /(\\[(.+?)])(.+)(\\[(.+?)])/;\n    this.episodeRegex = /(\\d+)(v\\d+)?[-~]?(\\d+)?/g;\n  }\n\n  _createClass(NyaaProvider, [{\n    key: \"getResults\",\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {\n        var params,\n            result,\n            parsed,\n            items,\n            _iterator,\n            _step,\n            i,\n            _this$parseTitle,\n            _this$parseTitle2,\n            group,\n            resolution,\n            episodeMain,\n            episodeSecondary,\n            showname,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n                  f: 0,\n                  c: '1_2'\n                };\n                _context.next = 3;\n                return _axios[\"default\"].get(this.baseURL, {\n                  params: _objectSpread({\n                    page: 'rss',\n                    q: query\n                  }, params)\n                });\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return this.parser.parseString(result.data);\n\n              case 6:\n                parsed = _context.sent;\n\n                if (!(!('items' in parsed) || !parsed.items.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", []);\n\n              case 9:\n                items = [];\n                _iterator = _createForOfIteratorHelper(parsed.items.reverse());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    _this$parseTitle = this.parseTitle(i.title), _this$parseTitle2 = _slicedToArray(_this$parseTitle, 5), group = _this$parseTitle2[0], resolution = _this$parseTitle2[1], episodeMain = _this$parseTitle2[2], episodeSecondary = _this$parseTitle2[3], showname = _this$parseTitle2[4];\n                    items.push(_objectSpread(_objectSpread({}, i), {\n                      group: group,\n                      resolution: resolution,\n                      episodeMain: episodeMain,\n                      episodeSecondary: episodeSecondary,\n                      showName: showname\n                    }));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context.abrupt(\"return\", items);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResults(_x) {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }, {\n    key: \"parseTitle\",\n    value: function parseTitle(title) {\n      var okay = false,\n          group,\n          resolution,\n          episodeMain,\n          episodeSecondary,\n          showname;\n      var functions = [this.parseGeneric.bind(this), this.parseFromPtn.bind(this)];\n\n      for (var i = 0; i < functions.length; i++) {\n        var _functions$i = functions[i](title);\n\n        var _functions$i2 = _slicedToArray(_functions$i, 6);\n\n        okay = _functions$i2[0];\n        group = _functions$i2[1];\n        resolution = _functions$i2[2];\n        episodeMain = _functions$i2[3];\n        episodeSecondary = _functions$i2[4];\n        showname = _functions$i2[5];\n\n        if (okay) {\n          break;\n        }\n      }\n\n      return [group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"parseGeneric\",\n    value: function parseGeneric(title) {\n      var found = this.regex.exec(title);\n      var f, left, group, showname, right, resolution;\n      var episodeMain, episodeSecondary;\n\n      if (found === null) {\n        return [false, null, null, null, null, null];\n      }\n\n      var _found = _slicedToArray(found, 6);\n\n      f = _found[0];\n      left = _found[1];\n      group = _found[2];\n      showname = _found[3];\n      right = _found[4];\n      resolution = _found[5];\n\n      var _this$getEpisodeMatch = this.getEpisodeMatch(showname);\n\n      var _this$getEpisodeMatch2 = _slicedToArray(_this$getEpisodeMatch, 2);\n\n      episodeMain = _this$getEpisodeMatch2[0];\n      episodeSecondary = _this$getEpisodeMatch2[1];\n      return [true, group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"parseFromPtn\",\n    value: function parseFromPtn(title) {\n      var results = (0, _parseTorrentName[\"default\"])(title);\n      var group = _lodash[\"default\"].isUndefined(results.website) ? _lodash[\"default\"].isUndefined(results.group) ? 'Unknown' : results.group : results.website;\n      var resolution = _lodash[\"default\"].isUndefined(results.resolution) ? 'Unknown' : results.resolution;\n\n      var _this$getEpisodeMatch3 = this.getEpisodeMatch(results.title),\n          _this$getEpisodeMatch4 = _slicedToArray(_this$getEpisodeMatch3, 2),\n          episodeMain = _this$getEpisodeMatch4[0],\n          episodeSecondary = _this$getEpisodeMatch4[1];\n\n      if (_lodash[\"default\"].isUndefined(episodeMain)) {\n        var _this$getEpisodeMatch5 = this.getEpisodeMatch(title);\n\n        var _this$getEpisodeMatch6 = _slicedToArray(_this$getEpisodeMatch5, 2);\n\n        episodeMain = _this$getEpisodeMatch6[0];\n        episodeSecondary = _this$getEpisodeMatch6[1];\n      }\n\n      var showname = _lodash[\"default\"].isUndefined(results.title) ? title : results.title;\n      return [true, group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"getEpisodeMatch\",\n    value: function getEpisodeMatch(part) {\n      var firstNonNameCharacter = [part.indexOf('(', 1), part.indexOf('[', 1)];\n\n      while (true) {\n        var index = firstNonNameCharacter.indexOf(-1);\n\n        if (index === -1) {\n          break;\n        }\n\n        firstNonNameCharacter.splice(index, 1);\n      }\n\n      if (firstNonNameCharacter.length) {\n        var _index = _lodash[\"default\"].min(firstNonNameCharacter);\n\n        if (!_lodash[\"default\"].isUndefined(_index)) {\n          part = part.substring(0, _index).trim();\n        }\n      }\n\n      var lastFoundMatch = null;\n      var episodeMain, episodeSecondary, version, f;\n      var match = null;\n\n      while ((match = this.episodeRegex.exec(part)) !== null) {\n        lastFoundMatch = match;\n      }\n\n      if (lastFoundMatch !== null) {\n        var _lastFoundMatch = lastFoundMatch;\n\n        var _lastFoundMatch2 = _slicedToArray(_lastFoundMatch, 4);\n\n        f = _lastFoundMatch2[0];\n        episodeMain = _lastFoundMatch2[1];\n        version = _lastFoundMatch2[2];\n        episodeSecondary = _lastFoundMatch2[3];\n        episodeMain = parseInt(episodeMain);\n\n        if (!_lodash[\"default\"].isUndefined(episodeSecondary)) {\n          episodeSecondary = parseInt(episodeSecondary);\n        }\n      }\n\n      return [episodeMain, episodeSecondary];\n    }\n  }]);\n\n  return NyaaProvider;\n}();\n\nvar _default = NyaaProvider;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "NyaaProvider.js"
      ],
      "names": [
        "NyaaProvider",
        "parser",
        "Parser",
        "customFields",
        "item",
        "regex",
        "episodeRegex",
        "query",
        "params",
        "f",
        "c",
        "axios",
        "get",
        "baseURL",
        "page",
        "q",
        "result",
        "parseString",
        "data",
        "parsed",
        "items",
        "length",
        "reverse",
        "i",
        "parseTitle",
        "title",
        "group",
        "resolution",
        "episodeMain",
        "episodeSecondary",
        "showname",
        "push",
        "showName",
        "okay",
        "functions",
        "parseGeneric",
        "bind",
        "parseFromPtn",
        "found",
        "exec",
        "left",
        "right",
        "getEpisodeMatch",
        "results",
        "_",
        "isUndefined",
        "website",
        "part",
        "firstNonNameCharacter",
        "indexOf",
        "index",
        "splice",
        "min",
        "substring",
        "trim",
        "lastFoundMatch",
        "version",
        "match",
        "parseInt"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import axios from \"axios\";\r\nimport Parser from \"rss-parser\";\r\nimport ptn from \"parse-torrent-name\";\r\nimport _ from \"lodash\";\r\n\r\nclass NyaaProvider {\r\n    baseURL = 'https://nyaa.si/';\r\n    parser = null;\r\n    regex = null;\r\n    episodeRegex = null;\r\n\r\n    constructor() {\r\n        this.parser = new Parser({\r\n            customFields: {\r\n                item: [['nyaa:seeders', 'seeders'], ['nyaa:leechers', 'leechers'], ['nyaa:downloads', 'downloads'], ['nyaa:size', 'size']]\r\n            }\r\n        });\r\n\r\n        this.regex = /(\\[(.+?)])(.+)(\\[(.+?)])/;\r\n        this.episodeRegex = /(\\d+)(v\\d+)?[-~]?(\\d+)?/g;\r\n    }\r\n\r\n    async getResults(query, params = {f: 0, c: '1_2'}) {\r\n        const result = await axios.get(this.baseURL, {\r\n            params: {\r\n                page: 'rss',\r\n                q: query,\r\n                ...params\r\n            }\r\n        });\r\n\r\n        const parsed = await this.parser.parseString(result.data);\r\n        if (!('items' in parsed) || !parsed.items.length) {\r\n            return [];\r\n        }\r\n\r\n        let items = [];\r\n\r\n        for (let i of parsed.items.reverse()) {\r\n            let [group, resolution, episodeMain, episodeSecondary, showname] = this.parseTitle(i.title);\r\n\r\n            items.push({\r\n                ...i,\r\n                ...{\r\n                    group,\r\n                    resolution,\r\n                    episodeMain,\r\n                    episodeSecondary,\r\n                    showName: showname\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    parseTitle(title) {\r\n        let okay = false,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname;\r\n\r\n        const functions = [this.parseGeneric.bind(this), this.parseFromPtn.bind(this)];\r\n        for (let i = 0; i < functions.length; i++) {\r\n            [okay, group, resolution, episodeMain, episodeSecondary, showname] = functions[i](title);\r\n            if (okay) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return [\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    parseGeneric(title) {\r\n        const found = this.regex.exec(title);\r\n        let f, left, group, showname, right, resolution;\r\n        let episodeMain, episodeSecondary;\r\n\r\n        if (found === null) {\r\n            return [\r\n                false,\r\n                null,\r\n                null,\r\n                null,\r\n                null,\r\n                null\r\n            ];\r\n        }\r\n\r\n        [f, left, group, showname, right, resolution] = found;\r\n\r\n        [episodeMain, episodeSecondary] = this.getEpisodeMatch(showname);\r\n\r\n        return [\r\n            true,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    parseFromPtn(title) {\r\n        let results = ptn(title);\r\n        const group = _.isUndefined(results.website) ? (_.isUndefined(results.group) ? 'Unknown' : results.group) : results.website;\r\n        const resolution = _.isUndefined(results.resolution) ? 'Unknown' : results.resolution;\r\n        let [episodeMain, episodeSecondary] = this.getEpisodeMatch(results.title);\r\n        if (_.isUndefined(episodeMain)) {\r\n            [episodeMain, episodeSecondary] = this.getEpisodeMatch(title);\r\n        }\r\n        let showname = _.isUndefined(results.title) ? title : results.title;\r\n\r\n        return [\r\n            true,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    getEpisodeMatch(part) {\r\n        let firstNonNameCharacter = [part.indexOf('(', 1), part.indexOf('[', 1)];\r\n        while (true) {\r\n            let index = firstNonNameCharacter.indexOf(-1);\r\n            if (index === -1) {\r\n                break;\r\n            }\r\n\r\n            firstNonNameCharacter.splice(index, 1);\r\n        }\r\n\r\n        if (firstNonNameCharacter.length) {\r\n            let index = _.min(firstNonNameCharacter);\r\n            if (!_.isUndefined(index)) {\r\n                part = part.substring(0, index).trim();\r\n            }\r\n        }\r\n\r\n        let lastFoundMatch = null;\r\n        let episodeMain, episodeSecondary, version, f;\r\n        let match = null;\r\n        while ((match = this.episodeRegex.exec(part)) !== null) {\r\n            lastFoundMatch = match;\r\n        }\r\n\r\n        if (lastFoundMatch !== null) {\r\n            [f, episodeMain, version, episodeSecondary] = lastFoundMatch;\r\n            episodeMain = parseInt(episodeMain);\r\n            if (!_.isUndefined(episodeSecondary)) {\r\n                episodeSecondary = parseInt(episodeSecondary);\r\n            }\r\n        }\r\n\r\n        return [\r\n            episodeMain,\r\n            episodeSecondary\r\n        ];\r\n    }\r\n}\r\n\r\nexport default NyaaProvider;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303518916
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/Logger.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/Logger.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/Logger.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/Logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "Logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _winston = require(\"winston\");\n\nvar combine = _winston.format.combine,\n    timestamp = _winston.format.timestamp,\n    printf = _winston.format.printf;\nvar myFormat = printf(function (_ref) {\n  var level = _ref.level,\n      message = _ref.message,\n      timestamp = _ref.timestamp;\n  return \"[\".concat(timestamp, \"][\").concat(level, \"]: \").concat(message);\n});\n\nvar _default = (0, _winston.createLogger)({\n  format: combine(timestamp(), myFormat),\n  transports: [new _winston.transports.File({\n    filename: 'nyabot.log',\n    handleExceptions: true\n  })]\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2dlci5qcyJdLCJuYW1lcyI6WyJjb21iaW5lIiwiZm9ybWF0IiwidGltZXN0YW1wIiwicHJpbnRmIiwibXlGb3JtYXQiLCJsZXZlbCIsIm1lc3NhZ2UiLCJ0cmFuc3BvcnRzIiwiRmlsZSIsImZpbGVuYW1lIiwiaGFuZGxlRXhjZXB0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztJQUNPQSxPLEdBQThCQyxlLENBQTlCRCxPO0lBQVNFLFMsR0FBcUJELGUsQ0FBckJDLFM7SUFBV0MsTSxHQUFVRixlLENBQVZFLE07QUFFM0IsSUFBTUMsUUFBUSxHQUFHRCxNQUFNLENBQUMsZ0JBQW9DO0FBQUEsTUFBakNFLEtBQWlDLFFBQWpDQSxLQUFpQztBQUFBLE1BQTFCQyxPQUEwQixRQUExQkEsT0FBMEI7QUFBQSxNQUFoQkosU0FBZ0IsUUFBaEJBLFNBQWdCO0FBQ3hELG9CQUFXQSxTQUFYLGVBQXlCRyxLQUF6QixnQkFBb0NDLE9BQXBDO0FBQ0gsQ0FGc0IsQ0FBdkI7O2VBSWUsMkJBQWE7QUFDeEJMLEVBQUFBLE1BQU0sRUFBRUQsT0FBTyxDQUNYRSxTQUFTLEVBREUsRUFFWEUsUUFGVyxDQURTO0FBS3hCRyxFQUFBQSxVQUFVLEVBQUUsQ0FDUixJQUFJQSxvQkFBV0MsSUFBZixDQUFvQjtBQUNoQkMsSUFBQUEsUUFBUSxFQUFFLFlBRE07QUFFaEJDLElBQUFBLGdCQUFnQixFQUFFO0FBRkYsR0FBcEIsQ0FEUTtBQUxZLENBQWIsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YXNoaS9EZXNrdG9wL255YWJvdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUxvZ2dlciwgdHJhbnNwb3J0cywgZm9ybWF0fSBmcm9tIFwid2luc3RvblwiO1xyXG5jb25zdCB7Y29tYmluZSwgdGltZXN0YW1wLCBwcmludGZ9ID0gZm9ybWF0O1xyXG5cclxuY29uc3QgbXlGb3JtYXQgPSBwcmludGYoKHsgbGV2ZWwsIG1lc3NhZ2UsICB0aW1lc3RhbXAgfSkgPT4ge1xyXG4gICAgcmV0dXJuIGBbJHt0aW1lc3RhbXB9XVske2xldmVsfV06ICR7bWVzc2FnZX1gO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUxvZ2dlcih7XHJcbiAgICBmb3JtYXQ6IGNvbWJpbmUoXHJcbiAgICAgICAgdGltZXN0YW1wKCksXHJcbiAgICAgICAgbXlGb3JtYXRcclxuICAgICksXHJcbiAgICB0cmFuc3BvcnRzOiBbXHJcbiAgICAgICAgbmV3IHRyYW5zcG9ydHMuRmlsZSh7XHJcbiAgICAgICAgICAgIGZpbGVuYW1lOiAnbnlhYm90LmxvZycsXHJcbiAgICAgICAgICAgIGhhbmRsZUV4Y2VwdGlvbnM6IHRydWVcclxuICAgICAgICB9KVxyXG4gICAgXVxyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Logger.js"
      ],
      "names": [
        "combine",
        "format",
        "timestamp",
        "printf",
        "myFormat",
        "level",
        "message",
        "transports",
        "File",
        "filename",
        "handleExceptions"
      ],
      "mappings": ";;;;;;;AAAA;;IACOA,O,GAA8BC,e,CAA9BD,O;IAASE,S,GAAqBD,e,CAArBC,S;IAAWC,M,GAAUF,e,CAAVE,M;AAE3B,IAAMC,QAAQ,GAAGD,MAAM,CAAC,gBAAoC;AAAA,MAAjCE,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAhBJ,SAAgB,QAAhBA,SAAgB;AACxD,oBAAWA,SAAX,eAAyBG,KAAzB,gBAAoCC,OAApC;AACH,CAFsB,CAAvB;;eAIe,2BAAa;AACxBL,EAAAA,MAAM,EAAED,OAAO,CACXE,SAAS,EADE,EAEXE,QAFW,CADS;AAKxBG,EAAAA,UAAU,EAAE,CACR,IAAIA,oBAAWC,IAAf,CAAoB;AAChBC,IAAAA,QAAQ,EAAE,YADM;AAEhBC,IAAAA,gBAAgB,EAAE;AAFF,GAApB,CADQ;AALY,CAAb,C",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import {createLogger, transports, format} from \"winston\";\r\nconst {combine, timestamp, printf} = format;\r\n\r\nconst myFormat = printf(({ level, message,  timestamp }) => {\r\n    return `[${timestamp}][${level}]: ${message}`;\r\n});\r\n\r\nexport default createLogger({\r\n    format: combine(\r\n        timestamp(),\r\n        myFormat\r\n    ),\r\n    transports: [\r\n        new transports.File({\r\n            filename: 'nyabot.log',\r\n            handleExceptions: true\r\n        })\r\n    ]\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303518588
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/BotGuildInstance.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "BotGuildInstance.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lowdb = _interopRequireDefault(require(\"lowdb\"));\n\nvar _FileAsync = _interopRequireDefault(require(\"lowdb/adapters/FileAsync\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _ogparser = _interopRequireDefault(require(\"ogparser\"));\n\nvar _discord = require(\"discord.js\");\n\nvar _Bot = require(\"./Bot\");\n\nvar _MINIMAL_INTERVAL_TIM;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getNewDatabase = function getNewDatabase(filename) {\n  return new Promise(function (res) {\n    (0, _lowdb[\"default\"])(new _FileAsync[\"default\"](filename + \".json\")).then(function (d) {\n      return res(d);\n    });\n  });\n};\n\nvar NYAA_UPDATES = 'nyaa_updates';\nvar NYAA_ALL = 'nyaa_all';\nvar JPOP_ALL = 'jpop_all';\nvar ALLOWED_CHANNEL_TYPES = [NYAA_UPDATES, NYAA_ALL, JPOP_ALL];\nvar MINIMAL_INTERVAL_TIMES = (_MINIMAL_INTERVAL_TIM = {}, _defineProperty(_MINIMAL_INTERVAL_TIM, NYAA_UPDATES, 30), _defineProperty(_MINIMAL_INTERVAL_TIM, NYAA_ALL, 30), _defineProperty(_MINIMAL_INTERVAL_TIM, JPOP_ALL, 30), _MINIMAL_INTERVAL_TIM);\n\nvar BotGuildInstance = /*#__PURE__*/function () {\n  function BotGuildInstance(guildID, bot, nyaaProvider, jpopSukiProvider) {\n    var _this$timeoutFunction;\n\n    _classCallCheck(this, BotGuildInstance);\n\n    _defineProperty(this, \"guildID\", null);\n\n    _defineProperty(this, \"db\", null);\n\n    _defineProperty(this, \"nyaa\", null);\n\n    _defineProperty(this, \"jpop\", null);\n\n    _defineProperty(this, \"timeout\", {});\n\n    _defineProperty(this, \"bot\", null);\n\n    _defineProperty(this, \"responseChannels\", {});\n\n    this.guildID = guildID;\n    this.bot = bot;\n    this.nyaa = nyaaProvider;\n    this.jpop = jpopSukiProvider;\n    this.commands = {\n      'id': this.channelID.bind(this),\n      'allow': this.allowUser.bind(this),\n      'new': this.addShow.bind(this),\n      'channel': this.setChannel.bind(this),\n      'refresh': this.refreshShows.bind(this),\n      'refreshAll': this.searchAll.bind(this),\n      'refreshJpop': this.searchJpop.bind(this),\n      'timeout': this.setNewTimeout.bind(this),\n      'list': this.listShows.bind(this),\n      'remove': this.removeShow.bind(this),\n      'help': this.showHelp.bind(this)\n    };\n    this.timeoutFunctions = (_this$timeoutFunction = {}, _defineProperty(_this$timeoutFunction, NYAA_UPDATES, this.refreshShows.bind(this)), _defineProperty(_this$timeoutFunction, NYAA_ALL, this.searchAll.bind(this)), _defineProperty(_this$timeoutFunction, JPOP_ALL, this.searchJpop.bind(this)), _this$timeoutFunction);\n    this.readyGuild();\n  }\n\n  _createClass(BotGuildInstance, [{\n    key: \"stopTimeout\",\n    value: function () {\n      var _stopTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var timeoutType,\n            i,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                timeoutType = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n                if (timeoutType === null) {\n                  timeoutType = ALLOWED_CHANNEL_TYPES;\n                }\n\n                if (!_lodash[\"default\"].isArray(timeoutType)) {\n                  timeoutType = [timeoutType];\n                }\n\n                for (i = 0; i < timeoutType.length; i++) {\n                  clearInterval(this.timeout[timeoutType]);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function stopTimeout() {\n        return _stopTimeout.apply(this, arguments);\n      }\n\n      return stopTimeout;\n    }()\n  }, {\n    key: \"internalStartTimeout\",\n    value: function () {\n      var _internalStartTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(timeoutType) {\n        var _this = this;\n\n        var timeoutVal;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.db.get(\"timeout.\".concat(timeoutType)).value();\n\n              case 2:\n                timeoutVal = _context2.sent;\n\n                if (_lodash[\"default\"].isUndefined(timeoutVal)) {\n                  timeoutVal = MINIMAL_INTERVAL_TIMES[timeoutType];\n                }\n\n                timeoutVal = parseInt(timeoutVal);\n\n                _Logger[\"default\"].info(\"Starting interval for \".concat(this.guildID, \" in \").concat(timeoutVal, \" minutes for \").concat(timeoutType));\n\n                timeoutVal *= 60;\n                timeoutVal *= 1000;\n                this.timeout[timeoutType] = setInterval(function () {\n                  _Logger[\"default\"].info(\"Updating list \".concat(_this.guildID));\n\n                  _this.timeoutFunctions[timeoutType]();\n                }, timeoutVal);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function internalStartTimeout(_x) {\n        return _internalStartTimeout.apply(this, arguments);\n      }\n\n      return internalStartTimeout;\n    }()\n  }, {\n    key: \"startTimeout\",\n    value: function () {\n      var _startTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var timeoutType,\n            i,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                timeoutType = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : null;\n                this.stopTimeout(timeoutType);\n\n                if (timeoutType === null) {\n                  timeoutType = ALLOWED_CHANNEL_TYPES;\n                }\n\n                if (!_lodash[\"default\"].isArray(timeoutType)) {\n                  timeoutType = [timeoutType];\n                }\n\n                i = 0;\n\n              case 5:\n                if (!(i < timeoutType.length)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 8;\n                return this.internalStartTimeout(timeoutType[i]);\n\n              case 8:\n                i++;\n                _context3.next = 5;\n                break;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function startTimeout() {\n        return _startTimeout.apply(this, arguments);\n      }\n\n      return startTimeout;\n    }()\n  }, {\n    key: \"readyGuild\",\n    value: function () {\n      var _readyGuild = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getNewDatabase('db_' + this.guildID.toString());\n\n              case 2:\n                this.db = _context4.sent;\n                _context4.next = 5;\n                return this.db.defaults({\n                  server: [],\n                  og: [],\n                  search: [],\n                  rss: [],\n                  channels: [],\n                  timeouts: {},\n                  lastAllRss: null,\n                  lastJpopRss: null\n                }).write();\n\n              case 5:\n                _context4.next = 7;\n                return this.startTimeout();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function readyGuild() {\n        return _readyGuild.apply(this, arguments);\n      }\n\n      return readyGuild;\n    }()\n  }, {\n    key: \"getOG\",\n    value: function () {\n      var _getOG = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(url) {\n        var og, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.db.get('og').find({\n                  url: url\n                }).value();\n\n              case 2:\n                og = _context5.sent;\n\n                if (_lodash[\"default\"].isUndefined(og)) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", og.data);\n\n              case 5:\n                _context5.next = 7;\n                return _ogparser[\"default\"].parse(url);\n\n              case 7:\n                response = _context5.sent;\n                _context5.next = 10;\n                return this.db.get('og').push({\n                  url: url,\n                  data: response\n                }).write();\n\n              case 10:\n                return _context5.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getOG(_x2) {\n        return _getOG.apply(this, arguments);\n      }\n\n      return getOG;\n    }()\n  }, {\n    key: \"searchJpop\",\n    value: function () {\n      var _searchJpop = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var msg,\n            channel,\n            results,\n            lastRssGuid,\n            i,\n            embedFunction,\n            _iterator,\n            _step,\n            item,\n            _args6 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                msg = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : null;\n                _context6.next = 3;\n                return this.getChannel(msg, JPOP_ALL);\n\n              case 3:\n                channel = _context6.sent;\n\n                if (!(channel === null)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(JPOP_ALL));\n\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Updating any jpop results for \".concat(this.guildID));\n\n                _context6.next = 10;\n                return this.jpop.getResults();\n\n              case 10:\n                results = _context6.sent;\n\n                if (results.length) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 13:\n                this.startTimeout(JPOP_ALL);\n                _context6.next = 16;\n                return this.db.get('lastJpopRss').value();\n\n              case 16:\n                lastRssGuid = _context6.sent;\n\n                if (!(!_lodash[\"default\"].isUndefined(lastRssGuid) && lastRssGuid !== null)) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                results = results.reverse();\n                i = 0;\n\n              case 20:\n                if (!(i < results.length)) {\n                  _context6.next = 27;\n                  break;\n                }\n\n                if (!(results[i].guid === lastRssGuid)) {\n                  _context6.next = 24;\n                  break;\n                }\n\n                // all before this\n                results = results.slice(0, i);\n                return _context6.abrupt(\"break\", 27);\n\n              case 24:\n                i++;\n                _context6.next = 20;\n                break;\n\n              case 27:\n                results = results.reverse();\n\n              case 28:\n                if (results.length) {\n                  _context6.next = 30;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 30:\n                _Logger[\"default\"].info(\"Results found for any jpop \".concat(results.length));\n\n                embedFunction = this.getJpopEmbed.bind(this);\n                _iterator = _createForOfIteratorHelper(results);\n                _context6.prev = 33;\n\n                _iterator.s();\n\n              case 35:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 41;\n                  break;\n                }\n\n                item = _step.value;\n                _context6.next = 39;\n                return this.postShow(embedFunction, item, channel);\n\n              case 39:\n                _context6.next = 35;\n                break;\n\n              case 41:\n                _context6.next = 46;\n                break;\n\n              case 43:\n                _context6.prev = 43;\n                _context6.t0 = _context6[\"catch\"](33);\n\n                _iterator.e(_context6.t0);\n\n              case 46:\n                _context6.prev = 46;\n\n                _iterator.f();\n\n                return _context6.finish(46);\n\n              case 49:\n                _context6.next = 51;\n                return this.db.set('lastJpopRss', results[results.length - 1].guid).write();\n\n              case 51:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[33, 43, 46, 49]]);\n      }));\n\n      function searchJpop() {\n        return _searchJpop.apply(this, arguments);\n      }\n\n      return searchJpop;\n    }()\n  }, {\n    key: \"searchAll\",\n    value: function () {\n      var _searchAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var msg,\n            channel,\n            results,\n            lastRssGuid,\n            i,\n            embedFunction,\n            _iterator2,\n            _step2,\n            item,\n            _args7 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                msg = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : null;\n                _context7.next = 3;\n                return this.getChannel(msg, NYAA_ALL);\n\n              case 3:\n                channel = _context7.sent;\n\n                if (!(channel === null)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(NYAA_ALL));\n\n                return _context7.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Updating any nyaa results for \".concat(this.guildID));\n\n                _context7.next = 10;\n                return this.nyaa.getResults(\"\", {});\n\n              case 10:\n                results = _context7.sent;\n\n                if (results.length) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 13:\n                this.startTimeout(NYAA_ALL);\n                _context7.next = 16;\n                return this.db.get('lastAllRss').value();\n\n              case 16:\n                lastRssGuid = _context7.sent;\n\n                if (!(!_lodash[\"default\"].isUndefined(lastRssGuid) && lastRssGuid !== null)) {\n                  _context7.next = 28;\n                  break;\n                }\n\n                results = results.reverse();\n                i = 0;\n\n              case 20:\n                if (!(i < results.length)) {\n                  _context7.next = 27;\n                  break;\n                }\n\n                if (!(results[i].guid === lastRssGuid)) {\n                  _context7.next = 24;\n                  break;\n                }\n\n                // all before this\n                results = results.slice(0, i);\n                return _context7.abrupt(\"break\", 27);\n\n              case 24:\n                i++;\n                _context7.next = 20;\n                break;\n\n              case 27:\n                results = results.reverse();\n\n              case 28:\n                if (results.length) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 30:\n                _Logger[\"default\"].info(\"Results found for any nyaa \".concat(results.length));\n\n                embedFunction = this.getMinorEmbed.bind(this);\n                _iterator2 = _createForOfIteratorHelper(results);\n                _context7.prev = 33;\n\n                _iterator2.s();\n\n              case 35:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context7.next = 41;\n                  break;\n                }\n\n                item = _step2.value;\n                _context7.next = 39;\n                return this.postShow(embedFunction, item, channel);\n\n              case 39:\n                _context7.next = 35;\n                break;\n\n              case 41:\n                _context7.next = 46;\n                break;\n\n              case 43:\n                _context7.prev = 43;\n                _context7.t0 = _context7[\"catch\"](33);\n\n                _iterator2.e(_context7.t0);\n\n              case 46:\n                _context7.prev = 46;\n\n                _iterator2.f();\n\n                return _context7.finish(46);\n\n              case 49:\n                _context7.next = 51;\n                return this.db.set('lastAllRss', results[results.length - 1].guid).write();\n\n              case 51:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[33, 43, 46, 49]]);\n      }));\n\n      function searchAll() {\n        return _searchAll.apply(this, arguments);\n      }\n\n      return searchAll;\n    }()\n  }, {\n    key: \"searchShow\",\n    value: function () {\n      var _searchShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, query) {\n        var channel,\n            OG,\n            results,\n            embedFunction,\n            _iterator3,\n            _step3,\n            i,\n            item,\n            _args8 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                channel = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : null;\n                OG = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : null;\n                _context8.next = 4;\n                return this.nyaa.getResults(query);\n\n              case 4:\n                results = _context8.sent;\n\n                if (results.length) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Results found for \".concat(query, \": \").concat(results.length));\n\n                embedFunction = this.getRichEmbed.bind(this);\n                _iterator3 = _createForOfIteratorHelper(results);\n                _context8.prev = 10;\n\n                _iterator3.s();\n\n              case 12:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                i = _step3.value;\n                _context8.next = 16;\n                return this.db.get('rss').find({\n                  guid: i.guid\n                }).value();\n\n              case 16:\n                item = _context8.sent;\n\n                if (_lodash[\"default\"].isUndefined(item)) {\n                  _context8.next = 19;\n                  break;\n                }\n\n                return _context8.abrupt(\"continue\", 24);\n\n              case 19:\n                _context8.next = 21;\n                return this.postShow(embedFunction, i, channel, OG);\n\n              case 21:\n                if (!_context8.sent) {\n                  _context8.next = 24;\n                  break;\n                }\n\n                _context8.next = 24;\n                return this.db.get('rss').push(_objectSpread(_objectSpread({}, i), {}, {\n                  searchID: id\n                })).write();\n\n              case 24:\n                _context8.next = 12;\n                break;\n\n              case 26:\n                _context8.next = 31;\n                break;\n\n              case 28:\n                _context8.prev = 28;\n                _context8.t0 = _context8[\"catch\"](10);\n\n                _iterator3.e(_context8.t0);\n\n              case 31:\n                _context8.prev = 31;\n\n                _iterator3.f();\n\n                return _context8.finish(31);\n\n              case 34:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[10, 28, 31, 34]]);\n      }));\n\n      function searchShow(_x3, _x4) {\n        return _searchShow.apply(this, arguments);\n      }\n\n      return searchShow;\n    }()\n  }, {\n    key: \"refreshShows\",\n    value: function () {\n      var _refreshShows = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var msg,\n            channel,\n            _iterator4,\n            _step4,\n            i,\n            _args9 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                msg = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : null;\n                _context9.next = 3;\n                return this.getChannel(msg);\n\n              case 3:\n                channel = _context9.sent;\n\n                if (!(channel === null)) {\n                  _context9.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(NYAA_UPDATES));\n\n                return _context9.abrupt(\"return\");\n\n              case 7:\n                this.startTimeout(NYAA_UPDATES);\n\n                _Logger[\"default\"].info(\"Updating shows for \".concat(this.guildID));\n\n                _context9.t0 = _createForOfIteratorHelper;\n                _context9.next = 12;\n                return this.db.get('search').value();\n\n              case 12:\n                _context9.t1 = _context9.sent;\n                _iterator4 = (0, _context9.t0)(_context9.t1);\n                _context9.prev = 14;\n\n                _iterator4.s();\n\n              case 16:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                i = _step4.value;\n                _context9.t2 = this;\n                _context9.t3 = i.id;\n                _context9.t4 = i.search;\n                _context9.t5 = channel;\n                _context9.next = 24;\n                return this.getOG(i.url);\n\n              case 24:\n                _context9.t6 = _context9.sent;\n                _context9.next = 27;\n                return _context9.t2.searchShow.call(_context9.t2, _context9.t3, _context9.t4, _context9.t5, _context9.t6);\n\n              case 27:\n                _context9.next = 16;\n                break;\n\n              case 29:\n                _context9.next = 34;\n                break;\n\n              case 31:\n                _context9.prev = 31;\n                _context9.t7 = _context9[\"catch\"](14);\n\n                _iterator4.e(_context9.t7);\n\n              case 34:\n                _context9.prev = 34;\n\n                _iterator4.f();\n\n                return _context9.finish(34);\n\n              case 37:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[14, 31, 34, 37]]);\n      }));\n\n      function refreshShows() {\n        return _refreshShows.apply(this, arguments);\n      }\n\n      return refreshShows;\n    }()\n  }, {\n    key: \"getChannel\",\n    value: function () {\n      var _getChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var msg,\n            channelType,\n            channel,\n            _args10 = arguments;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                msg = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : null;\n                channelType = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : NYAA_UPDATES;\n                _context10.next = 4;\n                return this.getGuildChannel(channelType);\n\n              case 4:\n                channel = _context10.sent;\n\n                if (!(channel === null)) {\n                  _context10.next = 12;\n                  break;\n                }\n\n                if (!(msg !== null)) {\n                  _context10.next = 9;\n                  break;\n                }\n\n                _context10.next = 9;\n                return msg.channel.send(\"No channel was found\");\n\n              case 9:\n                return _context10.abrupt(\"return\", null);\n\n              case 12:\n                return _context10.abrupt(\"return\", channel);\n\n              case 13:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getChannel() {\n        return _getChannel.apply(this, arguments);\n      }\n\n      return getChannel;\n    }()\n  }, {\n    key: \"showHelp\",\n    value: function () {\n      var _showHelp = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(msg) {\n        var embed;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(\"Help for gayboi v\".concat(_Bot.VERSION)).setDescription(\"\".concat(_Bot.COMMAND_CHARACTER, \"id - show id of the channel\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"allow - mention a user to allow it to use the bot\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"new - add a new show to be searched for - syntax:\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"new \\\"ShowSearchString\\\" \\\"MAL_URL\\\"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"channel \\\"channel_type\\\" channelID - set a new channel to post to\\n\") + \"Allowed channel types are: \".concat(NYAA_UPDATES, \", \").concat(NYAA_ALL, \", \").concat(JPOP_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refresh - force a refresh now (restarts timer) - \").concat(NYAA_UPDATES, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refreshAll - force a refresh now (restarts timer) - \").concat(NYAA_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refreshJpop - force a refresh now (restarts timer) - \").concat(JPOP_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"timeout - set a new timeout (in minutes) for checks\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"list - list current search shows\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"remove - remove show (specify show id)\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"help - show this message\"));\n                _context11.next = 4;\n                return msg.channel.send(embed);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function showHelp(_x5) {\n        return _showHelp.apply(this, arguments);\n      }\n\n      return showHelp;\n    }()\n  }, {\n    key: \"getGuildChannel\",\n    value: function () {\n      var _getGuildChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n        var channelType,\n            channel,\n            _args12 = arguments;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                channelType = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : NYAA_UPDATES;\n                channel = this.responseChannels[channelType];\n\n                if (!_lodash[\"default\"].isUndefined(channel)) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                _context12.next = 5;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).value();\n\n              case 5:\n                channel = _context12.sent;\n\n                if (!_lodash[\"default\"].isUndefined(channel)) {\n                  _context12.next = 8;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", null);\n\n              case 8:\n                channel = channel.id;\n\n              case 9:\n                _context12.next = 11;\n                return this.bot.channels.fetch(channel);\n\n              case 11:\n                return _context12.abrupt(\"return\", _context12.sent);\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getGuildChannel() {\n        return _getGuildChannel.apply(this, arguments);\n      }\n\n      return getGuildChannel;\n    }()\n  }, {\n    key: \"postShow\",\n    value: function () {\n      var _postShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(embedFunc, item) {\n        var _this2 = this;\n\n        var channel,\n            og,\n            channelType,\n            _args14 = arguments;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                channel = _args14.length > 2 && _args14[2] !== undefined ? _args14[2] : null;\n                og = _args14.length > 3 && _args14[3] !== undefined ? _args14[3] : null;\n                channelType = _args14.length > 4 && _args14[4] !== undefined ? _args14[4] : NYAA_UPDATES;\n\n                if (!(channel === null)) {\n                  _context14.next = 9;\n                  break;\n                }\n\n                _context14.next = 6;\n                return this.getGuildChannel(channelType);\n\n              case 6:\n                channel = _context14.sent;\n\n                if (channel) {\n                  _context14.next = 9;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", false);\n\n              case 9:\n                return _context14.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(resolve) {\n                    var _og$title;\n\n                    var title, embed, _og$image, _og$url, img, url, retryCounter;\n\n                    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            title = og !== null ? (_og$title = og.title) !== null && _og$title !== void 0 ? _og$title : item.title : item.title;\n                            _context13.next = 3;\n                            return embedFunc(item, title);\n\n                          case 3:\n                            embed = _context13.sent;\n\n                            if (og !== null) {\n                              img = (_og$image = og.image) !== null && _og$image !== void 0 ? _og$image : null;\n\n                              if (img) {\n                                embed.setThumbnail(img);\n                              }\n\n                              url = (_og$url = og.url) !== null && _og$url !== void 0 ? _og$url : null;\n\n                              if (url) {\n                                embed.setURL(url);\n                              }\n                            }\n\n                            retryCounter = 0;\n\n                            _Logger[\"default\"].info(\"Posting new result for \".concat(title, \" with guid \").concat(item.guid, \" for server \").concat(_this2.guildID));\n\n                          case 7:\n                            if (!true) {\n                              _context13.next = 23;\n                              break;\n                            }\n\n                            _context13.prev = 8;\n                            _context13.next = 11;\n                            return channel.send(embed);\n\n                          case 11:\n                            setTimeout(function () {\n                              resolve(true);\n                            }, 2000);\n                            return _context13.abrupt(\"break\", 23);\n\n                          case 15:\n                            _context13.prev = 15;\n                            _context13.t0 = _context13[\"catch\"](8);\n\n                            _Logger[\"default\"].warn(\"An error has occured while posting: \".concat(_context13.t0.toString(), \", retrying (\").concat(++retryCounter, \" in 5 seconds\"));\n\n                            _context13.next = 20;\n                            return new Promise(function (res) {\n                              setTimeout(function () {\n                                res();\n                              }, 5000);\n                            });\n\n                          case 20:\n                            if (retryCounter > 10) {\n                              resolve(false);\n                            }\n\n                          case 21:\n                            _context13.next = 7;\n                            break;\n\n                          case 23:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13, null, [[8, 15]]);\n                  }));\n\n                  return function (_x8) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 10:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function postShow(_x6, _x7) {\n        return _postShow.apply(this, arguments);\n      }\n\n      return postShow;\n    }()\n  }, {\n    key: \"getJpopEmbed\",\n    value: function () {\n      var _getJpopEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(item) {\n        var possibleTitle,\n            embed,\n            _args15 = arguments;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                possibleTitle = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(item.name).setColor(14978504).addField(\"Artist:\", item.artist).addField(\"Codec:\", item.codec, true).addField(\"Compression:\", !_lodash[\"default\"].isUndefined(item.compression) ? item.compression : 'Unknown', true).addField(\"Link:\", item.link).setFooter(\"Original title: \" + item.title);\n                return _context15.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function getJpopEmbed(_x9) {\n        return _getJpopEmbed.apply(this, arguments);\n      }\n\n      return getJpopEmbed;\n    }()\n  }, {\n    key: \"getMinorEmbed\",\n    value: function () {\n      var _getMinorEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(item) {\n        var possibleTitle,\n            embed,\n            _args16 = arguments;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                possibleTitle = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(possibleTitle !== null && possibleTitle !== void 0 ? possibleTitle : item.title).setColor(9299132).addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size).addField(\"Link:\", item.link);\n                return _context16.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function getMinorEmbed(_x10) {\n        return _getMinorEmbed.apply(this, arguments);\n      }\n\n      return getMinorEmbed;\n    }()\n  }, {\n    key: \"getRichEmbed\",\n    value: function () {\n      var _getRichEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(item) {\n        var _ref2, _item$group;\n\n        var possibleTitle,\n            embed,\n            _args17 = arguments;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                possibleTitle = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle((_ref2 = possibleTitle !== null && possibleTitle !== void 0 ? possibleTitle : item.showname) !== null && _ref2 !== void 0 ? _ref2 : item.title).setColor(14533256).addField('Group:', (_item$group = item.group) !== null && _item$group !== void 0 ? _item$group : 'Unknown group').addField(!_lodash[\"default\"].isUndefined(item.episodeSecondary) ? 'Episodes:' : 'Episode:', !_lodash[\"default\"].isUndefined(item.episodeSecondary) ? item.episodeMain.toString() + \"-\" + item.episodeSecondary.toString() : !_lodash[\"default\"].isUndefined(item.episodeMain) ? item.episodeMain.toString() : 'Unknown').addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size).addField(\"Release:\", !_lodash[\"default\"].isUndefined(item.resolution) ? item.resolution : 'Unknown', true).addField(\"Link:\", item.link, true).setFooter(\"Original title: \" + item.title);\n                return _context17.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function getRichEmbed(_x11) {\n        return _getRichEmbed.apply(this, arguments);\n      }\n\n      return getRichEmbed;\n    }()\n  }, {\n    key: \"addToAllowed\",\n    value: function () {\n      var _addToAllowed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(userID) {\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.db.get('server').push(userID).write();\n\n              case 2:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function addToAllowed(_x12) {\n        return _addToAllowed.apply(this, arguments);\n      }\n\n      return addToAllowed;\n    }()\n  }, {\n    key: \"setChannel\",\n    value: function () {\n      var _setChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(msg) {\n        var regex, found, _found, f, channelType, channel;\n\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                regex = /\"(.+?)\" (\\d+)/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context19.next = 5;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel syntax.\\n\".concat(_Bot.COMMAND_CHARACTER, \"channel \\\"CHANNEL_TYPE\\\" channelID where CHANNEL_TYPE is one of \").concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context19.abrupt(\"return\");\n\n              case 5:\n                _found = _slicedToArray(found, 3), f = _found[0], channelType = _found[1], channel = _found[2];\n\n                if (!(ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1)) {\n                  _context19.next = 9;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel type, must be one of \".concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context19.abrupt(\"return\");\n\n              case 9:\n                _context19.next = 11;\n                return this.setChannelIDForType(channel, channelType);\n\n              case 11:\n                this.responseChannels[channelType] = channel;\n\n                _Logger[\"default\"].info(\"New response channel was set for server \".concat(this.guildID, \" - \").concat(this.responseChannels[channelType], \" for type \").concat(channelType));\n\n                msg.channel.send(\"New channel set for type \".concat(channelType));\n\n              case 14:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function setChannel(_x13) {\n        return _setChannel.apply(this, arguments);\n      }\n\n      return setChannel;\n    }()\n  }, {\n    key: \"setChannelIDForType\",\n    value: function () {\n      var _setChannelIDForType = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(channelID, channelType) {\n        var existing;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).value();\n\n              case 2:\n                existing = _context20.sent;\n\n                if (_lodash[\"default\"].isUndefined(existing)) {\n                  _context20.next = 8;\n                  break;\n                }\n\n                _context20.next = 6;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).assign({\n                  id: channelID\n                }).write();\n\n              case 6:\n                _context20.next = 10;\n                break;\n\n              case 8:\n                _context20.next = 10;\n                return this.db.get('channels').push({\n                  type: channelType,\n                  id: channelID\n                }).write();\n\n              case 10:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function setChannelIDForType(_x14, _x15) {\n        return _setChannelIDForType.apply(this, arguments);\n      }\n\n      return setChannelIDForType;\n    }()\n  }, {\n    key: \"allowedToCommand\",\n    value: function () {\n      var _allowedToCommand = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(msg) {\n        var serverData;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.db.get('server').value();\n\n              case 2:\n                serverData = _context21.sent;\n\n                if (!_lodash[\"default\"].isEmpty(serverData)) {\n                  _context21.next = 7;\n                  break;\n                }\n\n                _context21.next = 6;\n                return this.addToAllowed(msg.author.id);\n\n              case 6:\n                return _context21.abrupt(\"return\", true);\n\n              case 7:\n                return _context21.abrupt(\"return\", serverData.indexOf(msg.author.id) !== -1);\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function allowedToCommand(_x16) {\n        return _allowedToCommand.apply(this, arguments);\n      }\n\n      return allowedToCommand;\n    }()\n  }, {\n    key: \"onMessage\",\n    value: function () {\n      var _onMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(msg) {\n        var guildID, content, space, command;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                if (!(this.bot.user.id === msg.author.id)) {\n                  _context22.next = 2;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\");\n\n              case 2:\n                guildID = msg.channel.guild.id;\n                content = msg.content;\n\n                if (!content.startsWith(_Bot.COMMAND_CHARACTER)) {\n                  _context22.next = 17;\n                  break;\n                }\n\n                space = content.indexOf(' ');\n                command = content.substring(_Bot.COMMAND_CHARACTER.length, space === -1 ? content.length : space);\n\n                if (command in this.commands) {\n                  _context22.next = 9;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\");\n\n              case 9:\n                _context22.next = 11;\n                return this.allowedToCommand(msg);\n\n              case 11:\n                if (_context22.sent) {\n                  _context22.next = 15;\n                  break;\n                }\n\n                _context22.next = 14;\n                return msg.channel.send(\"rude bitch not allowed\");\n\n              case 14:\n                return _context22.abrupt(\"return\");\n\n              case 15:\n                _context22.next = 17;\n                return this.commands[command](msg);\n\n              case 17:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function onMessage(_x17) {\n        return _onMessage.apply(this, arguments);\n      }\n\n      return onMessage;\n    }()\n  }, {\n    key: \"channelID\",\n    value: function () {\n      var _channelID = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(msg) {\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return msg.channel.send(\"Channel ID is \".concat(msg.channel.id));\n\n              case 2:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function channelID(_x18) {\n        return _channelID.apply(this, arguments);\n      }\n\n      return channelID;\n    }()\n  }, {\n    key: \"addShow\",\n    value: function () {\n      var _addShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(msg) {\n        var regex, found, _found2, f, search, url, reg, count;\n\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                regex = /\"(.+?)\" \"(.+?)\"(?: \"(.+?)\")?/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context24.next = 6;\n                  break;\n                }\n\n                _context24.next = 5;\n                return msg.channel.send(\"Invalid new syntax:\\n\".concat(_Bot.COMMAND_CHARACTER, \" new \\\"show search phrase\\\" \\\"MALURL\\\" \\\"attribute regex\\\" (optional last)\"));\n\n              case 5:\n                return _context24.abrupt(\"return\");\n\n              case 6:\n                _found2 = _slicedToArray(found, 4), f = _found2[0], search = _found2[1], url = _found2[2], reg = _found2[3];\n                _context24.next = 9;\n                return this.db.get('search').last().value();\n\n              case 9:\n                count = _context24.sent;\n\n                if (_lodash[\"default\"].isUndefined(count)) {\n                  count = 0;\n                } else {\n                  count = count.id;\n                }\n\n                _context24.next = 13;\n                return this.db.get('search').push({\n                  id: count + 1,\n                  search: search,\n                  url: url,\n                  regex: reg\n                }).write();\n\n              case 13:\n                _Logger[\"default\"].info(\"New show has been added to the searchlist - \".concat(search, \" - \").concat(url, \" for server \").concat(this.guildID));\n\n                _context24.next = 16;\n                return msg.channel.send(\"Saved!\");\n\n              case 16:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function addShow(_x19) {\n        return _addShow.apply(this, arguments);\n      }\n\n      return addShow;\n    }()\n  }, {\n    key: \"removeShow\",\n    value: function () {\n      var _removeShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(msg) {\n        var regex, found, valid, searchID, item, _found3;\n\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                regex = /\\d+/g;\n                found = regex.exec(msg.content);\n                valid = true;\n\n                if (!(found === null)) {\n                  _context25.next = 6;\n                  break;\n                }\n\n                valid = false;\n                return _context25.abrupt(\"return\");\n\n              case 6:\n                searchID = null;\n                item = null;\n\n                if (!valid) {\n                  _context25.next = 18;\n                  break;\n                }\n\n                _found3 = _slicedToArray(found, 1);\n                searchID = _found3[0];\n                searchID = parseInt(searchID);\n                _context25.t0 = _lodash[\"default\"];\n                _context25.next = 15;\n                return this.db.get('search').find({\n                  id: searchID\n                });\n\n              case 15:\n                _context25.t1 = item = _context25.sent;\n\n                if (!_context25.t0.isUndefined.call(_context25.t0, _context25.t1)) {\n                  _context25.next = 18;\n                  break;\n                }\n\n                valid = false;\n\n              case 18:\n                if (valid) {\n                  _context25.next = 22;\n                  break;\n                }\n\n                _context25.next = 21;\n                return msg.channel.send(\"Invalid id\");\n\n              case 21:\n                return _context25.abrupt(\"return\");\n\n              case 22:\n                _context25.next = 24;\n                return this.db.get('search').remove({\n                  id: searchID\n                }).write();\n\n              case 24:\n                _context25.next = 26;\n                return this.db.get('rss').find({\n                  searchID: searchID\n                }).assign({\n                  searchID: null\n                }).write();\n\n              case 26:\n                _Logger[\"default\"].info(\"A show has been removed from the searchlist - \".concat(item.search, \" from server \").concat(this.guildID));\n\n                _context25.next = 29;\n                return msg.channel.send(\"Query removed\");\n\n              case 29:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function removeShow(_x20) {\n        return _removeShow.apply(this, arguments);\n      }\n\n      return removeShow;\n    }()\n  }, {\n    key: \"allowUser\",\n    value: function () {\n      var _allowUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(msg) {\n        var mention;\n        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                mention = msg.mentions.users.first();\n\n                if (!_lodash[\"default\"].isUndefined(mention)) {\n                  _context26.next = 5;\n                  break;\n                }\n\n                _context26.next = 4;\n                return msg.channel.send(\"No user mention was found\");\n\n              case 4:\n                return _context26.abrupt(\"return\");\n\n              case 5:\n                _context26.next = 7;\n                return this.addToAllowed(mention.id);\n\n              case 7:\n                _context26.next = 9;\n                return msg.channel.send(\"User was added to botlist\");\n\n              case 9:\n                _Logger[\"default\"].info(\"A new user has been added to the botlist for server \".concat(this.guildID, \" - \").concat(mention.id));\n\n              case 10:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function allowUser(_x21) {\n        return _allowUser.apply(this, arguments);\n      }\n\n      return allowUser;\n    }()\n  }, {\n    key: \"setNewTimeout\",\n    value: function () {\n      var _setNewTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(msg) {\n        var regex, found, _found4, f, channelType, timeout;\n\n        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                regex = /\"(.+?)\" (\\d+)/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context27.next = 6;\n                  break;\n                }\n\n                _context27.next = 5;\n                return msg.channel.send(\"Invalid timeout syntax.\\n\".concat(_Bot.COMMAND_CHARACTER, \"timeout \\\"CHANNEL_TYPE\\\" timeoutLength where CHANNEL_TYPE is one of \").concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n\n              case 5:\n                return _context27.abrupt(\"return\");\n\n              case 6:\n                _found4 = _slicedToArray(found, 3), f = _found4[0], channelType = _found4[1], timeout = _found4[2];\n\n                if (!(ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1)) {\n                  _context27.next = 10;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel type, must be one of \".concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context27.abrupt(\"return\");\n\n              case 10:\n                timeout = parseInt(timeout);\n\n                if (!(timeout < MINIMAL_INTERVAL_TIMES[channelType])) {\n                  _context27.next = 15;\n                  break;\n                }\n\n                _context27.next = 14;\n                return msg.channel.send(\"Timeout for \".concat(channelType, \" must be at least \").concat(MINIMAL_INTERVAL_TIMES[channelType], \" minutes or higher\"));\n\n              case 14:\n                return _context27.abrupt(\"return\");\n\n              case 15:\n                _context27.next = 17;\n                return this.db.set('timeout.' + channelType, timeout).write();\n\n              case 17:\n                _context27.next = 19;\n                return this.startTimeout(channelType);\n\n              case 19:\n                _context27.next = 21;\n                return msg.channel.send(\"New timeout set\");\n\n              case 21:\n                _Logger[\"default\"].info(\"A new timeout has been set for server \".concat(this.guildID, \" - \").concat(timeout, \" (\").concat(channelType, \")\"));\n\n              case 22:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function setNewTimeout(_x22) {\n        return _setNewTimeout.apply(this, arguments);\n      }\n\n      return setNewTimeout;\n    }()\n  }, {\n    key: \"listShows\",\n    value: function () {\n      var _listShows = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(msg) {\n        var shows, items, i, message, y;\n        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.next = 2;\n                return this.db.get('search').value();\n\n              case 2:\n                shows = _context28.sent;\n\n                if (shows.length) {\n                  _context28.next = 7;\n                  break;\n                }\n\n                _context28.next = 6;\n                return msg.channel.send(\"No shows are currently in the search list\");\n\n              case 6:\n                return _context28.abrupt(\"return\");\n\n              case 7:\n                items = _lodash[\"default\"].chunk(shows, 15);\n                i = 0;\n\n              case 9:\n                if (!(i < items.length)) {\n                  _context28.next = 17;\n                  break;\n                }\n\n                message = \"\";\n\n                for (y = 0; y < items[i].length; y++) {\n                  message += \"ID: \" + items[i][y].id.toString() + \" - \" + items[i][y].search + \"\\n\";\n                }\n\n                _context28.next = 14;\n                return msg.channel.send(message);\n\n              case 14:\n                i++;\n                _context28.next = 9;\n                break;\n\n              case 17:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function listShows(_x23) {\n        return _listShows.apply(this, arguments);\n      }\n\n      return listShows;\n    }()\n  }]);\n\n  return BotGuildInstance;\n}();\n\nvar _default = BotGuildInstance;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "BotGuildInstance.js"
      ],
      "names": [
        "getNewDatabase",
        "filename",
        "Promise",
        "res",
        "FileAsync",
        "then",
        "d",
        "NYAA_UPDATES",
        "NYAA_ALL",
        "JPOP_ALL",
        "ALLOWED_CHANNEL_TYPES",
        "MINIMAL_INTERVAL_TIMES",
        "BotGuildInstance",
        "guildID",
        "bot",
        "nyaaProvider",
        "jpopSukiProvider",
        "nyaa",
        "jpop",
        "commands",
        "channelID",
        "bind",
        "allowUser",
        "addShow",
        "setChannel",
        "refreshShows",
        "searchAll",
        "searchJpop",
        "setNewTimeout",
        "listShows",
        "removeShow",
        "showHelp",
        "timeoutFunctions",
        "readyGuild",
        "timeoutType",
        "_",
        "isArray",
        "i",
        "length",
        "clearInterval",
        "timeout",
        "db",
        "get",
        "value",
        "timeoutVal",
        "isUndefined",
        "parseInt",
        "logger",
        "info",
        "setInterval",
        "stopTimeout",
        "internalStartTimeout",
        "toString",
        "defaults",
        "server",
        "og",
        "search",
        "rss",
        "channels",
        "timeouts",
        "lastAllRss",
        "lastJpopRss",
        "write",
        "startTimeout",
        "url",
        "find",
        "data",
        "OGParser",
        "parse",
        "response",
        "push",
        "msg",
        "getChannel",
        "channel",
        "warn",
        "getResults",
        "results",
        "lastRssGuid",
        "reverse",
        "guid",
        "slice",
        "embedFunction",
        "getJpopEmbed",
        "item",
        "postShow",
        "set",
        "getMinorEmbed",
        "id",
        "query",
        "OG",
        "getRichEmbed",
        "searchID",
        "getOG",
        "searchShow",
        "channelType",
        "getGuildChannel",
        "send",
        "embed",
        "MessageEmbed",
        "setTitle",
        "VERSION",
        "setDescription",
        "COMMAND_CHARACTER",
        "responseChannels",
        "type",
        "fetch",
        "embedFunc",
        "resolve",
        "title",
        "img",
        "image",
        "setThumbnail",
        "setURL",
        "retryCounter",
        "setTimeout",
        "possibleTitle",
        "name",
        "setColor",
        "addField",
        "artist",
        "codec",
        "compression",
        "link",
        "setFooter",
        "seeders",
        "leechers",
        "size",
        "showname",
        "group",
        "episodeSecondary",
        "episodeMain",
        "resolution",
        "userID",
        "regex",
        "found",
        "exec",
        "content",
        "join",
        "f",
        "indexOf",
        "setChannelIDForType",
        "existing",
        "assign",
        "serverData",
        "isEmpty",
        "addToAllowed",
        "author",
        "user",
        "guild",
        "startsWith",
        "space",
        "command",
        "substring",
        "allowedToCommand",
        "reg",
        "last",
        "count",
        "valid",
        "remove",
        "mention",
        "mentions",
        "users",
        "first",
        "shows",
        "items",
        "chunk",
        "message",
        "y"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import low from 'lowdb';\r\nimport FileAsync from 'lowdb/adapters/FileAsync';\r\nimport logger from \"./Logger\";\r\nimport _ from \"lodash\";\r\nimport OGParser from \"ogparser\";\r\nimport {MessageEmbed} from \"discord.js\";\r\nimport {COMMAND_CHARACTER, VERSION} from \"./Bot\";\r\n\r\nconst getNewDatabase = (filename) => new Promise((res) => {\r\n    low(new FileAsync(filename + \".json\"))\r\n        .then((d) => res(d));\r\n});\r\n\r\nconst NYAA_UPDATES = 'nyaa_updates';\r\nconst NYAA_ALL = 'nyaa_all';\r\nconst JPOP_ALL = 'jpop_all';\r\n\r\nconst ALLOWED_CHANNEL_TYPES = [NYAA_UPDATES, NYAA_ALL, JPOP_ALL];\r\nconst MINIMAL_INTERVAL_TIMES = {\r\n    [NYAA_UPDATES]: 30,\r\n    [NYAA_ALL]: 30,\r\n    [JPOP_ALL]: 30\r\n};\r\n\r\nclass BotGuildInstance {\r\n    guildID = null;\r\n    db = null;\r\n    nyaa = null;\r\n    jpop = null;\r\n    timeout = {};\r\n    bot = null;\r\n    responseChannels = {};\r\n\r\n    constructor(guildID, bot, nyaaProvider, jpopSukiProvider) {\r\n        this.guildID = guildID;\r\n        this.bot = bot;\r\n        this.nyaa = nyaaProvider;\r\n        this.jpop = jpopSukiProvider;\r\n        this.commands = {\r\n            'id': this.channelID.bind(this),\r\n            'allow': this.allowUser.bind(this),\r\n            'new': this.addShow.bind(this),\r\n            'channel': this.setChannel.bind(this),\r\n            'refresh': this.refreshShows.bind(this),\r\n            'refreshAll': this.searchAll.bind(this),\r\n            'refreshJpop': this.searchJpop.bind(this),\r\n            'timeout': this.setNewTimeout.bind(this),\r\n            'list': this.listShows.bind(this),\r\n            'remove': this.removeShow.bind(this),\r\n            'help': this.showHelp.bind(this)\r\n        };\r\n        this.timeoutFunctions = {\r\n            [NYAA_UPDATES]: this.refreshShows.bind(this),\r\n            [NYAA_ALL]: this.searchAll.bind(this),\r\n            [JPOP_ALL]: this.searchJpop.bind(this)\r\n        };\r\n\r\n        this.readyGuild();\r\n    }\r\n\r\n    async stopTimeout(timeoutType = null) {\r\n        if (timeoutType === null) {\r\n            timeoutType = ALLOWED_CHANNEL_TYPES;\r\n        }\r\n\r\n        if (!_.isArray(timeoutType)) {\r\n            timeoutType = [timeoutType];\r\n        }\r\n\r\n        for (let i = 0; i < timeoutType.length; i++) {\r\n            clearInterval(this.timeout[timeoutType]);\r\n        }\r\n    }\r\n\r\n    async internalStartTimeout(timeoutType) {\r\n        let timeoutVal = await this.db.get(`timeout.${timeoutType}`).value();\r\n        if (_.isUndefined(timeoutVal)) {\r\n            timeoutVal = MINIMAL_INTERVAL_TIMES[timeoutType];\r\n        }\r\n        timeoutVal = parseInt(timeoutVal);\r\n        logger.info(`Starting interval for ${this.guildID} in ${timeoutVal} minutes for ${timeoutType}`);\r\n        timeoutVal *= 60;\r\n        timeoutVal *= 1000;\r\n        this.timeout[timeoutType] = setInterval(() => {\r\n            logger.info(`Updating list ${this.guildID}`);\r\n            this.timeoutFunctions[timeoutType]();\r\n        }, timeoutVal);\r\n    }\r\n\r\n    async startTimeout(timeoutType = null) {\r\n        this.stopTimeout(timeoutType);\r\n        if (timeoutType === null) {\r\n            timeoutType = ALLOWED_CHANNEL_TYPES;\r\n        }\r\n\r\n        if (!_.isArray(timeoutType)) {\r\n            timeoutType = [timeoutType];\r\n        }\r\n\r\n        for (let i = 0; i < timeoutType.length; i++) {\r\n            await this.internalStartTimeout(timeoutType[i]);\r\n        }\r\n    }\r\n\r\n    async readyGuild() {\r\n        this.db = await getNewDatabase('db_' + this.guildID.toString());\r\n        await this.db.defaults({\r\n            server: [],\r\n            og: [],\r\n            search: [],\r\n            rss: [],\r\n            channels: [],\r\n            timeouts: {},\r\n            lastAllRss: null,\r\n            lastJpopRss: null\r\n        }).write();\r\n\r\n        await this.startTimeout();\r\n    }\r\n\r\n    async getOG(url) {\r\n        const og = await this.db.get('og').find({url: url}).value();\r\n        if (!_.isUndefined(og)) {\r\n            return og.data;\r\n        }\r\n\r\n        const response = await OGParser.parse(url);\r\n        await this.db.get('og').push({url: url, data: response}).write();\r\n        return response;\r\n    }\r\n\r\n    async searchJpop(msg = null) {\r\n        const channel = await this.getChannel(msg, JPOP_ALL);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${JPOP_ALL}`);\r\n            return;\r\n        }\r\n\r\n        logger.info(`Updating any jpop results for ${this.guildID}`);\r\n        let results = await this.jpop.getResults();\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n        this.startTimeout(JPOP_ALL);\r\n\r\n        let lastRssGuid = await this.db.get('lastJpopRss').value();\r\n        if (!_.isUndefined(lastRssGuid) && lastRssGuid !== null) {\r\n            results = results.reverse();\r\n            for (let i = 0; i < results.length; i++) {\r\n                if (results[i].guid === lastRssGuid) {\r\n                    // all before this\r\n                    results = results.slice(0, i);\r\n                    break;\r\n                }\r\n            }\r\n            results = results.reverse();\r\n        }\r\n\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for any jpop ${results.length}`);\r\n        const embedFunction = this.getJpopEmbed.bind(this);\r\n\r\n        for (let item of results) {\r\n            await this.postShow(embedFunction, item, channel);\r\n        }\r\n\r\n        await this.db.set('lastJpopRss', results[results.length-1].guid).write();\r\n    }\r\n\r\n    async searchAll(msg = null) {\r\n        const channel = await this.getChannel(msg, NYAA_ALL);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${NYAA_ALL}`);\r\n            return;\r\n        }\r\n\r\n        logger.info(`Updating any nyaa results for ${this.guildID}`);\r\n        let results = await this.nyaa.getResults(\"\", {});\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n        this.startTimeout(NYAA_ALL);\r\n\r\n        let lastRssGuid = await this.db.get('lastAllRss').value();\r\n        if (!_.isUndefined(lastRssGuid) && lastRssGuid !== null) {\r\n            results = results.reverse();\r\n            for (let i = 0; i < results.length; i++) {\r\n                if (results[i].guid === lastRssGuid) {\r\n                    // all before this\r\n                    results = results.slice(0, i);\r\n                    break;\r\n                }\r\n            }\r\n            results = results.reverse();\r\n        }\r\n\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for any nyaa ${results.length}`);\r\n        const embedFunction = this.getMinorEmbed.bind(this);\r\n\r\n        for (let item of results) {\r\n            await this.postShow(embedFunction, item, channel);\r\n        }\r\n\r\n        await this.db.set('lastAllRss', results[results.length-1].guid).write();\r\n    }\r\n\r\n    async searchShow(id, query, channel = null, OG = null) {\r\n        const results = await this.nyaa.getResults(query);\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for ${query}: ${results.length}`);\r\n        const embedFunction = this.getRichEmbed.bind(this);\r\n\r\n        for (let i of results) {\r\n            const item = await this.db.get('rss').find({guid: i.guid}).value();\r\n            if (!_.isUndefined(item)) {\r\n                continue;\r\n            }\r\n\r\n            if (await this.postShow(embedFunction, i, channel, OG)) {\r\n                await this.db.get('rss').push({...i, searchID: id}).write();\r\n            }\r\n        }\r\n    }\r\n\r\n    async refreshShows(msg = null) {\r\n        const channel = await this.getChannel(msg);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${NYAA_UPDATES}`);\r\n            return;\r\n        }\r\n\r\n        this.startTimeout(NYAA_UPDATES);\r\n        logger.info(`Updating shows for ${this.guildID}`);\r\n\r\n        for (let i of await this.db.get('search').value()) {\r\n            await this.searchShow(i.id, i.search, channel, await this.getOG(i.url));\r\n        }\r\n    }\r\n\r\n    async getChannel(msg = null, channelType = NYAA_UPDATES) {\r\n        const channel = await this.getGuildChannel(channelType);\r\n        if (channel === null) {\r\n            if (msg !== null) {\r\n                await msg.channel.send(\"No channel was found\");\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return channel;\r\n        }\r\n    }\r\n\r\n    async showHelp(msg) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(`Help for gayboi v${VERSION}`)\r\n            .setDescription(`${COMMAND_CHARACTER}id - show id of the channel\\n\\n` +\r\n                `${COMMAND_CHARACTER}allow - mention a user to allow it to use the bot\\n\\n` +\r\n                `${COMMAND_CHARACTER}new - add a new show to be searched for - syntax:\\n` +\r\n                `${COMMAND_CHARACTER}new \"ShowSearchString\" \"MAL_URL\"\\n\\n` +\r\n                `${COMMAND_CHARACTER}channel \"channel_type\" channelID - set a new channel to post to\\n` +\r\n                `Allowed channel types are: ${NYAA_UPDATES}, ${NYAA_ALL}, ${JPOP_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refresh - force a refresh now (restarts timer) - ${NYAA_UPDATES}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refreshAll - force a refresh now (restarts timer) - ${NYAA_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refreshJpop - force a refresh now (restarts timer) - ${JPOP_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}timeout - set a new timeout (in minutes) for checks\\n\\n` +\r\n                `${COMMAND_CHARACTER}list - list current search shows\\n\\n` +\r\n                `${COMMAND_CHARACTER}remove - remove show (specify show id)\\n\\n` +\r\n                `${COMMAND_CHARACTER}help - show this message`);\r\n\r\n        await msg.channel.send(embed);\r\n    }\r\n\r\n    async getGuildChannel(channelType = NYAA_UPDATES) {\r\n        let channel = this.responseChannels[channelType];\r\n        if (_.isUndefined(channel)) {\r\n            channel = await this.db.get('channels').find({type: channelType}).value();\r\n\r\n            if (_.isUndefined(channel)) {\r\n                return null;\r\n            }\r\n\r\n            channel = channel.id;\r\n        }\r\n\r\n        return await await this.bot.channels.fetch(channel);\r\n    }\r\n\r\n    async postShow(embedFunc, item, channel = null, og = null, channelType = NYAA_UPDATES) {\r\n        if (channel === null) {\r\n            channel = await this.getGuildChannel(channelType);\r\n\r\n            if (!channel) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return new Promise(async (resolve) => {\r\n            const title = (og !== null ? og.title ?? item.title : item.title);\r\n            const embed = await embedFunc(item, title);\r\n\r\n            if (og !== null) {\r\n                const img = og.image ?? null;\r\n                if (img) {\r\n                    embed.setThumbnail(img);\r\n                }\r\n\r\n                const url = og.url ?? null;\r\n                if (url) {\r\n                    embed.setURL(url);\r\n                }\r\n            }\r\n\r\n            let retryCounter = 0;\r\n\r\n            logger.info(`Posting new result for ${title} with guid ${item.guid} for server ${this.guildID}`);\r\n            while (true) {\r\n                try {\r\n                    await channel.send(embed);\r\n                    setTimeout(() => {\r\n                        resolve(true);\r\n                    }, 2000);\r\n                    break;\r\n                }\r\n                catch (e) {\r\n                    logger.warn(`An error has occured while posting: ${e.toString()}, retrying (${++retryCounter} in 5 seconds`);\r\n                    await new Promise((res) => {\r\n                        setTimeout(() => {\r\n                            res();\r\n                        }, 5000);\r\n                    });\r\n                    if (retryCounter > 10) {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async getJpopEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(item.name)\r\n            .setColor(14978504)\r\n            .addField(\"Artist:\", item.artist)\r\n            .addField(\"Codec:\", item.codec, true)\r\n            .addField(\"Compression:\", (!_.isUndefined(item.compression) ? item.compression : 'Unknown'), true)\r\n            .addField(\"Link:\", item.link)\r\n            .setFooter(\"Original title: \" + item.title);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async getMinorEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(possibleTitle ?? item.title)\r\n            .setColor(9299132)\r\n            .addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size)\r\n            .addField(\"Link:\", item.link);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async getRichEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(possibleTitle ?? item.showname ?? item.title)\r\n            .setColor(14533256)\r\n            .addField('Group:', item.group ?? 'Unknown group')\r\n            .addField((!_.isUndefined(item.episodeSecondary) ? 'Episodes:' : 'Episode:'),\r\n                (!_.isUndefined(item.episodeSecondary) ? item.episodeMain.toString() + \"-\" + item.episodeSecondary.toString() : (!_.isUndefined(item.episodeMain) ? item.episodeMain.toString() : 'Unknown')))\r\n            .addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size)\r\n            .addField(\"Release:\", (!_.isUndefined(item.resolution) ? item.resolution : 'Unknown'), true)\r\n            .addField(\"Link:\", item.link, true)\r\n            .setFooter(\"Original title: \" + item.title);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async addToAllowed(userID) {\r\n        await this.db.get('server').push(userID).write();\r\n    }\r\n\r\n    async setChannel(msg) {\r\n        const regex = /\"(.+?)\" (\\d+)/g;\r\n        const found = regex.exec(msg.content);\r\n\r\n        if (found === null) {\r\n            msg.channel.send(`Invalid channel syntax.\\n${COMMAND_CHARACTER}channel \"CHANNEL_TYPE\" channelID where CHANNEL_TYPE is one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        let [f, channelType, channel] = found;\r\n        if (ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1) {\r\n            msg.channel.send(`Invalid channel type, must be one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        await this.setChannelIDForType(channel, channelType);\r\n        this.responseChannels[channelType] = channel;\r\n        logger.info(`New response channel was set for server ${this.guildID} - ${this.responseChannels[channelType]} for type ${channelType}`);\r\n        msg.channel.send(`New channel set for type ${channelType}`);\r\n    }\r\n\r\n    async setChannelIDForType(channelID, channelType) {\r\n        const existing = await this.db.get('channels').find({type: channelType}).value();\r\n        if (!_.isUndefined(existing)) {\r\n            await this.db.get('channels').find({type: channelType}).assign({id: channelID}).write();\r\n        }\r\n        else {\r\n            await this.db.get('channels').push({type: channelType, id: channelID}).write();\r\n        }\r\n    }\r\n\r\n    async allowedToCommand(msg) {\r\n        const serverData = await this.db.get('server').value();\r\n        if (_.isEmpty(serverData)) {\r\n            await this.addToAllowed(msg.author.id);\r\n            return true;\r\n        }\r\n\r\n        return serverData.indexOf(msg.author.id) !== -1;\r\n    }\r\n\r\n    async onMessage(msg) {\r\n        if (this.bot.user.id === msg.author.id) {\r\n            return;\r\n        }\r\n\r\n        const guildID = msg.channel.guild.id;\r\n\r\n        const content = msg.content;\r\n        if (content.startsWith(COMMAND_CHARACTER)) {\r\n            const space = content.indexOf(' ');\r\n            const command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\r\n            if (!(command in this.commands)) {\r\n                return;\r\n            }\r\n\r\n\r\n            if (!await this.allowedToCommand(msg)) {\r\n                await msg.channel.send(\"rude bitch not allowed\");\r\n                return;\r\n            }\r\n\r\n            await this.commands[command](msg);\r\n        }\r\n    }\r\n\r\n    async channelID(msg) {\r\n        await msg.channel.send(`Channel ID is ${msg.channel.id}`);\r\n    }\r\n\r\n    async addShow(msg) {\r\n        const regex = /\"(.+?)\" \"(.+?)\"(?: \"(.+?)\")?/g;\r\n        const found = regex.exec(msg.content);\r\n        if (found === null) {\r\n            await msg.channel.send(`Invalid new syntax:\\n${COMMAND_CHARACTER} new \\\"show search phrase\\\" \\\"MALURL\\\" \\\"attribute regex\\\" (optional last)`);\r\n            return;\r\n        }\r\n\r\n        let [f, search, url, reg] = found;\r\n        let count = await this.db.get('search').last().value();\r\n        if (_.isUndefined(count)) {\r\n            count = 0;\r\n        }\r\n        else {\r\n            count = count.id;\r\n        }\r\n        await this.db.get('search').push({id: count + 1, search, url, regex: reg}).write();\r\n        logger.info(`New show has been added to the searchlist - ${search} - ${url} for server ${this.guildID}`);\r\n        await msg.channel.send(\"Saved!\");\r\n    }\r\n\r\n    async removeShow(msg) {\r\n        const regex = /\\d+/g;\r\n        const found = regex.exec(msg.content);\r\n        let valid = true;\r\n        if (found === null) {\r\n            valid = false;\r\n            return;\r\n        }\r\n\r\n        let searchID = null;\r\n        let item = null;\r\n\r\n        if (valid) {\r\n            [searchID] = found;\r\n            searchID = parseInt(searchID);\r\n\r\n            if (_.isUndefined(item = await this.db.get('search').find({id: searchID}))) {\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        if (!valid) {\r\n            await msg.channel.send(\"Invalid id\");\r\n            return;\r\n        }\r\n\r\n        await this.db.get('search').remove({id: searchID}).write();\r\n        await this.db.get('rss').find({searchID: searchID}).assign({searchID: null}).write();\r\n        logger.info(`A show has been removed from the searchlist - ${item.search} from server ${this.guildID}`);\r\n        await msg.channel.send(\"Query removed\");\r\n    }\r\n\r\n    async allowUser(msg) {\r\n        const mention = msg.mentions.users.first();\r\n        if (_.isUndefined(mention)) {\r\n            await msg.channel.send(\"No user mention was found\");\r\n            return;\r\n        }\r\n\r\n        await this.addToAllowed(mention.id);\r\n        await msg.channel.send(\"User was added to botlist\");\r\n        logger.info(`A new user has been added to the botlist for server ${this.guildID} - ${mention.id}`);\r\n    }\r\n\r\n    async setNewTimeout(msg) {\r\n        const regex = /\"(.+?)\" (\\d+)/g;\r\n        const found = regex.exec(msg.content);\r\n\r\n        if (found === null) {\r\n            await msg.channel.send(`Invalid timeout syntax.\\n${COMMAND_CHARACTER}timeout \"CHANNEL_TYPE\" timeoutLength where CHANNEL_TYPE is one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        let [f, channelType, timeout] = found;\r\n        if (ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1) {\r\n            msg.channel.send(`Invalid channel type, must be one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        timeout = parseInt(timeout);\r\n        if (timeout < MINIMAL_INTERVAL_TIMES[channelType]) {\r\n            await msg.channel.send(`Timeout for ${channelType} must be at least ${MINIMAL_INTERVAL_TIMES[channelType]} minutes or higher`);\r\n            return;\r\n        }\r\n\r\n        await this.db.set('timeout.'+channelType, timeout).write();\r\n        await this.startTimeout(channelType);\r\n        await msg.channel.send(\"New timeout set\");\r\n        logger.info(`A new timeout has been set for server ${this.guildID} - ${timeout} (${channelType})`);\r\n    }\r\n\r\n    async listShows(msg) {\r\n        const shows = await this.db.get('search').value();\r\n        if (!shows.length) {\r\n            await msg.channel.send(\"No shows are currently in the search list\");\r\n            return;\r\n        }\r\n\r\n        const items = _.chunk(shows, 15);\r\n        for (let i = 0; i < items.length; i++) {\r\n            let message = \"\";\r\n            for (let y = 0; y < items[i].length; y++) {\r\n                message += \"ID: \" + items[i][y].id.toString() + \" - \" + items[i][y].search + \"\\n\";\r\n            }\r\n            await msg.channel.send(message);\r\n        }\r\n    }\r\n}\r\n\r\nexport default BotGuildInstance;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303511723
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/JpopSukiProvider.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "JpopSukiProvider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _rssParser = _interopRequireDefault(require(\"rss-parser\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar JpopSukiProvider = /*#__PURE__*/function () {\n  function JpopSukiProvider() {\n    _classCallCheck(this, JpopSukiProvider);\n\n    _defineProperty(this, \"baseURL\", 'https://jpopsuki.eu/feeds.php');\n\n    _defineProperty(this, \"parser\", null);\n\n    _defineProperty(this, \"regex\", null);\n\n    this.parser = new _rssParser[\"default\"]();\n    this.regex = /(.+?) - (.+?) \\[] - (.+?) \\/ (.+?)? \\/ (.+)/;\n  }\n\n  _createClass(JpopSukiProvider, [{\n    key: \"getResults\",\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params,\n            result,\n            parsed,\n            items,\n            _iterator,\n            _step,\n            i,\n            _this$regex$exec,\n            _this$regex$exec2,\n            f,\n            artist,\n            name,\n            codec,\n            compression,\n            rip,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {\n                  feed: 'torrents_notify_20316_ollohfzw7ayqvwmbqk5d8t2ykj0ze73f'\n                };\n                _context.next = 3;\n                return _axios[\"default\"].get(this.baseURL, {\n                  params: _objectSpread({\n                    user: '155887',\n                    auth: 'ce93623920c6c3ecbffc03cd6e2b8b33',\n                    passkey: 'ollohfzw7ayqvwmbqk5d8t2ykj0ze73f',\n                    authkey: '0f3e681a6ffc4d77e48e3a68e5212aff',\n                    name: 'all'\n                  }, params)\n                });\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return this.parser.parseString(result.data);\n\n              case 6:\n                parsed = _context.sent;\n\n                if (!(!('items' in parsed) || !parsed.items.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", []);\n\n              case 9:\n                items = [];\n                _iterator = _createForOfIteratorHelper(parsed.items.reverse());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    _this$regex$exec = this.regex.exec(i.title), _this$regex$exec2 = _slicedToArray(_this$regex$exec, 6), f = _this$regex$exec2[0], artist = _this$regex$exec2[1], name = _this$regex$exec2[2], codec = _this$regex$exec2[3], compression = _this$regex$exec2[4], rip = _this$regex$exec2[5];\n                    items.push(_objectSpread(_objectSpread({}, i), {\n                      artist: artist,\n                      name: name,\n                      codec: codec,\n                      compression: compression,\n                      rip: rip\n                    }));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context.abrupt(\"return\", items);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResults() {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }]);\n\n  return JpopSukiProvider;\n}();\n\nvar _default = JpopSukiProvider;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkpwb3BTdWtpUHJvdmlkZXIuanMiXSwibmFtZXMiOlsiSnBvcFN1a2lQcm92aWRlciIsInBhcnNlciIsIlBhcnNlciIsInJlZ2V4IiwicGFyYW1zIiwiZmVlZCIsImF4aW9zIiwiZ2V0IiwiYmFzZVVSTCIsInVzZXIiLCJhdXRoIiwicGFzc2tleSIsImF1dGhrZXkiLCJuYW1lIiwicmVzdWx0IiwicGFyc2VTdHJpbmciLCJkYXRhIiwicGFyc2VkIiwiaXRlbXMiLCJsZW5ndGgiLCJyZXZlcnNlIiwiaSIsImV4ZWMiLCJ0aXRsZSIsImYiLCJhcnRpc3QiLCJjb2RlYyIsImNvbXByZXNzaW9uIiwicmlwIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGdCO0FBS0YsOEJBQWM7QUFBQTs7QUFBQSxxQ0FKSiwrQkFJSTs7QUFBQSxvQ0FITCxJQUdLOztBQUFBLG1DQUZOLElBRU07O0FBQ1YsU0FBS0MsTUFBTCxHQUFjLElBQUlDLHFCQUFKLEVBQWQ7QUFFQSxTQUFLQyxLQUFMLEdBQWEsNkNBQWI7QUFDSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWdCQyxnQkFBQUEsTSwyREFBUztBQUFDQyxrQkFBQUEsSUFBSSxFQUFFO0FBQVAsaUI7O3VCQUNEQyxrQkFBTUMsR0FBTixDQUFVLEtBQUtDLE9BQWYsRUFBd0I7QUFDekNKLGtCQUFBQSxNQUFNO0FBQ0ZLLG9CQUFBQSxJQUFJLEVBQUUsUUFESjtBQUVGQyxvQkFBQUEsSUFBSSxFQUFFLGtDQUZKO0FBR0ZDLG9CQUFBQSxPQUFPLEVBQUUsa0NBSFA7QUFJRkMsb0JBQUFBLE9BQU8sRUFBRSxrQ0FKUDtBQUtGQyxvQkFBQUEsSUFBSSxFQUFFO0FBTEoscUJBTUNULE1BTkQ7QUFEbUMsaUJBQXhCLEM7OztBQUFmVSxnQkFBQUEsTTs7dUJBV2UsS0FBS2IsTUFBTCxDQUFZYyxXQUFaLENBQXdCRCxNQUFNLENBQUNFLElBQS9CLEM7OztBQUFmQyxnQkFBQUEsTTs7c0JBQ0YsRUFBRSxXQUFXQSxNQUFiLEtBQXdCLENBQUNBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhQyxNOzs7OztpREFDL0IsRTs7O0FBR1BELGdCQUFBQSxLLEdBQVEsRTt1REFFRUQsTUFBTSxDQUFDQyxLQUFQLENBQWFFLE9BQWIsRTs7O0FBQWQsc0VBQXNDO0FBQTdCQyxvQkFBQUEsQ0FBNkI7QUFBQSx1Q0FDZSxLQUFLbEIsS0FBTCxDQUFXbUIsSUFBWCxDQUFnQkQsQ0FBQyxDQUFDRSxLQUFsQixDQURmLDJEQUM3QkMsQ0FENkIseUJBQzFCQyxNQUQwQix5QkFDbEJaLElBRGtCLHlCQUNaYSxLQURZLHlCQUNMQyxXQURLLHlCQUNRQyxHQURSO0FBRWxDVixvQkFBQUEsS0FBSyxDQUFDVyxJQUFOLGlDQUNPUixDQURQLEdBRU87QUFDQ0ksc0JBQUFBLE1BQU0sRUFBTkEsTUFERDtBQUVDWixzQkFBQUEsSUFBSSxFQUFKQSxJQUZEO0FBR0NhLHNCQUFBQSxLQUFLLEVBQUxBLEtBSEQ7QUFJQ0Msc0JBQUFBLFdBQVcsRUFBWEEsV0FKRDtBQUtDQyxzQkFBQUEsR0FBRyxFQUFIQTtBQUxELHFCQUZQO0FBVUg7Ozs7Ozs7aURBRU1WLEs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUlBbEIsZ0IiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFzaGkvRGVza3RvcC9ueWFib3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5pbXBvcnQgUGFyc2VyIGZyb20gXCJyc3MtcGFyc2VyXCI7XHJcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vTG9nZ2VyXCI7XHJcblxyXG5jbGFzcyBKcG9wU3VraVByb3ZpZGVyIHtcclxuICAgIGJhc2VVUkwgPSAnaHR0cHM6Ly9qcG9wc3VraS5ldS9mZWVkcy5waHAnO1xyXG4gICAgcGFyc2VyID0gbnVsbDtcclxuICAgIHJlZ2V4ID0gbnVsbDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnBhcnNlciA9IG5ldyBQYXJzZXIoKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZWdleCA9IC8oLis/KSAtICguKz8pIFxcW10gLSAoLis/KSBcXC8gKC4rPyk/IFxcLyAoLispLztcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBnZXRSZXN1bHRzKHBhcmFtcyA9IHtmZWVkOiAndG9ycmVudHNfbm90aWZ5XzIwMzE2X29sbG9oZnp3N2F5cXZ3bWJxazVkOHQyeWtqMHplNzNmJ30pIHtcclxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBheGlvcy5nZXQodGhpcy5iYXNlVVJMLCB7XHJcbiAgICAgICAgICAgIHBhcmFtczoge1xyXG4gICAgICAgICAgICAgICAgdXNlcjogJzE1NTg4NycsXHJcbiAgICAgICAgICAgICAgICBhdXRoOiAnY2U5MzYyMzkyMGM2YzNlY2JmZmMwM2NkNmUyYjhiMzMnLFxyXG4gICAgICAgICAgICAgICAgcGFzc2tleTogJ29sbG9oZnp3N2F5cXZ3bWJxazVkOHQyeWtqMHplNzNmJyxcclxuICAgICAgICAgICAgICAgIGF1dGhrZXk6ICcwZjNlNjgxYTZmZmM0ZDc3ZTQ4ZTNhNjhlNTIxMmFmZicsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnYWxsJyxcclxuICAgICAgICAgICAgICAgIC4uLnBhcmFtc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHBhcnNlZCA9IGF3YWl0IHRoaXMucGFyc2VyLnBhcnNlU3RyaW5nKHJlc3VsdC5kYXRhKTtcclxuICAgICAgICBpZiAoISgnaXRlbXMnIGluIHBhcnNlZCkgfHwgIXBhcnNlZC5pdGVtcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGl0ZW1zID0gW107XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgb2YgcGFyc2VkLml0ZW1zLnJldmVyc2UoKSkge1xyXG4gICAgICAgICAgICBsZXQgW2YsIGFydGlzdCwgbmFtZSwgY29kZWMsIGNvbXByZXNzaW9uLCByaXBdID0gdGhpcy5yZWdleC5leGVjKGkudGl0bGUpO1xyXG4gICAgICAgICAgICBpdGVtcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIC4uLmksXHJcbiAgICAgICAgICAgICAgICAuLi57XHJcbiAgICAgICAgICAgICAgICAgICAgYXJ0aXN0LFxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgY29kZWMsXHJcbiAgICAgICAgICAgICAgICAgICAgY29tcHJlc3Npb24sXHJcbiAgICAgICAgICAgICAgICAgICAgcmlwXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGl0ZW1zO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBKcG9wU3VraVByb3ZpZGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "JpopSukiProvider.js"
      ],
      "names": [
        "JpopSukiProvider",
        "parser",
        "Parser",
        "regex",
        "params",
        "feed",
        "axios",
        "get",
        "baseURL",
        "user",
        "auth",
        "passkey",
        "authkey",
        "name",
        "result",
        "parseString",
        "data",
        "parsed",
        "items",
        "length",
        "reverse",
        "i",
        "exec",
        "title",
        "f",
        "artist",
        "codec",
        "compression",
        "rip",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;AAKF,8BAAc;AAAA;;AAAA,qCAJJ,+BAII;;AAAA,oCAHL,IAGK;;AAAA,mCAFN,IAEM;;AACV,SAAKC,MAAL,GAAc,IAAIC,qBAAJ,EAAd;AAEA,SAAKC,KAAL,GAAa,6CAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEgBC,gBAAAA,M,2DAAS;AAACC,kBAAAA,IAAI,EAAE;AAAP,iB;;uBACDC,kBAAMC,GAAN,CAAU,KAAKC,OAAf,EAAwB;AACzCJ,kBAAAA,MAAM;AACFK,oBAAAA,IAAI,EAAE,QADJ;AAEFC,oBAAAA,IAAI,EAAE,kCAFJ;AAGFC,oBAAAA,OAAO,EAAE,kCAHP;AAIFC,oBAAAA,OAAO,EAAE,kCAJP;AAKFC,oBAAAA,IAAI,EAAE;AALJ,qBAMCT,MAND;AADmC,iBAAxB,C;;;AAAfU,gBAAAA,M;;uBAWe,KAAKb,MAAL,CAAYc,WAAZ,CAAwBD,MAAM,CAACE,IAA/B,C;;;AAAfC,gBAAAA,M;;sBACF,EAAE,WAAWA,MAAb,KAAwB,CAACA,MAAM,CAACC,KAAP,CAAaC,M;;;;;iDAC/B,E;;;AAGPD,gBAAAA,K,GAAQ,E;uDAEED,MAAM,CAACC,KAAP,CAAaE,OAAb,E;;;AAAd,sEAAsC;AAA7BC,oBAAAA,CAA6B;AAAA,uCACe,KAAKlB,KAAL,CAAWmB,IAAX,CAAgBD,CAAC,CAACE,KAAlB,CADf,2DAC7BC,CAD6B,yBAC1BC,MAD0B,yBAClBZ,IADkB,yBACZa,KADY,yBACLC,WADK,yBACQC,GADR;AAElCV,oBAAAA,KAAK,CAACW,IAAN,iCACOR,CADP,GAEO;AACCI,sBAAAA,MAAM,EAANA,MADD;AAECZ,sBAAAA,IAAI,EAAJA,IAFD;AAGCa,sBAAAA,KAAK,EAALA,KAHD;AAICC,sBAAAA,WAAW,EAAXA,WAJD;AAKCC,sBAAAA,GAAG,EAAHA;AALD,qBAFP;AAUH;;;;;;;iDAEMV,K;;;;;;;;;;;;;;;;;;;;;eAIAlB,gB",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import axios from \"axios\";\r\nimport Parser from \"rss-parser\";\r\nimport logger from \"./Logger\";\r\n\r\nclass JpopSukiProvider {\r\n    baseURL = 'https://jpopsuki.eu/feeds.php';\r\n    parser = null;\r\n    regex = null;\r\n\r\n    constructor() {\r\n        this.parser = new Parser();\r\n\r\n        this.regex = /(.+?) - (.+?) \\[] - (.+?) \\/ (.+?)? \\/ (.+)/;\r\n    }\r\n\r\n    async getResults(params = {feed: 'torrents_notify_20316_ollohfzw7ayqvwmbqk5d8t2ykj0ze73f'}) {\r\n        const result = await axios.get(this.baseURL, {\r\n            params: {\r\n                user: '155887',\r\n                auth: 'ce93623920c6c3ecbffc03cd6e2b8b33',\r\n                passkey: 'ollohfzw7ayqvwmbqk5d8t2ykj0ze73f',\r\n                authkey: '0f3e681a6ffc4d77e48e3a68e5212aff',\r\n                name: 'all',\r\n                ...params\r\n            }\r\n        });\r\n\r\n        const parsed = await this.parser.parseString(result.data);\r\n        if (!('items' in parsed) || !parsed.items.length) {\r\n            return [];\r\n        }\r\n\r\n        let items = [];\r\n\r\n        for (let i of parsed.items.reverse()) {\r\n            let [f, artist, name, codec, compression, rip] = this.regex.exec(i.title);\r\n            items.push({\r\n                ...i,\r\n                ...{\r\n                    artist,\r\n                    name,\r\n                    codec,\r\n                    compression,\r\n                    rip\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nexport default JpopSukiProvider;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303517868
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Bot = _interopRequireDefault(require(\"./Bot\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION_TOKEN = '';\nvar DEV_TOKEN = '';\nvar mode = process.env.NODE_ENV;\nnew _Bot[\"default\"](mode === 'development' ? DEV_TOKEN : PRODUCTION_TOKEN);\nprocess.on('unhandledRejection', function (reason, promise) {\n  _Logger[\"default\"].error('Unhandled promise rejection ' + reason.toString());\n\n  console.log(reason);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT05fVE9LRU4iLCJERVZfVE9LRU4iLCJtb2RlIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiRGlzY29yZEJvdCIsIm9uIiwicmVhc29uIiwicHJvbWlzZSIsImxvZ2dlciIsImVycm9yIiwidG9TdHJpbmciLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsZ0JBQWdCLEdBQUcsRUFBekI7QUFDQSxJQUFNQyxTQUFTLEdBQUcsRUFBbEI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUF6QjtBQUVBLElBQUlDLGVBQUosQ0FBZUosSUFBSSxLQUFLLGFBQVQsR0FBeUJELFNBQXpCLEdBQXFDRCxnQkFBcEQ7QUFDQUcsT0FBTyxDQUFDSSxFQUFSLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0MsTUFBRCxFQUFTQyxPQUFULEVBQXFCO0FBQ2xEQyxxQkFBT0MsS0FBUCxDQUFhLGlDQUFpQ0gsTUFBTSxDQUFDSSxRQUFQLEVBQTlDOztBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sTUFBWjtBQUNILENBSEQiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFzaGkvRGVza3RvcC9ueWFib3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpc2NvcmRCb3QgZnJvbSBcIi4vQm90XCI7XHJcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vTG9nZ2VyXCI7XHJcblxyXG5jb25zdCBQUk9EVUNUSU9OX1RPS0VOID0gJyc7XHJcbmNvbnN0IERFVl9UT0tFTiA9ICcnO1xyXG5cclxuY29uc3QgbW9kZSA9IHByb2Nlc3MuZW52Lk5PREVfRU5WO1xyXG5cclxubmV3IERpc2NvcmRCb3QobW9kZSA9PT0gJ2RldmVsb3BtZW50JyA/IERFVl9UT0tFTiA6IFBST0RVQ1RJT05fVE9LRU4pO1xyXG5wcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCAocmVhc29uLCBwcm9taXNlKSA9PiB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiAnICsgcmVhc29uLnRvU3RyaW5nKCkpO1xyXG4gICAgY29uc29sZS5sb2cocmVhc29uKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PRODUCTION_TOKEN",
        "DEV_TOKEN",
        "mode",
        "process",
        "env",
        "NODE_ENV",
        "DiscordBot",
        "on",
        "reason",
        "promise",
        "logger",
        "error",
        "toString",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAG,EAAzB;AACA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAzB;AAEA,IAAIC,eAAJ,CAAeJ,IAAI,KAAK,aAAT,GAAyBD,SAAzB,GAAqCD,gBAApD;AACAG,OAAO,CAACI,EAAR,CAAW,oBAAX,EAAiC,UAACC,MAAD,EAASC,OAAT,EAAqB;AAClDC,qBAAOC,KAAP,CAAa,iCAAiCH,MAAM,CAACI,QAAP,EAA9C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,CAHD",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import DiscordBot from \"./Bot\";\r\nimport logger from \"./Logger\";\r\n\r\nconst PRODUCTION_TOKEN = '';\r\nconst DEV_TOKEN = '';\r\n\r\nconst mode = process.env.NODE_ENV;\r\n\r\nnew DiscordBot(mode === 'development' ? DEV_TOKEN : PRODUCTION_TOKEN);\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n    logger.error('Unhandled promise rejection ' + reason.toString());\r\n    console.log(reason);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303705735
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/Bot.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/Bot.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/Bot.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/Bot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "Bot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.VERSION = exports.COMMAND_CHARACTER = void 0;\n\nvar _discord = require(\"discord.js\");\n\nvar _NyaaProvider = _interopRequireDefault(require(\"./NyaaProvider\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nvar _BotGuildInstance = _interopRequireDefault(require(\"./BotGuildInstance\"));\n\nvar _JpopSukiProvider = _interopRequireDefault(require(\"./JpopSukiProvider\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar COMMAND_CHARACTER = '+';\nexports.COMMAND_CHARACTER = COMMAND_CHARACTER;\nvar VERSION = '1.0.1';\nexports.VERSION = VERSION;\n\nvar Bot = /*#__PURE__*/function () {\n  // token = 'Nzg4OTYwNTEzNzk4NTcwMDI2.X9rGvA.5zDGeLfdLuCyb8tJHX5f6F9RQD4';\n  function Bot(token) {\n    _classCallCheck(this, Bot);\n\n    _defineProperty(this, \"bot\", null);\n\n    _defineProperty(this, \"token\", null);\n\n    _defineProperty(this, \"nyaa\", null);\n\n    _defineProperty(this, \"jpop\", null);\n\n    _defineProperty(this, \"subBots\", {});\n\n    this.token = \"Njk2ODgyODc3MTE5NTk0NTIz.XovMwQ.D1XU0MtrPQWipClU9_deRUZlqbk\";\n    this.bot = new _discord.Client();\n    this.nyaa = new _NyaaProvider[\"default\"]();\n    this.jpop = new _JpopSukiProvider[\"default\"]();\n    this.init();\n  }\n\n  _createClass(Bot, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.bot.on('ready', this.onReady.bind(this));\n                this.bot.login(this.token);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"onReady\",\n    value: function () {\n      var _onReady = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _iterator, _step, guild;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _Logger[\"default\"].info(\"Bot is now ready, working as \".concat(this.bot.user.tag));\n\n                _iterator = _createForOfIteratorHelper(this.bot.guilds.cache);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    guild = _step.value;\n\n                    _Logger[\"default\"].info(\"Preparing cache for \" + guild[0].toString());\n\n                    this.subBots[guild[0]] = new _BotGuildInstance[\"default\"](guild[0], this.bot, this.nyaa, this.jpop);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                this.bot.user.setActivity('hardcore rawre porn', {\n                  type: 'WATCHING'\n                });\n                this.bot.on('message', this.onMessage.bind(this));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onReady() {\n        return _onReady.apply(this, arguments);\n      }\n\n      return onReady;\n    }()\n  }, {\n    key: \"onMessage\",\n    value: function () {\n      var _onMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(msg) {\n        var guildID, content, space, command;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.bot.user.id === msg.author.id)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                guildID = msg.channel.guild.id;\n                content = msg.content;\n\n                if (!content.startsWith(COMMAND_CHARACTER)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                space = content.indexOf(' ');\n                command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\n\n                if (command in this.subBots[guildID].commands) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                _context3.next = 11;\n                return this.subBots[guildID].allowedToCommand(msg);\n\n              case 11:\n                if (_context3.sent) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 14;\n                return msg.channel.send(\"rude bitch not allowed\");\n\n              case 14:\n                return _context3.abrupt(\"return\");\n\n              case 15:\n                _context3.next = 17;\n                return this.subBots[guildID].commands[command](msg);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onMessage(_x) {\n        return _onMessage.apply(this, arguments);\n      }\n\n      return onMessage;\n    }()\n  }]);\n\n  return Bot;\n}();\n\nvar _default = Bot;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvdC5qcyJdLCJuYW1lcyI6WyJDT01NQU5EX0NIQVJBQ1RFUiIsIlZFUlNJT04iLCJCb3QiLCJ0b2tlbiIsImJvdCIsIkNsaWVudCIsIm55YWEiLCJOeWFhUHJvdmlkZXIiLCJqcG9wIiwiSnBvcFN1a2lQcm92aWRlciIsImluaXQiLCJvbiIsIm9uUmVhZHkiLCJiaW5kIiwibG9naW4iLCJsb2dnZXIiLCJpbmZvIiwidXNlciIsInRhZyIsImd1aWxkcyIsImNhY2hlIiwiZ3VpbGQiLCJ0b1N0cmluZyIsInN1YkJvdHMiLCJCb3RHdWlsZEluc3RhbmNlIiwic2V0QWN0aXZpdHkiLCJ0eXBlIiwib25NZXNzYWdlIiwibXNnIiwiaWQiLCJhdXRob3IiLCJndWlsZElEIiwiY2hhbm5lbCIsImNvbnRlbnQiLCJzdGFydHNXaXRoIiwic3BhY2UiLCJpbmRleE9mIiwiY29tbWFuZCIsInN1YnN0cmluZyIsImxlbmd0aCIsImNvbW1hbmRzIiwiYWxsb3dlZFRvQ29tbWFuZCIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLElBQU1BLGlCQUFpQixHQUFHLEdBQTFCOztBQUNBLElBQU1DLE9BQU8sR0FBRyxPQUFoQjs7O0lBRURDLEc7QUFHRjtBQUtBLGVBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQSxpQ0FQYixJQU9hOztBQUFBLG1DQU5iLElBTWE7O0FBQUEsa0NBSlosSUFJWTs7QUFBQSxrQ0FIWixJQUdZOztBQUFBLHFDQUZULEVBRVM7O0FBQ2YsU0FBS0EsS0FBTCxHQUFhLDZEQUFiO0FBQ0EsU0FBS0MsR0FBTCxHQUFXLElBQUlDLGVBQUosRUFBWDtBQUNBLFNBQUtDLElBQUwsR0FBWSxJQUFJQyx3QkFBSixFQUFaO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLElBQUlDLDRCQUFKLEVBQVo7QUFDQSxTQUFLQyxJQUFMO0FBQ0g7Ozs7Ozs7Ozs7QUFHRyxxQkFBS04sR0FBTCxDQUFTTyxFQUFULENBQVksT0FBWixFQUFxQixLQUFLQyxPQUFMLENBQWFDLElBQWIsQ0FBa0IsSUFBbEIsQ0FBckI7QUFDQSxxQkFBS1QsR0FBTCxDQUFTVSxLQUFULENBQWUsS0FBS1gsS0FBcEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUFZLG1DQUFPQyxJQUFQLHdDQUE0QyxLQUFLWixHQUFMLENBQVNhLElBQVQsQ0FBY0MsR0FBMUQ7O3VEQUVrQixLQUFLZCxHQUFMLENBQVNlLE1BQVQsQ0FBZ0JDLEs7OztBQUFsQyxzRUFBeUM7QUFBaENDLG9CQUFBQSxLQUFnQzs7QUFDckNOLHVDQUFPQyxJQUFQLENBQVkseUJBQXlCSyxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNDLFFBQVQsRUFBckM7O0FBQ0EseUJBQUtDLE9BQUwsQ0FBYUYsS0FBSyxDQUFDLENBQUQsQ0FBbEIsSUFBeUIsSUFBSUcsNEJBQUosQ0FBcUJILEtBQUssQ0FBQyxDQUFELENBQTFCLEVBQStCLEtBQUtqQixHQUFwQyxFQUF5QyxLQUFLRSxJQUE5QyxFQUFvRCxLQUFLRSxJQUF6RCxDQUF6QjtBQUNIOzs7Ozs7O0FBRUQscUJBQUtKLEdBQUwsQ0FBU2EsSUFBVCxDQUFjUSxXQUFkLENBQTBCLHFCQUExQixFQUFpRDtBQUFDQyxrQkFBQUEsSUFBSSxFQUFFO0FBQVAsaUJBQWpEO0FBQ0EscUJBQUt0QixHQUFMLENBQVNPLEVBQVQsQ0FBWSxTQUFaLEVBQXVCLEtBQUtnQixTQUFMLENBQWVkLElBQWYsQ0FBb0IsSUFBcEIsQ0FBdkI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUdBR1llLEc7Ozs7OztzQkFDUixLQUFLeEIsR0FBTCxDQUFTYSxJQUFULENBQWNZLEVBQWQsS0FBcUJELEdBQUcsQ0FBQ0UsTUFBSixDQUFXRCxFOzs7Ozs7OztBQUk5QkUsZ0JBQUFBLE8sR0FBVUgsR0FBRyxDQUFDSSxPQUFKLENBQVlYLEtBQVosQ0FBa0JRLEU7QUFFNUJJLGdCQUFBQSxPLEdBQVVMLEdBQUcsQ0FBQ0ssTzs7cUJBQ2hCQSxPQUFPLENBQUNDLFVBQVIsQ0FBbUJsQyxpQkFBbkIsQzs7Ozs7QUFDTW1DLGdCQUFBQSxLLEdBQVFGLE9BQU8sQ0FBQ0csT0FBUixDQUFnQixHQUFoQixDO0FBQ1JDLGdCQUFBQSxPLEdBQVVKLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQnRDLGlCQUFpQixDQUFDdUMsTUFBcEMsRUFBNENKLEtBQUssS0FBSyxDQUFDLENBQVgsR0FBZUYsT0FBTyxDQUFDTSxNQUF2QixHQUFnQ0osS0FBNUUsQzs7b0JBQ1ZFLE9BQU8sSUFBSSxLQUFLZCxPQUFMLENBQWFRLE9BQWIsRUFBc0JTLFE7Ozs7Ozs7Ozt1QkFJNUIsS0FBS2pCLE9BQUwsQ0FBYVEsT0FBYixFQUFzQlUsZ0JBQXRCLENBQXVDYixHQUF2QyxDOzs7Ozs7Ozs7dUJBQ0RBLEdBQUcsQ0FBQ0ksT0FBSixDQUFZVSxJQUFaLENBQWlCLHdCQUFqQixDOzs7Ozs7O3VCQUlKLEtBQUtuQixPQUFMLENBQWFRLE9BQWIsRUFBc0JTLFFBQXRCLENBQStCSCxPQUEvQixFQUF3Q1QsR0FBeEMsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBS0gxQixHIiwic291cmNlUm9vdCI6Ii9ob21lL3Rhc2hpL0Rlc2t0b3AvbnlhYm90LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2xpZW50fSBmcm9tICdkaXNjb3JkLmpzJztcclxuaW1wb3J0IE55YWFQcm92aWRlciBmcm9tIFwiLi9OeWFhUHJvdmlkZXJcIjtcclxuaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi9Mb2dnZXJcIjtcclxuaW1wb3J0IEJvdEd1aWxkSW5zdGFuY2UgZnJvbSBcIi4vQm90R3VpbGRJbnN0YW5jZVwiO1xyXG5pbXBvcnQgSnBvcFN1a2lQcm92aWRlciBmcm9tIFwiLi9KcG9wU3VraVByb3ZpZGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgQ09NTUFORF9DSEFSQUNURVIgPSAnKyc7XHJcbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzEuMC4xJztcclxuXHJcbmNsYXNzIEJvdCB7XHJcbiAgICBib3QgPSBudWxsO1xyXG4gICAgdG9rZW49bnVsbDtcclxuICAgIC8vIHRva2VuID0gJ056ZzRPVFl3TlRFek56azROVGN3TURJMi5YOXJHdkEuNXpER2VMZmRMdUN5Yjh0SkhYNWY2RjlSUUQ0JztcclxuICAgIG55YWEgPSBudWxsO1xyXG4gICAganBvcCA9IG51bGw7XHJcbiAgICBzdWJCb3RzID0ge307XHJcblxyXG4gICAgY29uc3RydWN0b3IodG9rZW4pIHtcclxuICAgICAgICB0aGlzLnRva2VuID0gXCJOamsyT0RneU9EYzNNVEU1TlRrME5USXouWG92TXdRLkQxWFUwTXRyUFFXaXBDbFU5X2RlUlVabHFia1wiO1xyXG4gICAgICAgIHRoaXMuYm90ID0gbmV3IENsaWVudCgpO1xyXG4gICAgICAgIHRoaXMubnlhYSA9IG5ldyBOeWFhUHJvdmlkZXIoKTtcclxuICAgICAgICB0aGlzLmpwb3AgPSBuZXcgSnBvcFN1a2lQcm92aWRlcigpO1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5ib3Qub24oJ3JlYWR5JywgdGhpcy5vblJlYWR5LmJpbmQodGhpcykpO1xyXG4gICAgICAgIHRoaXMuYm90LmxvZ2luKHRoaXMudG9rZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIG9uUmVhZHkoKSB7XHJcbiAgICAgICAgbG9nZ2VyLmluZm8oYEJvdCBpcyBub3cgcmVhZHksIHdvcmtpbmcgYXMgJHt0aGlzLmJvdC51c2VyLnRhZ31gKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZ3VpbGQgb2YgdGhpcy5ib3QuZ3VpbGRzLmNhY2hlKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwiUHJlcGFyaW5nIGNhY2hlIGZvciBcIiArIGd1aWxkWzBdLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICB0aGlzLnN1YkJvdHNbZ3VpbGRbMF1dID0gbmV3IEJvdEd1aWxkSW5zdGFuY2UoZ3VpbGRbMF0sIHRoaXMuYm90LCB0aGlzLm55YWEsIHRoaXMuanBvcCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJvdC51c2VyLnNldEFjdGl2aXR5KCdoYXJkY29yZSByYXdyZSBwb3JuJywge3R5cGU6ICdXQVRDSElORyd9KTtcclxuICAgICAgICB0aGlzLmJvdC5vbignbWVzc2FnZScsIHRoaXMub25NZXNzYWdlLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIG9uTWVzc2FnZShtc2cpIHtcclxuICAgICAgICBpZiAodGhpcy5ib3QudXNlci5pZCA9PT0gbXNnLmF1dGhvci5pZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBndWlsZElEID0gbXNnLmNoYW5uZWwuZ3VpbGQuaWQ7XHJcblxyXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBtc2cuY29udGVudDtcclxuICAgICAgICBpZiAoY29udGVudC5zdGFydHNXaXRoKENPTU1BTkRfQ0hBUkFDVEVSKSkge1xyXG4gICAgICAgICAgICBjb25zdCBzcGFjZSA9IGNvbnRlbnQuaW5kZXhPZignICcpO1xyXG4gICAgICAgICAgICBjb25zdCBjb21tYW5kID0gY29udGVudC5zdWJzdHJpbmcoQ09NTUFORF9DSEFSQUNURVIubGVuZ3RoLCBzcGFjZSA9PT0gLTEgPyBjb250ZW50Lmxlbmd0aCA6IHNwYWNlKTtcclxuICAgICAgICAgICAgaWYgKCEoY29tbWFuZCBpbiB0aGlzLnN1YkJvdHNbZ3VpbGRJRF0uY29tbWFuZHMpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghYXdhaXQgdGhpcy5zdWJCb3RzW2d1aWxkSURdLmFsbG93ZWRUb0NvbW1hbmQobXNnKSkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgbXNnLmNoYW5uZWwuc2VuZChcInJ1ZGUgYml0Y2ggbm90IGFsbG93ZWRcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc3ViQm90c1tndWlsZElEXS5jb21tYW5kc1tjb21tYW5kXShtc2cpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm90OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Bot.js"
      ],
      "names": [
        "COMMAND_CHARACTER",
        "VERSION",
        "Bot",
        "token",
        "bot",
        "Client",
        "nyaa",
        "NyaaProvider",
        "jpop",
        "JpopSukiProvider",
        "init",
        "on",
        "onReady",
        "bind",
        "login",
        "logger",
        "info",
        "user",
        "tag",
        "guilds",
        "cache",
        "guild",
        "toString",
        "subBots",
        "BotGuildInstance",
        "setActivity",
        "type",
        "onMessage",
        "msg",
        "id",
        "author",
        "guildID",
        "channel",
        "content",
        "startsWith",
        "space",
        "indexOf",
        "command",
        "substring",
        "length",
        "commands",
        "allowedToCommand",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,iBAAiB,GAAG,GAA1B;;AACA,IAAMC,OAAO,GAAG,OAAhB;;;IAEDC,G;AAGF;AAKA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,iCAPb,IAOa;;AAAA,mCANb,IAMa;;AAAA,kCAJZ,IAIY;;AAAA,kCAHZ,IAGY;;AAAA,qCAFT,EAES;;AACf,SAAKA,KAAL,GAAa,6DAAb;AACA,SAAKC,GAAL,GAAW,IAAIC,eAAJ,EAAX;AACA,SAAKC,IAAL,GAAY,IAAIC,wBAAJ,EAAZ;AACA,SAAKC,IAAL,GAAY,IAAIC,4BAAJ,EAAZ;AACA,SAAKC,IAAL;AACH;;;;;;;;;;AAGG,qBAAKN,GAAL,CAASO,EAAT,CAAY,OAAZ,EAAqB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAArB;AACA,qBAAKT,GAAL,CAASU,KAAT,CAAe,KAAKX,KAApB;;;;;;;;;;;;;;;;;;;;;;;;;;AAIAY,mCAAOC,IAAP,wCAA4C,KAAKZ,GAAL,CAASa,IAAT,CAAcC,GAA1D;;uDAEkB,KAAKd,GAAL,CAASe,MAAT,CAAgBC,K;;;AAAlC,sEAAyC;AAAhCC,oBAAAA,KAAgC;;AACrCN,uCAAOC,IAAP,CAAY,yBAAyBK,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,EAArC;;AACA,yBAAKC,OAAL,CAAaF,KAAK,CAAC,CAAD,CAAlB,IAAyB,IAAIG,4BAAJ,CAAqBH,KAAK,CAAC,CAAD,CAA1B,EAA+B,KAAKjB,GAApC,EAAyC,KAAKE,IAA9C,EAAoD,KAAKE,IAAzD,CAAzB;AACH;;;;;;;AAED,qBAAKJ,GAAL,CAASa,IAAT,CAAcQ,WAAd,CAA0B,qBAA1B,EAAiD;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAAjD;AACA,qBAAKtB,GAAL,CAASO,EAAT,CAAY,SAAZ,EAAuB,KAAKgB,SAAL,CAAed,IAAf,CAAoB,IAApB,CAAvB;;;;;;;;;;;;;;;;;;;iGAGYe,G;;;;;;sBACR,KAAKxB,GAAL,CAASa,IAAT,CAAcY,EAAd,KAAqBD,GAAG,CAACE,MAAJ,CAAWD,E;;;;;;;;AAI9BE,gBAAAA,O,GAAUH,GAAG,CAACI,OAAJ,CAAYX,KAAZ,CAAkBQ,E;AAE5BI,gBAAAA,O,GAAUL,GAAG,CAACK,O;;qBAChBA,OAAO,CAACC,UAAR,CAAmBlC,iBAAnB,C;;;;;AACMmC,gBAAAA,K,GAAQF,OAAO,CAACG,OAAR,CAAgB,GAAhB,C;AACRC,gBAAAA,O,GAAUJ,OAAO,CAACK,SAAR,CAAkBtC,iBAAiB,CAACuC,MAApC,EAA4CJ,KAAK,KAAK,CAAC,CAAX,GAAeF,OAAO,CAACM,MAAvB,GAAgCJ,KAA5E,C;;oBACVE,OAAO,IAAI,KAAKd,OAAL,CAAaQ,OAAb,EAAsBS,Q;;;;;;;;;uBAI5B,KAAKjB,OAAL,CAAaQ,OAAb,EAAsBU,gBAAtB,CAAuCb,GAAvC,C;;;;;;;;;uBACDA,GAAG,CAACI,OAAJ,CAAYU,IAAZ,CAAiB,wBAAjB,C;;;;;;;uBAIJ,KAAKnB,OAAL,CAAaQ,OAAb,EAAsBS,QAAtB,CAA+BH,OAA/B,EAAwCT,GAAxC,C;;;;;;;;;;;;;;;;;;;;;eAKH1B,G",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import {Client} from 'discord.js';\r\nimport NyaaProvider from \"./NyaaProvider\";\r\nimport logger from \"./Logger\";\r\nimport BotGuildInstance from \"./BotGuildInstance\";\r\nimport JpopSukiProvider from \"./JpopSukiProvider\";\r\n\r\nexport const COMMAND_CHARACTER = '+';\r\nexport const VERSION = '1.0.1';\r\n\r\nclass Bot {\r\n    bot = null;\r\n    token=null;\r\n    // token = 'Nzg4OTYwNTEzNzk4NTcwMDI2.X9rGvA.5zDGeLfdLuCyb8tJHX5f6F9RQD4';\r\n    nyaa = null;\r\n    jpop = null;\r\n    subBots = {};\r\n\r\n    constructor(token) {\r\n        this.token = \"Njk2ODgyODc3MTE5NTk0NTIz.XovMwQ.D1XU0MtrPQWipClU9_deRUZlqbk\";\r\n        this.bot = new Client();\r\n        this.nyaa = new NyaaProvider();\r\n        this.jpop = new JpopSukiProvider();\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        this.bot.on('ready', this.onReady.bind(this));\r\n        this.bot.login(this.token);\r\n    }\r\n\r\n    async onReady() {\r\n        logger.info(`Bot is now ready, working as ${this.bot.user.tag}`);\r\n\r\n        for (let guild of this.bot.guilds.cache) {\r\n            logger.info(\"Preparing cache for \" + guild[0].toString());\r\n            this.subBots[guild[0]] = new BotGuildInstance(guild[0], this.bot, this.nyaa, this.jpop);\r\n        }\r\n\r\n        this.bot.user.setActivity('hardcore rawre porn', {type: 'WATCHING'});\r\n        this.bot.on('message', this.onMessage.bind(this));\r\n    }\r\n\r\n    async onMessage(msg) {\r\n        if (this.bot.user.id === msg.author.id) {\r\n            return;\r\n        }\r\n\r\n        const guildID = msg.channel.guild.id;\r\n\r\n        const content = msg.content;\r\n        if (content.startsWith(COMMAND_CHARACTER)) {\r\n            const space = content.indexOf(' ');\r\n            const command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\r\n            if (!(command in this.subBots[guildID].commands)) {\r\n                return;\r\n            }\r\n\r\n            if (!await this.subBots[guildID].allowedToCommand(msg)) {\r\n                await msg.channel.send(\"rude bitch not allowed\");\r\n                return;\r\n            }\r\n\r\n            await this.subBots[guildID].commands[command](msg);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bot;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611308174527
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/NyaaProvider.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/NyaaProvider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "NyaaProvider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _rssParser = _interopRequireDefault(require(\"rss-parser\"));\n\nvar _parseTorrentName = _interopRequireDefault(require(\"parse-torrent-name\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NyaaProvider = /*#__PURE__*/function () {\n  function NyaaProvider() {\n    _classCallCheck(this, NyaaProvider);\n\n    _defineProperty(this, \"baseURL\", 'https://nyaa.si/');\n\n    _defineProperty(this, \"parser\", null);\n\n    _defineProperty(this, \"regex\", null);\n\n    _defineProperty(this, \"episodeRegex\", null);\n\n    this.parser = new _rssParser[\"default\"]({\n      customFields: {\n        item: [['nyaa:seeders', 'seeders'], ['nyaa:leechers', 'leechers'], ['nyaa:downloads', 'downloads'], ['nyaa:size', 'size']]\n      }\n    });\n    this.regex = /(\\[(.+?)])(.+)(\\[(.+?)])/;\n    this.episodeRegex = /(\\d+)(v\\d+)?[-~]?(\\d+)?/g;\n  }\n\n  _createClass(NyaaProvider, [{\n    key: \"getResults\",\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {\n        var params,\n            result,\n            parsed,\n            items,\n            _iterator,\n            _step,\n            i,\n            _this$parseTitle,\n            _this$parseTitle2,\n            group,\n            resolution,\n            episodeMain,\n            episodeSecondary,\n            showname,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n                  f: 0,\n                  c: '1_2'\n                };\n                _context.next = 3;\n                return _axios[\"default\"].get(this.baseURL, {\n                  params: _objectSpread({\n                    page: 'rss',\n                    q: query\n                  }, params)\n                });\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return this.parser.parseString(result.data);\n\n              case 6:\n                parsed = _context.sent;\n\n                if (!(!('items' in parsed) || !parsed.items.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", []);\n\n              case 9:\n                items = [];\n                _iterator = _createForOfIteratorHelper(parsed.items.reverse());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    _this$parseTitle = this.parseTitle(i.title), _this$parseTitle2 = _slicedToArray(_this$parseTitle, 5), group = _this$parseTitle2[0], resolution = _this$parseTitle2[1], episodeMain = _this$parseTitle2[2], episodeSecondary = _this$parseTitle2[3], showname = _this$parseTitle2[4];\n                    items.push(_objectSpread(_objectSpread({}, i), {\n                      group: group,\n                      resolution: resolution,\n                      episodeMain: episodeMain,\n                      episodeSecondary: episodeSecondary,\n                      showName: showname\n                    }));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context.abrupt(\"return\", items);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResults(_x) {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }, {\n    key: \"parseTitle\",\n    value: function parseTitle(title) {\n      var okay = false,\n          group,\n          resolution,\n          episodeMain,\n          episodeSecondary,\n          showname;\n      var functions = [this.parseGeneric.bind(this), this.parseFromPtn.bind(this)];\n\n      for (var i = 0; i < functions.length; i++) {\n        var _functions$i = functions[i](title);\n\n        var _functions$i2 = _slicedToArray(_functions$i, 6);\n\n        okay = _functions$i2[0];\n        group = _functions$i2[1];\n        resolution = _functions$i2[2];\n        episodeMain = _functions$i2[3];\n        episodeSecondary = _functions$i2[4];\n        showname = _functions$i2[5];\n\n        if (okay) {\n          break;\n        }\n      }\n\n      return [group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"parseGeneric\",\n    value: function parseGeneric(title) {\n      var found = this.regex.exec(title);\n      var f, left, group, showname, right, resolution;\n      var episodeMain, episodeSecondary;\n\n      if (found === null) {\n        return [false, null, null, null, null, null];\n      }\n\n      var _found = _slicedToArray(found, 6);\n\n      f = _found[0];\n      left = _found[1];\n      group = _found[2];\n      showname = _found[3];\n      right = _found[4];\n      resolution = _found[5];\n\n      var _this$getEpisodeMatch = this.getEpisodeMatch(showname);\n\n      var _this$getEpisodeMatch2 = _slicedToArray(_this$getEpisodeMatch, 2);\n\n      episodeMain = _this$getEpisodeMatch2[0];\n      episodeSecondary = _this$getEpisodeMatch2[1];\n      return [true, group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"parseFromPtn\",\n    value: function parseFromPtn(title) {\n      var results = (0, _parseTorrentName[\"default\"])(title);\n      var group = _lodash[\"default\"].isUndefined(results.website) ? _lodash[\"default\"].isUndefined(results.group) ? 'Unknown' : results.group : results.website;\n      var resolution = _lodash[\"default\"].isUndefined(results.resolution) ? 'Unknown' : results.resolution;\n\n      var _this$getEpisodeMatch3 = this.getEpisodeMatch(results.title),\n          _this$getEpisodeMatch4 = _slicedToArray(_this$getEpisodeMatch3, 2),\n          episodeMain = _this$getEpisodeMatch4[0],\n          episodeSecondary = _this$getEpisodeMatch4[1];\n\n      if (_lodash[\"default\"].isUndefined(episodeMain)) {\n        var _this$getEpisodeMatch5 = this.getEpisodeMatch(title);\n\n        var _this$getEpisodeMatch6 = _slicedToArray(_this$getEpisodeMatch5, 2);\n\n        episodeMain = _this$getEpisodeMatch6[0];\n        episodeSecondary = _this$getEpisodeMatch6[1];\n      }\n\n      var showname = _lodash[\"default\"].isUndefined(results.title) ? title : results.title;\n      return [true, group, resolution, episodeMain, episodeSecondary, showname];\n    }\n  }, {\n    key: \"getEpisodeMatch\",\n    value: function getEpisodeMatch(part) {\n      var firstNonNameCharacter = [part.indexOf('(', 1), part.indexOf('[', 1)];\n\n      while (true) {\n        var index = firstNonNameCharacter.indexOf(-1);\n\n        if (index === -1) {\n          break;\n        }\n\n        firstNonNameCharacter.splice(index, 1);\n      }\n\n      if (firstNonNameCharacter.length) {\n        var _index = _lodash[\"default\"].min(firstNonNameCharacter);\n\n        if (!_lodash[\"default\"].isUndefined(_index)) {\n          part = part.substring(0, _index).trim();\n        }\n      }\n\n      var lastFoundMatch = null;\n      var episodeMain, episodeSecondary, version, f;\n      var match = null;\n\n      while ((match = this.episodeRegex.exec(part)) !== null) {\n        lastFoundMatch = match;\n      }\n\n      if (lastFoundMatch !== null) {\n        var _lastFoundMatch = lastFoundMatch;\n\n        var _lastFoundMatch2 = _slicedToArray(_lastFoundMatch, 4);\n\n        f = _lastFoundMatch2[0];\n        episodeMain = _lastFoundMatch2[1];\n        version = _lastFoundMatch2[2];\n        episodeSecondary = _lastFoundMatch2[3];\n        episodeMain = parseInt(episodeMain);\n\n        if (!_lodash[\"default\"].isUndefined(episodeSecondary)) {\n          episodeSecondary = parseInt(episodeSecondary);\n        }\n      }\n\n      return [episodeMain, episodeSecondary];\n    }\n  }]);\n\n  return NyaaProvider;\n}();\n\nvar _default = NyaaProvider;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "NyaaProvider.js"
      ],
      "names": [
        "NyaaProvider",
        "parser",
        "Parser",
        "customFields",
        "item",
        "regex",
        "episodeRegex",
        "query",
        "params",
        "f",
        "c",
        "axios",
        "get",
        "baseURL",
        "page",
        "q",
        "result",
        "parseString",
        "data",
        "parsed",
        "items",
        "length",
        "reverse",
        "i",
        "parseTitle",
        "title",
        "group",
        "resolution",
        "episodeMain",
        "episodeSecondary",
        "showname",
        "push",
        "showName",
        "okay",
        "functions",
        "parseGeneric",
        "bind",
        "parseFromPtn",
        "found",
        "exec",
        "left",
        "right",
        "getEpisodeMatch",
        "results",
        "_",
        "isUndefined",
        "website",
        "part",
        "firstNonNameCharacter",
        "indexOf",
        "index",
        "splice",
        "min",
        "substring",
        "trim",
        "lastFoundMatch",
        "version",
        "match",
        "parseInt"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import axios from \"axios\";\r\nimport Parser from \"rss-parser\";\r\nimport ptn from \"parse-torrent-name\";\r\nimport _ from \"lodash\";\r\n\r\nclass NyaaProvider {\r\n    baseURL = 'https://nyaa.si/';\r\n    parser = null;\r\n    regex = null;\r\n    episodeRegex = null;\r\n\r\n    constructor() {\r\n        this.parser = new Parser({\r\n            customFields: {\r\n                item: [['nyaa:seeders', 'seeders'], ['nyaa:leechers', 'leechers'], ['nyaa:downloads', 'downloads'], ['nyaa:size', 'size']]\r\n            }\r\n        });\r\n\r\n        this.regex = /(\\[(.+?)])(.+)(\\[(.+?)])/;\r\n        this.episodeRegex = /(\\d+)(v\\d+)?[-~]?(\\d+)?/g;\r\n    }\r\n\r\n    async getResults(query, params = {f: 0, c: '1_2'}) {\r\n        const result = await axios.get(this.baseURL, {\r\n            params: {\r\n                page: 'rss',\r\n                q: query,\r\n                ...params\r\n            }\r\n        });\r\n\r\n        const parsed = await this.parser.parseString(result.data);\r\n        if (!('items' in parsed) || !parsed.items.length) {\r\n            return [];\r\n        }\r\n\r\n        let items = [];\r\n\r\n        for (let i of parsed.items.reverse()) {\r\n            let [group, resolution, episodeMain, episodeSecondary, showname] = this.parseTitle(i.title);\r\n\r\n            items.push({\r\n                ...i,\r\n                ...{\r\n                    group,\r\n                    resolution,\r\n                    episodeMain,\r\n                    episodeSecondary,\r\n                    showName: showname\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    parseTitle(title) {\r\n        let okay = false,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname;\r\n\r\n        const functions = [this.parseGeneric.bind(this), this.parseFromPtn.bind(this)];\r\n        for (let i = 0; i < functions.length; i++) {\r\n            [okay, group, resolution, episodeMain, episodeSecondary, showname] = functions[i](title);\r\n            if (okay) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return [\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    parseGeneric(title) {\r\n        const found = this.regex.exec(title);\r\n        let f, left, group, showname, right, resolution;\r\n        let episodeMain, episodeSecondary;\r\n\r\n        if (found === null) {\r\n            return [\r\n                false,\r\n                null,\r\n                null,\r\n                null,\r\n                null,\r\n                null\r\n            ];\r\n        }\r\n\r\n        [f, left, group, showname, right, resolution] = found;\r\n\r\n        [episodeMain, episodeSecondary] = this.getEpisodeMatch(showname);\r\n\r\n        return [\r\n            true,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    parseFromPtn(title) {\r\n        let results = ptn(title);\r\n        const group = _.isUndefined(results.website) ? (_.isUndefined(results.group) ? 'Unknown' : results.group) : results.website;\r\n        const resolution = _.isUndefined(results.resolution) ? 'Unknown' : results.resolution;\r\n        let [episodeMain, episodeSecondary] = this.getEpisodeMatch(results.title);\r\n        if (_.isUndefined(episodeMain)) {\r\n            [episodeMain, episodeSecondary] = this.getEpisodeMatch(title);\r\n        }\r\n        let showname = _.isUndefined(results.title) ? title : results.title;\r\n\r\n        return [\r\n            true,\r\n            group,\r\n            resolution,\r\n            episodeMain,\r\n            episodeSecondary,\r\n            showname\r\n        ];\r\n    }\r\n\r\n    getEpisodeMatch(part) {\r\n        let firstNonNameCharacter = [part.indexOf('(', 1), part.indexOf('[', 1)];\r\n        while (true) {\r\n            let index = firstNonNameCharacter.indexOf(-1);\r\n            if (index === -1) {\r\n                break;\r\n            }\r\n\r\n            firstNonNameCharacter.splice(index, 1);\r\n        }\r\n\r\n        if (firstNonNameCharacter.length) {\r\n            let index = _.min(firstNonNameCharacter);\r\n            if (!_.isUndefined(index)) {\r\n                part = part.substring(0, index).trim();\r\n            }\r\n        }\r\n\r\n        let lastFoundMatch = null;\r\n        let episodeMain, episodeSecondary, version, f;\r\n        let match = null;\r\n        while ((match = this.episodeRegex.exec(part)) !== null) {\r\n            lastFoundMatch = match;\r\n        }\r\n\r\n        if (lastFoundMatch !== null) {\r\n            [f, episodeMain, version, episodeSecondary] = lastFoundMatch;\r\n            episodeMain = parseInt(episodeMain);\r\n            if (!_.isUndefined(episodeSecondary)) {\r\n                episodeSecondary = parseInt(episodeSecondary);\r\n            }\r\n        }\r\n\r\n        return [\r\n            episodeMain,\r\n            episodeSecondary\r\n        ];\r\n    }\r\n}\r\n\r\nexport default NyaaProvider;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303518916
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/Logger.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/Logger.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/Logger.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/Logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "Logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _winston = require(\"winston\");\n\nvar combine = _winston.format.combine,\n    timestamp = _winston.format.timestamp,\n    printf = _winston.format.printf;\nvar myFormat = printf(function (_ref) {\n  var level = _ref.level,\n      message = _ref.message,\n      timestamp = _ref.timestamp;\n  return \"[\".concat(timestamp, \"][\").concat(level, \"]: \").concat(message);\n});\n\nvar _default = (0, _winston.createLogger)({\n  format: combine(timestamp(), myFormat),\n  transports: [new _winston.transports.File({\n    filename: 'nyabot.log',\n    handleExceptions: true\n  })]\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2dlci5qcyJdLCJuYW1lcyI6WyJjb21iaW5lIiwiZm9ybWF0IiwidGltZXN0YW1wIiwicHJpbnRmIiwibXlGb3JtYXQiLCJsZXZlbCIsIm1lc3NhZ2UiLCJ0cmFuc3BvcnRzIiwiRmlsZSIsImZpbGVuYW1lIiwiaGFuZGxlRXhjZXB0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztJQUNPQSxPLEdBQThCQyxlLENBQTlCRCxPO0lBQVNFLFMsR0FBcUJELGUsQ0FBckJDLFM7SUFBV0MsTSxHQUFVRixlLENBQVZFLE07QUFFM0IsSUFBTUMsUUFBUSxHQUFHRCxNQUFNLENBQUMsZ0JBQW9DO0FBQUEsTUFBakNFLEtBQWlDLFFBQWpDQSxLQUFpQztBQUFBLE1BQTFCQyxPQUEwQixRQUExQkEsT0FBMEI7QUFBQSxNQUFoQkosU0FBZ0IsUUFBaEJBLFNBQWdCO0FBQ3hELG9CQUFXQSxTQUFYLGVBQXlCRyxLQUF6QixnQkFBb0NDLE9BQXBDO0FBQ0gsQ0FGc0IsQ0FBdkI7O2VBSWUsMkJBQWE7QUFDeEJMLEVBQUFBLE1BQU0sRUFBRUQsT0FBTyxDQUNYRSxTQUFTLEVBREUsRUFFWEUsUUFGVyxDQURTO0FBS3hCRyxFQUFBQSxVQUFVLEVBQUUsQ0FDUixJQUFJQSxvQkFBV0MsSUFBZixDQUFvQjtBQUNoQkMsSUFBQUEsUUFBUSxFQUFFLFlBRE07QUFFaEJDLElBQUFBLGdCQUFnQixFQUFFO0FBRkYsR0FBcEIsQ0FEUTtBQUxZLENBQWIsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS90YXNoaS9EZXNrdG9wL255YWJvdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUxvZ2dlciwgdHJhbnNwb3J0cywgZm9ybWF0fSBmcm9tIFwid2luc3RvblwiO1xyXG5jb25zdCB7Y29tYmluZSwgdGltZXN0YW1wLCBwcmludGZ9ID0gZm9ybWF0O1xyXG5cclxuY29uc3QgbXlGb3JtYXQgPSBwcmludGYoKHsgbGV2ZWwsIG1lc3NhZ2UsICB0aW1lc3RhbXAgfSkgPT4ge1xyXG4gICAgcmV0dXJuIGBbJHt0aW1lc3RhbXB9XVske2xldmVsfV06ICR7bWVzc2FnZX1gO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUxvZ2dlcih7XHJcbiAgICBmb3JtYXQ6IGNvbWJpbmUoXHJcbiAgICAgICAgdGltZXN0YW1wKCksXHJcbiAgICAgICAgbXlGb3JtYXRcclxuICAgICksXHJcbiAgICB0cmFuc3BvcnRzOiBbXHJcbiAgICAgICAgbmV3IHRyYW5zcG9ydHMuRmlsZSh7XHJcbiAgICAgICAgICAgIGZpbGVuYW1lOiAnbnlhYm90LmxvZycsXHJcbiAgICAgICAgICAgIGhhbmRsZUV4Y2VwdGlvbnM6IHRydWVcclxuICAgICAgICB9KVxyXG4gICAgXVxyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Logger.js"
      ],
      "names": [
        "combine",
        "format",
        "timestamp",
        "printf",
        "myFormat",
        "level",
        "message",
        "transports",
        "File",
        "filename",
        "handleExceptions"
      ],
      "mappings": ";;;;;;;AAAA;;IACOA,O,GAA8BC,e,CAA9BD,O;IAASE,S,GAAqBD,e,CAArBC,S;IAAWC,M,GAAUF,e,CAAVE,M;AAE3B,IAAMC,QAAQ,GAAGD,MAAM,CAAC,gBAAoC;AAAA,MAAjCE,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAhBJ,SAAgB,QAAhBA,SAAgB;AACxD,oBAAWA,SAAX,eAAyBG,KAAzB,gBAAoCC,OAApC;AACH,CAFsB,CAAvB;;eAIe,2BAAa;AACxBL,EAAAA,MAAM,EAAED,OAAO,CACXE,SAAS,EADE,EAEXE,QAFW,CADS;AAKxBG,EAAAA,UAAU,EAAE,CACR,IAAIA,oBAAWC,IAAf,CAAoB;AAChBC,IAAAA,QAAQ,EAAE,YADM;AAEhBC,IAAAA,gBAAgB,EAAE;AAFF,GAApB,CADQ;AALY,CAAb,C",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import {createLogger, transports, format} from \"winston\";\r\nconst {combine, timestamp, printf} = format;\r\n\r\nconst myFormat = printf(({ level, message,  timestamp }) => {\r\n    return `[${timestamp}][${level}]: ${message}`;\r\n});\r\n\r\nexport default createLogger({\r\n    format: combine(\r\n        timestamp(),\r\n        myFormat\r\n    ),\r\n    transports: [\r\n        new transports.File({\r\n            filename: 'nyabot.log',\r\n            handleExceptions: true\r\n        })\r\n    ]\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303518588
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/BotGuildInstance.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/BotGuildInstance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "BotGuildInstance.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lowdb = _interopRequireDefault(require(\"lowdb\"));\n\nvar _FileAsync = _interopRequireDefault(require(\"lowdb/adapters/FileAsync\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _ogparser = _interopRequireDefault(require(\"ogparser\"));\n\nvar _discord = require(\"discord.js\");\n\nvar _Bot = require(\"./Bot\");\n\nvar _MINIMAL_INTERVAL_TIM;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getNewDatabase = function getNewDatabase(filename) {\n  return new Promise(function (res) {\n    (0, _lowdb[\"default\"])(new _FileAsync[\"default\"](filename + \".json\")).then(function (d) {\n      return res(d);\n    });\n  });\n};\n\nvar NYAA_UPDATES = 'nyaa_updates';\nvar NYAA_ALL = 'nyaa_all';\nvar JPOP_ALL = 'jpop_all';\nvar ALLOWED_CHANNEL_TYPES = [NYAA_UPDATES, NYAA_ALL, JPOP_ALL];\nvar MINIMAL_INTERVAL_TIMES = (_MINIMAL_INTERVAL_TIM = {}, _defineProperty(_MINIMAL_INTERVAL_TIM, NYAA_UPDATES, 30), _defineProperty(_MINIMAL_INTERVAL_TIM, NYAA_ALL, 30), _defineProperty(_MINIMAL_INTERVAL_TIM, JPOP_ALL, 30), _MINIMAL_INTERVAL_TIM);\n\nvar BotGuildInstance = /*#__PURE__*/function () {\n  function BotGuildInstance(guildID, bot, nyaaProvider, jpopSukiProvider) {\n    var _this$timeoutFunction;\n\n    _classCallCheck(this, BotGuildInstance);\n\n    _defineProperty(this, \"guildID\", null);\n\n    _defineProperty(this, \"db\", null);\n\n    _defineProperty(this, \"nyaa\", null);\n\n    _defineProperty(this, \"jpop\", null);\n\n    _defineProperty(this, \"timeout\", {});\n\n    _defineProperty(this, \"bot\", null);\n\n    _defineProperty(this, \"responseChannels\", {});\n\n    this.guildID = guildID;\n    this.bot = bot;\n    this.nyaa = nyaaProvider;\n    this.jpop = jpopSukiProvider;\n    this.commands = {\n      'id': this.channelID.bind(this),\n      'allow': this.allowUser.bind(this),\n      'new': this.addShow.bind(this),\n      'channel': this.setChannel.bind(this),\n      'refresh': this.refreshShows.bind(this),\n      'refreshAll': this.searchAll.bind(this),\n      'refreshJpop': this.searchJpop.bind(this),\n      'timeout': this.setNewTimeout.bind(this),\n      'list': this.listShows.bind(this),\n      'remove': this.removeShow.bind(this),\n      'help': this.showHelp.bind(this)\n    };\n    this.timeoutFunctions = (_this$timeoutFunction = {}, _defineProperty(_this$timeoutFunction, NYAA_UPDATES, this.refreshShows.bind(this)), _defineProperty(_this$timeoutFunction, NYAA_ALL, this.searchAll.bind(this)), _defineProperty(_this$timeoutFunction, JPOP_ALL, this.searchJpop.bind(this)), _this$timeoutFunction);\n    this.readyGuild();\n  }\n\n  _createClass(BotGuildInstance, [{\n    key: \"stopTimeout\",\n    value: function () {\n      var _stopTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var timeoutType,\n            i,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                timeoutType = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n                if (timeoutType === null) {\n                  timeoutType = ALLOWED_CHANNEL_TYPES;\n                }\n\n                if (!_lodash[\"default\"].isArray(timeoutType)) {\n                  timeoutType = [timeoutType];\n                }\n\n                for (i = 0; i < timeoutType.length; i++) {\n                  clearInterval(this.timeout[timeoutType]);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function stopTimeout() {\n        return _stopTimeout.apply(this, arguments);\n      }\n\n      return stopTimeout;\n    }()\n  }, {\n    key: \"internalStartTimeout\",\n    value: function () {\n      var _internalStartTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(timeoutType) {\n        var _this = this;\n\n        var timeoutVal;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.db.get(\"timeout.\".concat(timeoutType)).value();\n\n              case 2:\n                timeoutVal = _context2.sent;\n\n                if (_lodash[\"default\"].isUndefined(timeoutVal)) {\n                  timeoutVal = MINIMAL_INTERVAL_TIMES[timeoutType];\n                }\n\n                timeoutVal = parseInt(timeoutVal);\n\n                _Logger[\"default\"].info(\"Starting interval for \".concat(this.guildID, \" in \").concat(timeoutVal, \" minutes for \").concat(timeoutType));\n\n                timeoutVal *= 60;\n                timeoutVal *= 1000;\n                this.timeout[timeoutType] = setInterval(function () {\n                  _Logger[\"default\"].info(\"Updating list \".concat(_this.guildID));\n\n                  _this.timeoutFunctions[timeoutType]();\n                }, timeoutVal);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function internalStartTimeout(_x) {\n        return _internalStartTimeout.apply(this, arguments);\n      }\n\n      return internalStartTimeout;\n    }()\n  }, {\n    key: \"startTimeout\",\n    value: function () {\n      var _startTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var timeoutType,\n            i,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                timeoutType = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : null;\n                this.stopTimeout(timeoutType);\n\n                if (timeoutType === null) {\n                  timeoutType = ALLOWED_CHANNEL_TYPES;\n                }\n\n                if (!_lodash[\"default\"].isArray(timeoutType)) {\n                  timeoutType = [timeoutType];\n                }\n\n                i = 0;\n\n              case 5:\n                if (!(i < timeoutType.length)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 8;\n                return this.internalStartTimeout(timeoutType[i]);\n\n              case 8:\n                i++;\n                _context3.next = 5;\n                break;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function startTimeout() {\n        return _startTimeout.apply(this, arguments);\n      }\n\n      return startTimeout;\n    }()\n  }, {\n    key: \"readyGuild\",\n    value: function () {\n      var _readyGuild = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getNewDatabase('db_' + this.guildID.toString());\n\n              case 2:\n                this.db = _context4.sent;\n                _context4.next = 5;\n                return this.db.defaults({\n                  server: [],\n                  og: [],\n                  search: [],\n                  rss: [],\n                  channels: [],\n                  timeouts: {},\n                  lastAllRss: null,\n                  lastJpopRss: null\n                }).write();\n\n              case 5:\n                _context4.next = 7;\n                return this.startTimeout();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function readyGuild() {\n        return _readyGuild.apply(this, arguments);\n      }\n\n      return readyGuild;\n    }()\n  }, {\n    key: \"getOG\",\n    value: function () {\n      var _getOG = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(url) {\n        var og, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.db.get('og').find({\n                  url: url\n                }).value();\n\n              case 2:\n                og = _context5.sent;\n\n                if (_lodash[\"default\"].isUndefined(og)) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", og.data);\n\n              case 5:\n                _context5.next = 7;\n                return _ogparser[\"default\"].parse(url);\n\n              case 7:\n                response = _context5.sent;\n                _context5.next = 10;\n                return this.db.get('og').push({\n                  url: url,\n                  data: response\n                }).write();\n\n              case 10:\n                return _context5.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getOG(_x2) {\n        return _getOG.apply(this, arguments);\n      }\n\n      return getOG;\n    }()\n  }, {\n    key: \"searchJpop\",\n    value: function () {\n      var _searchJpop = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var msg,\n            channel,\n            results,\n            lastRssGuid,\n            i,\n            embedFunction,\n            _iterator,\n            _step,\n            item,\n            _args6 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                msg = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : null;\n                _context6.next = 3;\n                return this.getChannel(msg, JPOP_ALL);\n\n              case 3:\n                channel = _context6.sent;\n\n                if (!(channel === null)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(JPOP_ALL));\n\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Updating any jpop results for \".concat(this.guildID));\n\n                _context6.next = 10;\n                return this.jpop.getResults();\n\n              case 10:\n                results = _context6.sent;\n\n                if (results.length) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 13:\n                this.startTimeout(JPOP_ALL);\n                _context6.next = 16;\n                return this.db.get('lastJpopRss').value();\n\n              case 16:\n                lastRssGuid = _context6.sent;\n\n                if (!(!_lodash[\"default\"].isUndefined(lastRssGuid) && lastRssGuid !== null)) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                results = results.reverse();\n                i = 0;\n\n              case 20:\n                if (!(i < results.length)) {\n                  _context6.next = 27;\n                  break;\n                }\n\n                if (!(results[i].guid === lastRssGuid)) {\n                  _context6.next = 24;\n                  break;\n                }\n\n                // all before this\n                results = results.slice(0, i);\n                return _context6.abrupt(\"break\", 27);\n\n              case 24:\n                i++;\n                _context6.next = 20;\n                break;\n\n              case 27:\n                results = results.reverse();\n\n              case 28:\n                if (results.length) {\n                  _context6.next = 30;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 30:\n                _Logger[\"default\"].info(\"Results found for any jpop \".concat(results.length));\n\n                embedFunction = this.getJpopEmbed.bind(this);\n                _iterator = _createForOfIteratorHelper(results);\n                _context6.prev = 33;\n\n                _iterator.s();\n\n              case 35:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 41;\n                  break;\n                }\n\n                item = _step.value;\n                _context6.next = 39;\n                return this.postShow(embedFunction, item, channel);\n\n              case 39:\n                _context6.next = 35;\n                break;\n\n              case 41:\n                _context6.next = 46;\n                break;\n\n              case 43:\n                _context6.prev = 43;\n                _context6.t0 = _context6[\"catch\"](33);\n\n                _iterator.e(_context6.t0);\n\n              case 46:\n                _context6.prev = 46;\n\n                _iterator.f();\n\n                return _context6.finish(46);\n\n              case 49:\n                _context6.next = 51;\n                return this.db.set('lastJpopRss', results[results.length - 1].guid).write();\n\n              case 51:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[33, 43, 46, 49]]);\n      }));\n\n      function searchJpop() {\n        return _searchJpop.apply(this, arguments);\n      }\n\n      return searchJpop;\n    }()\n  }, {\n    key: \"searchAll\",\n    value: function () {\n      var _searchAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var msg,\n            channel,\n            results,\n            lastRssGuid,\n            i,\n            embedFunction,\n            _iterator2,\n            _step2,\n            item,\n            _args7 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                msg = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : null;\n                _context7.next = 3;\n                return this.getChannel(msg, NYAA_ALL);\n\n              case 3:\n                channel = _context7.sent;\n\n                if (!(channel === null)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(NYAA_ALL));\n\n                return _context7.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Updating any nyaa results for \".concat(this.guildID));\n\n                _context7.next = 10;\n                return this.nyaa.getResults(\"\", {});\n\n              case 10:\n                results = _context7.sent;\n\n                if (results.length) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 13:\n                this.startTimeout(NYAA_ALL);\n                _context7.next = 16;\n                return this.db.get('lastAllRss').value();\n\n              case 16:\n                lastRssGuid = _context7.sent;\n\n                if (!(!_lodash[\"default\"].isUndefined(lastRssGuid) && lastRssGuid !== null)) {\n                  _context7.next = 28;\n                  break;\n                }\n\n                results = results.reverse();\n                i = 0;\n\n              case 20:\n                if (!(i < results.length)) {\n                  _context7.next = 27;\n                  break;\n                }\n\n                if (!(results[i].guid === lastRssGuid)) {\n                  _context7.next = 24;\n                  break;\n                }\n\n                // all before this\n                results = results.slice(0, i);\n                return _context7.abrupt(\"break\", 27);\n\n              case 24:\n                i++;\n                _context7.next = 20;\n                break;\n\n              case 27:\n                results = results.reverse();\n\n              case 28:\n                if (results.length) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 30:\n                _Logger[\"default\"].info(\"Results found for any nyaa \".concat(results.length));\n\n                embedFunction = this.getMinorEmbed.bind(this);\n                _iterator2 = _createForOfIteratorHelper(results);\n                _context7.prev = 33;\n\n                _iterator2.s();\n\n              case 35:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context7.next = 41;\n                  break;\n                }\n\n                item = _step2.value;\n                _context7.next = 39;\n                return this.postShow(embedFunction, item, channel);\n\n              case 39:\n                _context7.next = 35;\n                break;\n\n              case 41:\n                _context7.next = 46;\n                break;\n\n              case 43:\n                _context7.prev = 43;\n                _context7.t0 = _context7[\"catch\"](33);\n\n                _iterator2.e(_context7.t0);\n\n              case 46:\n                _context7.prev = 46;\n\n                _iterator2.f();\n\n                return _context7.finish(46);\n\n              case 49:\n                _context7.next = 51;\n                return this.db.set('lastAllRss', results[results.length - 1].guid).write();\n\n              case 51:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[33, 43, 46, 49]]);\n      }));\n\n      function searchAll() {\n        return _searchAll.apply(this, arguments);\n      }\n\n      return searchAll;\n    }()\n  }, {\n    key: \"searchShow\",\n    value: function () {\n      var _searchShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, query) {\n        var channel,\n            OG,\n            results,\n            embedFunction,\n            _iterator3,\n            _step3,\n            i,\n            item,\n            _args8 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                channel = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : null;\n                OG = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : null;\n                _context8.next = 4;\n                return this.nyaa.getResults(query);\n\n              case 4:\n                results = _context8.sent;\n\n                if (results.length) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 7:\n                _Logger[\"default\"].info(\"Results found for \".concat(query, \": \").concat(results.length));\n\n                embedFunction = this.getRichEmbed.bind(this);\n                _iterator3 = _createForOfIteratorHelper(results);\n                _context8.prev = 10;\n\n                _iterator3.s();\n\n              case 12:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                i = _step3.value;\n                _context8.next = 16;\n                return this.db.get('rss').find({\n                  guid: i.guid\n                }).value();\n\n              case 16:\n                item = _context8.sent;\n\n                if (_lodash[\"default\"].isUndefined(item)) {\n                  _context8.next = 19;\n                  break;\n                }\n\n                return _context8.abrupt(\"continue\", 24);\n\n              case 19:\n                _context8.next = 21;\n                return this.postShow(embedFunction, i, channel, OG);\n\n              case 21:\n                if (!_context8.sent) {\n                  _context8.next = 24;\n                  break;\n                }\n\n                _context8.next = 24;\n                return this.db.get('rss').push(_objectSpread(_objectSpread({}, i), {}, {\n                  searchID: id\n                })).write();\n\n              case 24:\n                _context8.next = 12;\n                break;\n\n              case 26:\n                _context8.next = 31;\n                break;\n\n              case 28:\n                _context8.prev = 28;\n                _context8.t0 = _context8[\"catch\"](10);\n\n                _iterator3.e(_context8.t0);\n\n              case 31:\n                _context8.prev = 31;\n\n                _iterator3.f();\n\n                return _context8.finish(31);\n\n              case 34:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[10, 28, 31, 34]]);\n      }));\n\n      function searchShow(_x3, _x4) {\n        return _searchShow.apply(this, arguments);\n      }\n\n      return searchShow;\n    }()\n  }, {\n    key: \"refreshShows\",\n    value: function () {\n      var _refreshShows = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var msg,\n            channel,\n            _iterator4,\n            _step4,\n            i,\n            _args9 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                msg = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : null;\n                _context9.next = 3;\n                return this.getChannel(msg);\n\n              case 3:\n                channel = _context9.sent;\n\n                if (!(channel === null)) {\n                  _context9.next = 7;\n                  break;\n                }\n\n                _Logger[\"default\"].warn(\"No valid channel target was found for server \".concat(this.guildID, \" for type \").concat(NYAA_UPDATES));\n\n                return _context9.abrupt(\"return\");\n\n              case 7:\n                this.startTimeout(NYAA_UPDATES);\n\n                _Logger[\"default\"].info(\"Updating shows for \".concat(this.guildID));\n\n                _context9.t0 = _createForOfIteratorHelper;\n                _context9.next = 12;\n                return this.db.get('search').value();\n\n              case 12:\n                _context9.t1 = _context9.sent;\n                _iterator4 = (0, _context9.t0)(_context9.t1);\n                _context9.prev = 14;\n\n                _iterator4.s();\n\n              case 16:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                i = _step4.value;\n                _context9.t2 = this;\n                _context9.t3 = i.id;\n                _context9.t4 = i.search;\n                _context9.t5 = channel;\n                _context9.next = 24;\n                return this.getOG(i.url);\n\n              case 24:\n                _context9.t6 = _context9.sent;\n                _context9.next = 27;\n                return _context9.t2.searchShow.call(_context9.t2, _context9.t3, _context9.t4, _context9.t5, _context9.t6);\n\n              case 27:\n                _context9.next = 16;\n                break;\n\n              case 29:\n                _context9.next = 34;\n                break;\n\n              case 31:\n                _context9.prev = 31;\n                _context9.t7 = _context9[\"catch\"](14);\n\n                _iterator4.e(_context9.t7);\n\n              case 34:\n                _context9.prev = 34;\n\n                _iterator4.f();\n\n                return _context9.finish(34);\n\n              case 37:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[14, 31, 34, 37]]);\n      }));\n\n      function refreshShows() {\n        return _refreshShows.apply(this, arguments);\n      }\n\n      return refreshShows;\n    }()\n  }, {\n    key: \"getChannel\",\n    value: function () {\n      var _getChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var msg,\n            channelType,\n            channel,\n            _args10 = arguments;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                msg = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : null;\n                channelType = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : NYAA_UPDATES;\n                _context10.next = 4;\n                return this.getGuildChannel(channelType);\n\n              case 4:\n                channel = _context10.sent;\n\n                if (!(channel === null)) {\n                  _context10.next = 12;\n                  break;\n                }\n\n                if (!(msg !== null)) {\n                  _context10.next = 9;\n                  break;\n                }\n\n                _context10.next = 9;\n                return msg.channel.send(\"No channel was found\");\n\n              case 9:\n                return _context10.abrupt(\"return\", null);\n\n              case 12:\n                return _context10.abrupt(\"return\", channel);\n\n              case 13:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getChannel() {\n        return _getChannel.apply(this, arguments);\n      }\n\n      return getChannel;\n    }()\n  }, {\n    key: \"showHelp\",\n    value: function () {\n      var _showHelp = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(msg) {\n        var embed;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(\"Help for gayboi v\".concat(_Bot.VERSION)).setDescription(\"\".concat(_Bot.COMMAND_CHARACTER, \"id - show id of the channel\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"allow - mention a user to allow it to use the bot\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"new - add a new show to be searched for - syntax:\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"new \\\"ShowSearchString\\\" \\\"MAL_URL\\\"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"channel \\\"channel_type\\\" channelID - set a new channel to post to\\n\") + \"Allowed channel types are: \".concat(NYAA_UPDATES, \", \").concat(NYAA_ALL, \", \").concat(JPOP_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refresh - force a refresh now (restarts timer) - \").concat(NYAA_UPDATES, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refreshAll - force a refresh now (restarts timer) - \").concat(NYAA_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"refreshJpop - force a refresh now (restarts timer) - \").concat(JPOP_ALL, \"\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"timeout - set a new timeout (in minutes) for checks\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"list - list current search shows\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"remove - remove show (specify show id)\\n\\n\") + \"\".concat(_Bot.COMMAND_CHARACTER, \"help - show this message\"));\n                _context11.next = 4;\n                return msg.channel.send(embed);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function showHelp(_x5) {\n        return _showHelp.apply(this, arguments);\n      }\n\n      return showHelp;\n    }()\n  }, {\n    key: \"getGuildChannel\",\n    value: function () {\n      var _getGuildChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n        var channelType,\n            channel,\n            _args12 = arguments;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                channelType = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : NYAA_UPDATES;\n                channel = this.responseChannels[channelType];\n\n                if (!_lodash[\"default\"].isUndefined(channel)) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                _context12.next = 5;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).value();\n\n              case 5:\n                channel = _context12.sent;\n\n                if (!_lodash[\"default\"].isUndefined(channel)) {\n                  _context12.next = 8;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", null);\n\n              case 8:\n                channel = channel.id;\n\n              case 9:\n                _context12.next = 11;\n                return this.bot.channels.fetch(channel);\n\n              case 11:\n                return _context12.abrupt(\"return\", _context12.sent);\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getGuildChannel() {\n        return _getGuildChannel.apply(this, arguments);\n      }\n\n      return getGuildChannel;\n    }()\n  }, {\n    key: \"postShow\",\n    value: function () {\n      var _postShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(embedFunc, item) {\n        var _this2 = this;\n\n        var channel,\n            og,\n            channelType,\n            _args14 = arguments;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                channel = _args14.length > 2 && _args14[2] !== undefined ? _args14[2] : null;\n                og = _args14.length > 3 && _args14[3] !== undefined ? _args14[3] : null;\n                channelType = _args14.length > 4 && _args14[4] !== undefined ? _args14[4] : NYAA_UPDATES;\n\n                if (!(channel === null)) {\n                  _context14.next = 9;\n                  break;\n                }\n\n                _context14.next = 6;\n                return this.getGuildChannel(channelType);\n\n              case 6:\n                channel = _context14.sent;\n\n                if (channel) {\n                  _context14.next = 9;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", false);\n\n              case 9:\n                return _context14.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(resolve) {\n                    var _og$title;\n\n                    var title, embed, _og$image, _og$url, img, url, retryCounter;\n\n                    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            title = og !== null ? (_og$title = og.title) !== null && _og$title !== void 0 ? _og$title : item.title : item.title;\n                            _context13.next = 3;\n                            return embedFunc(item, title);\n\n                          case 3:\n                            embed = _context13.sent;\n\n                            if (og !== null) {\n                              img = (_og$image = og.image) !== null && _og$image !== void 0 ? _og$image : null;\n\n                              if (img) {\n                                embed.setThumbnail(img);\n                              }\n\n                              url = (_og$url = og.url) !== null && _og$url !== void 0 ? _og$url : null;\n\n                              if (url) {\n                                embed.setURL(url);\n                              }\n                            }\n\n                            retryCounter = 0;\n\n                            _Logger[\"default\"].info(\"Posting new result for \".concat(title, \" with guid \").concat(item.guid, \" for server \").concat(_this2.guildID));\n\n                          case 7:\n                            if (!true) {\n                              _context13.next = 23;\n                              break;\n                            }\n\n                            _context13.prev = 8;\n                            _context13.next = 11;\n                            return channel.send(embed);\n\n                          case 11:\n                            setTimeout(function () {\n                              resolve(true);\n                            }, 2000);\n                            return _context13.abrupt(\"break\", 23);\n\n                          case 15:\n                            _context13.prev = 15;\n                            _context13.t0 = _context13[\"catch\"](8);\n\n                            _Logger[\"default\"].warn(\"An error has occured while posting: \".concat(_context13.t0.toString(), \", retrying (\").concat(++retryCounter, \" in 5 seconds\"));\n\n                            _context13.next = 20;\n                            return new Promise(function (res) {\n                              setTimeout(function () {\n                                res();\n                              }, 5000);\n                            });\n\n                          case 20:\n                            if (retryCounter > 10) {\n                              resolve(false);\n                            }\n\n                          case 21:\n                            _context13.next = 7;\n                            break;\n\n                          case 23:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13, null, [[8, 15]]);\n                  }));\n\n                  return function (_x8) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 10:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function postShow(_x6, _x7) {\n        return _postShow.apply(this, arguments);\n      }\n\n      return postShow;\n    }()\n  }, {\n    key: \"getJpopEmbed\",\n    value: function () {\n      var _getJpopEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(item) {\n        var possibleTitle,\n            embed,\n            _args15 = arguments;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                possibleTitle = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(item.name).setColor(14978504).addField(\"Artist:\", item.artist).addField(\"Codec:\", item.codec, true).addField(\"Compression:\", !_lodash[\"default\"].isUndefined(item.compression) ? item.compression : 'Unknown', true).addField(\"Link:\", item.link).setFooter(\"Original title: \" + item.title);\n                return _context15.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function getJpopEmbed(_x9) {\n        return _getJpopEmbed.apply(this, arguments);\n      }\n\n      return getJpopEmbed;\n    }()\n  }, {\n    key: \"getMinorEmbed\",\n    value: function () {\n      var _getMinorEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(item) {\n        var possibleTitle,\n            embed,\n            _args16 = arguments;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                possibleTitle = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle(possibleTitle !== null && possibleTitle !== void 0 ? possibleTitle : item.title).setColor(9299132).addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size).addField(\"Link:\", item.link);\n                return _context16.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function getMinorEmbed(_x10) {\n        return _getMinorEmbed.apply(this, arguments);\n      }\n\n      return getMinorEmbed;\n    }()\n  }, {\n    key: \"getRichEmbed\",\n    value: function () {\n      var _getRichEmbed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(item) {\n        var _ref2, _item$group;\n\n        var possibleTitle,\n            embed,\n            _args17 = arguments;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                possibleTitle = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : null;\n                embed = new _discord.MessageEmbed();\n                embed.setTitle((_ref2 = possibleTitle !== null && possibleTitle !== void 0 ? possibleTitle : item.showname) !== null && _ref2 !== void 0 ? _ref2 : item.title).setColor(14533256).addField('Group:', (_item$group = item.group) !== null && _item$group !== void 0 ? _item$group : 'Unknown group').addField(!_lodash[\"default\"].isUndefined(item.episodeSecondary) ? 'Episodes:' : 'Episode:', !_lodash[\"default\"].isUndefined(item.episodeSecondary) ? item.episodeMain.toString() + \"-\" + item.episodeSecondary.toString() : !_lodash[\"default\"].isUndefined(item.episodeMain) ? item.episodeMain.toString() : 'Unknown').addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size).addField(\"Release:\", !_lodash[\"default\"].isUndefined(item.resolution) ? item.resolution : 'Unknown', true).addField(\"Link:\", item.link, true).setFooter(\"Original title: \" + item.title);\n                return _context17.abrupt(\"return\", embed);\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function getRichEmbed(_x11) {\n        return _getRichEmbed.apply(this, arguments);\n      }\n\n      return getRichEmbed;\n    }()\n  }, {\n    key: \"addToAllowed\",\n    value: function () {\n      var _addToAllowed = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(userID) {\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.db.get('server').push(userID).write();\n\n              case 2:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function addToAllowed(_x12) {\n        return _addToAllowed.apply(this, arguments);\n      }\n\n      return addToAllowed;\n    }()\n  }, {\n    key: \"setChannel\",\n    value: function () {\n      var _setChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(msg) {\n        var regex, found, _found, f, channelType, channel;\n\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                regex = /\"(.+?)\" (\\d+)/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context19.next = 5;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel syntax.\\n\".concat(_Bot.COMMAND_CHARACTER, \"channel \\\"CHANNEL_TYPE\\\" channelID where CHANNEL_TYPE is one of \").concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context19.abrupt(\"return\");\n\n              case 5:\n                _found = _slicedToArray(found, 3), f = _found[0], channelType = _found[1], channel = _found[2];\n\n                if (!(ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1)) {\n                  _context19.next = 9;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel type, must be one of \".concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context19.abrupt(\"return\");\n\n              case 9:\n                _context19.next = 11;\n                return this.setChannelIDForType(channel, channelType);\n\n              case 11:\n                this.responseChannels[channelType] = channel;\n\n                _Logger[\"default\"].info(\"New response channel was set for server \".concat(this.guildID, \" - \").concat(this.responseChannels[channelType], \" for type \").concat(channelType));\n\n                msg.channel.send(\"New channel set for type \".concat(channelType));\n\n              case 14:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function setChannel(_x13) {\n        return _setChannel.apply(this, arguments);\n      }\n\n      return setChannel;\n    }()\n  }, {\n    key: \"setChannelIDForType\",\n    value: function () {\n      var _setChannelIDForType = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(channelID, channelType) {\n        var existing;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).value();\n\n              case 2:\n                existing = _context20.sent;\n\n                if (_lodash[\"default\"].isUndefined(existing)) {\n                  _context20.next = 8;\n                  break;\n                }\n\n                _context20.next = 6;\n                return this.db.get('channels').find({\n                  type: channelType\n                }).assign({\n                  id: channelID\n                }).write();\n\n              case 6:\n                _context20.next = 10;\n                break;\n\n              case 8:\n                _context20.next = 10;\n                return this.db.get('channels').push({\n                  type: channelType,\n                  id: channelID\n                }).write();\n\n              case 10:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function setChannelIDForType(_x14, _x15) {\n        return _setChannelIDForType.apply(this, arguments);\n      }\n\n      return setChannelIDForType;\n    }()\n  }, {\n    key: \"allowedToCommand\",\n    value: function () {\n      var _allowedToCommand = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(msg) {\n        var serverData;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.db.get('server').value();\n\n              case 2:\n                serverData = _context21.sent;\n\n                if (!_lodash[\"default\"].isEmpty(serverData)) {\n                  _context21.next = 7;\n                  break;\n                }\n\n                _context21.next = 6;\n                return this.addToAllowed(msg.author.id);\n\n              case 6:\n                return _context21.abrupt(\"return\", true);\n\n              case 7:\n                return _context21.abrupt(\"return\", serverData.indexOf(msg.author.id) !== -1);\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function allowedToCommand(_x16) {\n        return _allowedToCommand.apply(this, arguments);\n      }\n\n      return allowedToCommand;\n    }()\n  }, {\n    key: \"onMessage\",\n    value: function () {\n      var _onMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(msg) {\n        var guildID, content, space, command;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                if (!(this.bot.user.id === msg.author.id)) {\n                  _context22.next = 2;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\");\n\n              case 2:\n                guildID = msg.channel.guild.id;\n                content = msg.content;\n\n                if (!content.startsWith(_Bot.COMMAND_CHARACTER)) {\n                  _context22.next = 17;\n                  break;\n                }\n\n                space = content.indexOf(' ');\n                command = content.substring(_Bot.COMMAND_CHARACTER.length, space === -1 ? content.length : space);\n\n                if (command in this.commands) {\n                  _context22.next = 9;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\");\n\n              case 9:\n                _context22.next = 11;\n                return this.allowedToCommand(msg);\n\n              case 11:\n                if (_context22.sent) {\n                  _context22.next = 15;\n                  break;\n                }\n\n                _context22.next = 14;\n                return msg.channel.send(\"rude bitch not allowed\");\n\n              case 14:\n                return _context22.abrupt(\"return\");\n\n              case 15:\n                _context22.next = 17;\n                return this.commands[command](msg);\n\n              case 17:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function onMessage(_x17) {\n        return _onMessage.apply(this, arguments);\n      }\n\n      return onMessage;\n    }()\n  }, {\n    key: \"channelID\",\n    value: function () {\n      var _channelID = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(msg) {\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return msg.channel.send(\"Channel ID is \".concat(msg.channel.id));\n\n              case 2:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function channelID(_x18) {\n        return _channelID.apply(this, arguments);\n      }\n\n      return channelID;\n    }()\n  }, {\n    key: \"addShow\",\n    value: function () {\n      var _addShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(msg) {\n        var regex, found, _found2, f, search, url, reg, count;\n\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                regex = /\"(.+?)\" \"(.+?)\"(?: \"(.+?)\")?/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context24.next = 6;\n                  break;\n                }\n\n                _context24.next = 5;\n                return msg.channel.send(\"Invalid new syntax:\\n\".concat(_Bot.COMMAND_CHARACTER, \" new \\\"show search phrase\\\" \\\"MALURL\\\" \\\"attribute regex\\\" (optional last)\"));\n\n              case 5:\n                return _context24.abrupt(\"return\");\n\n              case 6:\n                _found2 = _slicedToArray(found, 4), f = _found2[0], search = _found2[1], url = _found2[2], reg = _found2[3];\n                _context24.next = 9;\n                return this.db.get('search').last().value();\n\n              case 9:\n                count = _context24.sent;\n\n                if (_lodash[\"default\"].isUndefined(count)) {\n                  count = 0;\n                } else {\n                  count = count.id;\n                }\n\n                _context24.next = 13;\n                return this.db.get('search').push({\n                  id: count + 1,\n                  search: search,\n                  url: url,\n                  regex: reg\n                }).write();\n\n              case 13:\n                _Logger[\"default\"].info(\"New show has been added to the searchlist - \".concat(search, \" - \").concat(url, \" for server \").concat(this.guildID));\n\n                _context24.next = 16;\n                return msg.channel.send(\"Saved!\");\n\n              case 16:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function addShow(_x19) {\n        return _addShow.apply(this, arguments);\n      }\n\n      return addShow;\n    }()\n  }, {\n    key: \"removeShow\",\n    value: function () {\n      var _removeShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(msg) {\n        var regex, found, valid, searchID, item, _found3;\n\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                regex = /\\d+/g;\n                found = regex.exec(msg.content);\n                valid = true;\n\n                if (!(found === null)) {\n                  _context25.next = 6;\n                  break;\n                }\n\n                valid = false;\n                return _context25.abrupt(\"return\");\n\n              case 6:\n                searchID = null;\n                item = null;\n\n                if (!valid) {\n                  _context25.next = 18;\n                  break;\n                }\n\n                _found3 = _slicedToArray(found, 1);\n                searchID = _found3[0];\n                searchID = parseInt(searchID);\n                _context25.t0 = _lodash[\"default\"];\n                _context25.next = 15;\n                return this.db.get('search').find({\n                  id: searchID\n                });\n\n              case 15:\n                _context25.t1 = item = _context25.sent;\n\n                if (!_context25.t0.isUndefined.call(_context25.t0, _context25.t1)) {\n                  _context25.next = 18;\n                  break;\n                }\n\n                valid = false;\n\n              case 18:\n                if (valid) {\n                  _context25.next = 22;\n                  break;\n                }\n\n                _context25.next = 21;\n                return msg.channel.send(\"Invalid id\");\n\n              case 21:\n                return _context25.abrupt(\"return\");\n\n              case 22:\n                _context25.next = 24;\n                return this.db.get('search').remove({\n                  id: searchID\n                }).write();\n\n              case 24:\n                _context25.next = 26;\n                return this.db.get('rss').find({\n                  searchID: searchID\n                }).assign({\n                  searchID: null\n                }).write();\n\n              case 26:\n                _Logger[\"default\"].info(\"A show has been removed from the searchlist - \".concat(item.search, \" from server \").concat(this.guildID));\n\n                _context25.next = 29;\n                return msg.channel.send(\"Query removed\");\n\n              case 29:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function removeShow(_x20) {\n        return _removeShow.apply(this, arguments);\n      }\n\n      return removeShow;\n    }()\n  }, {\n    key: \"allowUser\",\n    value: function () {\n      var _allowUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(msg) {\n        var mention;\n        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                mention = msg.mentions.users.first();\n\n                if (!_lodash[\"default\"].isUndefined(mention)) {\n                  _context26.next = 5;\n                  break;\n                }\n\n                _context26.next = 4;\n                return msg.channel.send(\"No user mention was found\");\n\n              case 4:\n                return _context26.abrupt(\"return\");\n\n              case 5:\n                _context26.next = 7;\n                return this.addToAllowed(mention.id);\n\n              case 7:\n                _context26.next = 9;\n                return msg.channel.send(\"User was added to botlist\");\n\n              case 9:\n                _Logger[\"default\"].info(\"A new user has been added to the botlist for server \".concat(this.guildID, \" - \").concat(mention.id));\n\n              case 10:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function allowUser(_x21) {\n        return _allowUser.apply(this, arguments);\n      }\n\n      return allowUser;\n    }()\n  }, {\n    key: \"setNewTimeout\",\n    value: function () {\n      var _setNewTimeout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(msg) {\n        var regex, found, _found4, f, channelType, timeout;\n\n        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                regex = /\"(.+?)\" (\\d+)/g;\n                found = regex.exec(msg.content);\n\n                if (!(found === null)) {\n                  _context27.next = 6;\n                  break;\n                }\n\n                _context27.next = 5;\n                return msg.channel.send(\"Invalid timeout syntax.\\n\".concat(_Bot.COMMAND_CHARACTER, \"timeout \\\"CHANNEL_TYPE\\\" timeoutLength where CHANNEL_TYPE is one of \").concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n\n              case 5:\n                return _context27.abrupt(\"return\");\n\n              case 6:\n                _found4 = _slicedToArray(found, 3), f = _found4[0], channelType = _found4[1], timeout = _found4[2];\n\n                if (!(ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1)) {\n                  _context27.next = 10;\n                  break;\n                }\n\n                msg.channel.send(\"Invalid channel type, must be one of \".concat(ALLOWED_CHANNEL_TYPES.join(', ')));\n                return _context27.abrupt(\"return\");\n\n              case 10:\n                timeout = parseInt(timeout);\n\n                if (!(timeout < MINIMAL_INTERVAL_TIMES[channelType])) {\n                  _context27.next = 15;\n                  break;\n                }\n\n                _context27.next = 14;\n                return msg.channel.send(\"Timeout for \".concat(channelType, \" must be at least \").concat(MINIMAL_INTERVAL_TIMES[channelType], \" minutes or higher\"));\n\n              case 14:\n                return _context27.abrupt(\"return\");\n\n              case 15:\n                _context27.next = 17;\n                return this.db.set('timeout.' + channelType, timeout).write();\n\n              case 17:\n                _context27.next = 19;\n                return this.startTimeout(channelType);\n\n              case 19:\n                _context27.next = 21;\n                return msg.channel.send(\"New timeout set\");\n\n              case 21:\n                _Logger[\"default\"].info(\"A new timeout has been set for server \".concat(this.guildID, \" - \").concat(timeout, \" (\").concat(channelType, \")\"));\n\n              case 22:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function setNewTimeout(_x22) {\n        return _setNewTimeout.apply(this, arguments);\n      }\n\n      return setNewTimeout;\n    }()\n  }, {\n    key: \"listShows\",\n    value: function () {\n      var _listShows = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(msg) {\n        var shows, items, i, message, y;\n        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.next = 2;\n                return this.db.get('search').value();\n\n              case 2:\n                shows = _context28.sent;\n\n                if (shows.length) {\n                  _context28.next = 7;\n                  break;\n                }\n\n                _context28.next = 6;\n                return msg.channel.send(\"No shows are currently in the search list\");\n\n              case 6:\n                return _context28.abrupt(\"return\");\n\n              case 7:\n                items = _lodash[\"default\"].chunk(shows, 15);\n                i = 0;\n\n              case 9:\n                if (!(i < items.length)) {\n                  _context28.next = 17;\n                  break;\n                }\n\n                message = \"\";\n\n                for (y = 0; y < items[i].length; y++) {\n                  message += \"ID: \" + items[i][y].id.toString() + \" - \" + items[i][y].search + \"\\n\";\n                }\n\n                _context28.next = 14;\n                return msg.channel.send(message);\n\n              case 14:\n                i++;\n                _context28.next = 9;\n                break;\n\n              case 17:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function listShows(_x23) {\n        return _listShows.apply(this, arguments);\n      }\n\n      return listShows;\n    }()\n  }]);\n\n  return BotGuildInstance;\n}();\n\nvar _default = BotGuildInstance;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "BotGuildInstance.js"
      ],
      "names": [
        "getNewDatabase",
        "filename",
        "Promise",
        "res",
        "FileAsync",
        "then",
        "d",
        "NYAA_UPDATES",
        "NYAA_ALL",
        "JPOP_ALL",
        "ALLOWED_CHANNEL_TYPES",
        "MINIMAL_INTERVAL_TIMES",
        "BotGuildInstance",
        "guildID",
        "bot",
        "nyaaProvider",
        "jpopSukiProvider",
        "nyaa",
        "jpop",
        "commands",
        "channelID",
        "bind",
        "allowUser",
        "addShow",
        "setChannel",
        "refreshShows",
        "searchAll",
        "searchJpop",
        "setNewTimeout",
        "listShows",
        "removeShow",
        "showHelp",
        "timeoutFunctions",
        "readyGuild",
        "timeoutType",
        "_",
        "isArray",
        "i",
        "length",
        "clearInterval",
        "timeout",
        "db",
        "get",
        "value",
        "timeoutVal",
        "isUndefined",
        "parseInt",
        "logger",
        "info",
        "setInterval",
        "stopTimeout",
        "internalStartTimeout",
        "toString",
        "defaults",
        "server",
        "og",
        "search",
        "rss",
        "channels",
        "timeouts",
        "lastAllRss",
        "lastJpopRss",
        "write",
        "startTimeout",
        "url",
        "find",
        "data",
        "OGParser",
        "parse",
        "response",
        "push",
        "msg",
        "getChannel",
        "channel",
        "warn",
        "getResults",
        "results",
        "lastRssGuid",
        "reverse",
        "guid",
        "slice",
        "embedFunction",
        "getJpopEmbed",
        "item",
        "postShow",
        "set",
        "getMinorEmbed",
        "id",
        "query",
        "OG",
        "getRichEmbed",
        "searchID",
        "getOG",
        "searchShow",
        "channelType",
        "getGuildChannel",
        "send",
        "embed",
        "MessageEmbed",
        "setTitle",
        "VERSION",
        "setDescription",
        "COMMAND_CHARACTER",
        "responseChannels",
        "type",
        "fetch",
        "embedFunc",
        "resolve",
        "title",
        "img",
        "image",
        "setThumbnail",
        "setURL",
        "retryCounter",
        "setTimeout",
        "possibleTitle",
        "name",
        "setColor",
        "addField",
        "artist",
        "codec",
        "compression",
        "link",
        "setFooter",
        "seeders",
        "leechers",
        "size",
        "showname",
        "group",
        "episodeSecondary",
        "episodeMain",
        "resolution",
        "userID",
        "regex",
        "found",
        "exec",
        "content",
        "join",
        "f",
        "indexOf",
        "setChannelIDForType",
        "existing",
        "assign",
        "serverData",
        "isEmpty",
        "addToAllowed",
        "author",
        "user",
        "guild",
        "startsWith",
        "space",
        "command",
        "substring",
        "allowedToCommand",
        "reg",
        "last",
        "count",
        "valid",
        "remove",
        "mention",
        "mentions",
        "users",
        "first",
        "shows",
        "items",
        "chunk",
        "message",
        "y"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import low from 'lowdb';\r\nimport FileAsync from 'lowdb/adapters/FileAsync';\r\nimport logger from \"./Logger\";\r\nimport _ from \"lodash\";\r\nimport OGParser from \"ogparser\";\r\nimport {MessageEmbed} from \"discord.js\";\r\nimport {COMMAND_CHARACTER, VERSION} from \"./Bot\";\r\n\r\nconst getNewDatabase = (filename) => new Promise((res) => {\r\n    low(new FileAsync(filename + \".json\"))\r\n        .then((d) => res(d));\r\n});\r\n\r\nconst NYAA_UPDATES = 'nyaa_updates';\r\nconst NYAA_ALL = 'nyaa_all';\r\nconst JPOP_ALL = 'jpop_all';\r\n\r\nconst ALLOWED_CHANNEL_TYPES = [NYAA_UPDATES, NYAA_ALL, JPOP_ALL];\r\nconst MINIMAL_INTERVAL_TIMES = {\r\n    [NYAA_UPDATES]: 30,\r\n    [NYAA_ALL]: 30,\r\n    [JPOP_ALL]: 30\r\n};\r\n\r\nclass BotGuildInstance {\r\n    guildID = null;\r\n    db = null;\r\n    nyaa = null;\r\n    jpop = null;\r\n    timeout = {};\r\n    bot = null;\r\n    responseChannels = {};\r\n\r\n    constructor(guildID, bot, nyaaProvider, jpopSukiProvider) {\r\n        this.guildID = guildID;\r\n        this.bot = bot;\r\n        this.nyaa = nyaaProvider;\r\n        this.jpop = jpopSukiProvider;\r\n        this.commands = {\r\n            'id': this.channelID.bind(this),\r\n            'allow': this.allowUser.bind(this),\r\n            'new': this.addShow.bind(this),\r\n            'channel': this.setChannel.bind(this),\r\n            'refresh': this.refreshShows.bind(this),\r\n            'refreshAll': this.searchAll.bind(this),\r\n            'refreshJpop': this.searchJpop.bind(this),\r\n            'timeout': this.setNewTimeout.bind(this),\r\n            'list': this.listShows.bind(this),\r\n            'remove': this.removeShow.bind(this),\r\n            'help': this.showHelp.bind(this)\r\n        };\r\n        this.timeoutFunctions = {\r\n            [NYAA_UPDATES]: this.refreshShows.bind(this),\r\n            [NYAA_ALL]: this.searchAll.bind(this),\r\n            [JPOP_ALL]: this.searchJpop.bind(this)\r\n        };\r\n\r\n        this.readyGuild();\r\n    }\r\n\r\n    async stopTimeout(timeoutType = null) {\r\n        if (timeoutType === null) {\r\n            timeoutType = ALLOWED_CHANNEL_TYPES;\r\n        }\r\n\r\n        if (!_.isArray(timeoutType)) {\r\n            timeoutType = [timeoutType];\r\n        }\r\n\r\n        for (let i = 0; i < timeoutType.length; i++) {\r\n            clearInterval(this.timeout[timeoutType]);\r\n        }\r\n    }\r\n\r\n    async internalStartTimeout(timeoutType) {\r\n        let timeoutVal = await this.db.get(`timeout.${timeoutType}`).value();\r\n        if (_.isUndefined(timeoutVal)) {\r\n            timeoutVal = MINIMAL_INTERVAL_TIMES[timeoutType];\r\n        }\r\n        timeoutVal = parseInt(timeoutVal);\r\n        logger.info(`Starting interval for ${this.guildID} in ${timeoutVal} minutes for ${timeoutType}`);\r\n        timeoutVal *= 60;\r\n        timeoutVal *= 1000;\r\n        this.timeout[timeoutType] = setInterval(() => {\r\n            logger.info(`Updating list ${this.guildID}`);\r\n            this.timeoutFunctions[timeoutType]();\r\n        }, timeoutVal);\r\n    }\r\n\r\n    async startTimeout(timeoutType = null) {\r\n        this.stopTimeout(timeoutType);\r\n        if (timeoutType === null) {\r\n            timeoutType = ALLOWED_CHANNEL_TYPES;\r\n        }\r\n\r\n        if (!_.isArray(timeoutType)) {\r\n            timeoutType = [timeoutType];\r\n        }\r\n\r\n        for (let i = 0; i < timeoutType.length; i++) {\r\n            await this.internalStartTimeout(timeoutType[i]);\r\n        }\r\n    }\r\n\r\n    async readyGuild() {\r\n        this.db = await getNewDatabase('db_' + this.guildID.toString());\r\n        await this.db.defaults({\r\n            server: [],\r\n            og: [],\r\n            search: [],\r\n            rss: [],\r\n            channels: [],\r\n            timeouts: {},\r\n            lastAllRss: null,\r\n            lastJpopRss: null\r\n        }).write();\r\n\r\n        await this.startTimeout();\r\n    }\r\n\r\n    async getOG(url) {\r\n        const og = await this.db.get('og').find({url: url}).value();\r\n        if (!_.isUndefined(og)) {\r\n            return og.data;\r\n        }\r\n\r\n        const response = await OGParser.parse(url);\r\n        await this.db.get('og').push({url: url, data: response}).write();\r\n        return response;\r\n    }\r\n\r\n    async searchJpop(msg = null) {\r\n        const channel = await this.getChannel(msg, JPOP_ALL);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${JPOP_ALL}`);\r\n            return;\r\n        }\r\n\r\n        logger.info(`Updating any jpop results for ${this.guildID}`);\r\n        let results = await this.jpop.getResults();\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n        this.startTimeout(JPOP_ALL);\r\n\r\n        let lastRssGuid = await this.db.get('lastJpopRss').value();\r\n        if (!_.isUndefined(lastRssGuid) && lastRssGuid !== null) {\r\n            results = results.reverse();\r\n            for (let i = 0; i < results.length; i++) {\r\n                if (results[i].guid === lastRssGuid) {\r\n                    // all before this\r\n                    results = results.slice(0, i);\r\n                    break;\r\n                }\r\n            }\r\n            results = results.reverse();\r\n        }\r\n\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for any jpop ${results.length}`);\r\n        const embedFunction = this.getJpopEmbed.bind(this);\r\n\r\n        for (let item of results) {\r\n            await this.postShow(embedFunction, item, channel);\r\n        }\r\n\r\n        await this.db.set('lastJpopRss', results[results.length-1].guid).write();\r\n    }\r\n\r\n    async searchAll(msg = null) {\r\n        const channel = await this.getChannel(msg, NYAA_ALL);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${NYAA_ALL}`);\r\n            return;\r\n        }\r\n\r\n        logger.info(`Updating any nyaa results for ${this.guildID}`);\r\n        let results = await this.nyaa.getResults(\"\", {});\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n        this.startTimeout(NYAA_ALL);\r\n\r\n        let lastRssGuid = await this.db.get('lastAllRss').value();\r\n        if (!_.isUndefined(lastRssGuid) && lastRssGuid !== null) {\r\n            results = results.reverse();\r\n            for (let i = 0; i < results.length; i++) {\r\n                if (results[i].guid === lastRssGuid) {\r\n                    // all before this\r\n                    results = results.slice(0, i);\r\n                    break;\r\n                }\r\n            }\r\n            results = results.reverse();\r\n        }\r\n\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for any nyaa ${results.length}`);\r\n        const embedFunction = this.getMinorEmbed.bind(this);\r\n\r\n        for (let item of results) {\r\n            await this.postShow(embedFunction, item, channel);\r\n        }\r\n\r\n        await this.db.set('lastAllRss', results[results.length-1].guid).write();\r\n    }\r\n\r\n    async searchShow(id, query, channel = null, OG = null) {\r\n        const results = await this.nyaa.getResults(query);\r\n        if (!results.length) {\r\n            return;\r\n        }\r\n\r\n        logger.info(`Results found for ${query}: ${results.length}`);\r\n        const embedFunction = this.getRichEmbed.bind(this);\r\n\r\n        for (let i of results) {\r\n            const item = await this.db.get('rss').find({guid: i.guid}).value();\r\n            if (!_.isUndefined(item)) {\r\n                continue;\r\n            }\r\n\r\n            if (await this.postShow(embedFunction, i, channel, OG)) {\r\n                await this.db.get('rss').push({...i, searchID: id}).write();\r\n            }\r\n        }\r\n    }\r\n\r\n    async refreshShows(msg = null) {\r\n        const channel = await this.getChannel(msg);\r\n        if (channel === null) {\r\n            logger.warn(`No valid channel target was found for server ${this.guildID} for type ${NYAA_UPDATES}`);\r\n            return;\r\n        }\r\n\r\n        this.startTimeout(NYAA_UPDATES);\r\n        logger.info(`Updating shows for ${this.guildID}`);\r\n\r\n        for (let i of await this.db.get('search').value()) {\r\n            await this.searchShow(i.id, i.search, channel, await this.getOG(i.url));\r\n        }\r\n    }\r\n\r\n    async getChannel(msg = null, channelType = NYAA_UPDATES) {\r\n        const channel = await this.getGuildChannel(channelType);\r\n        if (channel === null) {\r\n            if (msg !== null) {\r\n                await msg.channel.send(\"No channel was found\");\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return channel;\r\n        }\r\n    }\r\n\r\n    async showHelp(msg) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(`Help for gayboi v${VERSION}`)\r\n            .setDescription(`${COMMAND_CHARACTER}id - show id of the channel\\n\\n` +\r\n                `${COMMAND_CHARACTER}allow - mention a user to allow it to use the bot\\n\\n` +\r\n                `${COMMAND_CHARACTER}new - add a new show to be searched for - syntax:\\n` +\r\n                `${COMMAND_CHARACTER}new \"ShowSearchString\" \"MAL_URL\"\\n\\n` +\r\n                `${COMMAND_CHARACTER}channel \"channel_type\" channelID - set a new channel to post to\\n` +\r\n                `Allowed channel types are: ${NYAA_UPDATES}, ${NYAA_ALL}, ${JPOP_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refresh - force a refresh now (restarts timer) - ${NYAA_UPDATES}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refreshAll - force a refresh now (restarts timer) - ${NYAA_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}refreshJpop - force a refresh now (restarts timer) - ${JPOP_ALL}\\n\\n` +\r\n                `${COMMAND_CHARACTER}timeout - set a new timeout (in minutes) for checks\\n\\n` +\r\n                `${COMMAND_CHARACTER}list - list current search shows\\n\\n` +\r\n                `${COMMAND_CHARACTER}remove - remove show (specify show id)\\n\\n` +\r\n                `${COMMAND_CHARACTER}help - show this message`);\r\n\r\n        await msg.channel.send(embed);\r\n    }\r\n\r\n    async getGuildChannel(channelType = NYAA_UPDATES) {\r\n        let channel = this.responseChannels[channelType];\r\n        if (_.isUndefined(channel)) {\r\n            channel = await this.db.get('channels').find({type: channelType}).value();\r\n\r\n            if (_.isUndefined(channel)) {\r\n                return null;\r\n            }\r\n\r\n            channel = channel.id;\r\n        }\r\n\r\n        return await await this.bot.channels.fetch(channel);\r\n    }\r\n\r\n    async postShow(embedFunc, item, channel = null, og = null, channelType = NYAA_UPDATES) {\r\n        if (channel === null) {\r\n            channel = await this.getGuildChannel(channelType);\r\n\r\n            if (!channel) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return new Promise(async (resolve) => {\r\n            const title = (og !== null ? og.title ?? item.title : item.title);\r\n            const embed = await embedFunc(item, title);\r\n\r\n            if (og !== null) {\r\n                const img = og.image ?? null;\r\n                if (img) {\r\n                    embed.setThumbnail(img);\r\n                }\r\n\r\n                const url = og.url ?? null;\r\n                if (url) {\r\n                    embed.setURL(url);\r\n                }\r\n            }\r\n\r\n            let retryCounter = 0;\r\n\r\n            logger.info(`Posting new result for ${title} with guid ${item.guid} for server ${this.guildID}`);\r\n            while (true) {\r\n                try {\r\n                    await channel.send(embed);\r\n                    setTimeout(() => {\r\n                        resolve(true);\r\n                    }, 2000);\r\n                    break;\r\n                }\r\n                catch (e) {\r\n                    logger.warn(`An error has occured while posting: ${e.toString()}, retrying (${++retryCounter} in 5 seconds`);\r\n                    await new Promise((res) => {\r\n                        setTimeout(() => {\r\n                            res();\r\n                        }, 5000);\r\n                    });\r\n                    if (retryCounter > 10) {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async getJpopEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(item.name)\r\n            .setColor(14978504)\r\n            .addField(\"Artist:\", item.artist)\r\n            .addField(\"Codec:\", item.codec, true)\r\n            .addField(\"Compression:\", (!_.isUndefined(item.compression) ? item.compression : 'Unknown'), true)\r\n            .addField(\"Link:\", item.link)\r\n            .setFooter(\"Original title: \" + item.title);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async getMinorEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(possibleTitle ?? item.title)\r\n            .setColor(9299132)\r\n            .addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size)\r\n            .addField(\"Link:\", item.link);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async getRichEmbed(item, possibleTitle = null) {\r\n        const embed = new MessageEmbed();\r\n        embed.setTitle(possibleTitle ?? item.showname ?? item.title)\r\n            .setColor(14533256)\r\n            .addField('Group:', item.group ?? 'Unknown group')\r\n            .addField((!_.isUndefined(item.episodeSecondary) ? 'Episodes:' : 'Episode:'),\r\n                (!_.isUndefined(item.episodeSecondary) ? item.episodeMain.toString() + \"-\" + item.episodeSecondary.toString() : (!_.isUndefined(item.episodeMain) ? item.episodeMain.toString() : 'Unknown')))\r\n            .addField(\"Statistics:\", \"S: \" + item.seeders.toString() + \", L: \" + item.leechers.toString() + \", \" + item.size)\r\n            .addField(\"Release:\", (!_.isUndefined(item.resolution) ? item.resolution : 'Unknown'), true)\r\n            .addField(\"Link:\", item.link, true)\r\n            .setFooter(\"Original title: \" + item.title);\r\n\r\n        return embed;\r\n    }\r\n\r\n    async addToAllowed(userID) {\r\n        await this.db.get('server').push(userID).write();\r\n    }\r\n\r\n    async setChannel(msg) {\r\n        const regex = /\"(.+?)\" (\\d+)/g;\r\n        const found = regex.exec(msg.content);\r\n\r\n        if (found === null) {\r\n            msg.channel.send(`Invalid channel syntax.\\n${COMMAND_CHARACTER}channel \"CHANNEL_TYPE\" channelID where CHANNEL_TYPE is one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        let [f, channelType, channel] = found;\r\n        if (ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1) {\r\n            msg.channel.send(`Invalid channel type, must be one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        await this.setChannelIDForType(channel, channelType);\r\n        this.responseChannels[channelType] = channel;\r\n        logger.info(`New response channel was set for server ${this.guildID} - ${this.responseChannels[channelType]} for type ${channelType}`);\r\n        msg.channel.send(`New channel set for type ${channelType}`);\r\n    }\r\n\r\n    async setChannelIDForType(channelID, channelType) {\r\n        const existing = await this.db.get('channels').find({type: channelType}).value();\r\n        if (!_.isUndefined(existing)) {\r\n            await this.db.get('channels').find({type: channelType}).assign({id: channelID}).write();\r\n        }\r\n        else {\r\n            await this.db.get('channels').push({type: channelType, id: channelID}).write();\r\n        }\r\n    }\r\n\r\n    async allowedToCommand(msg) {\r\n        const serverData = await this.db.get('server').value();\r\n        if (_.isEmpty(serverData)) {\r\n            await this.addToAllowed(msg.author.id);\r\n            return true;\r\n        }\r\n\r\n        return serverData.indexOf(msg.author.id) !== -1;\r\n    }\r\n\r\n    async onMessage(msg) {\r\n        if (this.bot.user.id === msg.author.id) {\r\n            return;\r\n        }\r\n\r\n        const guildID = msg.channel.guild.id;\r\n\r\n        const content = msg.content;\r\n        if (content.startsWith(COMMAND_CHARACTER)) {\r\n            const space = content.indexOf(' ');\r\n            const command = content.substring(COMMAND_CHARACTER.length, space === -1 ? content.length : space);\r\n            if (!(command in this.commands)) {\r\n                return;\r\n            }\r\n\r\n\r\n            if (!await this.allowedToCommand(msg)) {\r\n                await msg.channel.send(\"rude bitch not allowed\");\r\n                return;\r\n            }\r\n\r\n            await this.commands[command](msg);\r\n        }\r\n    }\r\n\r\n    async channelID(msg) {\r\n        await msg.channel.send(`Channel ID is ${msg.channel.id}`);\r\n    }\r\n\r\n    async addShow(msg) {\r\n        const regex = /\"(.+?)\" \"(.+?)\"(?: \"(.+?)\")?/g;\r\n        const found = regex.exec(msg.content);\r\n        if (found === null) {\r\n            await msg.channel.send(`Invalid new syntax:\\n${COMMAND_CHARACTER} new \\\"show search phrase\\\" \\\"MALURL\\\" \\\"attribute regex\\\" (optional last)`);\r\n            return;\r\n        }\r\n\r\n        let [f, search, url, reg] = found;\r\n        let count = await this.db.get('search').last().value();\r\n        if (_.isUndefined(count)) {\r\n            count = 0;\r\n        }\r\n        else {\r\n            count = count.id;\r\n        }\r\n        await this.db.get('search').push({id: count + 1, search, url, regex: reg}).write();\r\n        logger.info(`New show has been added to the searchlist - ${search} - ${url} for server ${this.guildID}`);\r\n        await msg.channel.send(\"Saved!\");\r\n    }\r\n\r\n    async removeShow(msg) {\r\n        const regex = /\\d+/g;\r\n        const found = regex.exec(msg.content);\r\n        let valid = true;\r\n        if (found === null) {\r\n            valid = false;\r\n            return;\r\n        }\r\n\r\n        let searchID = null;\r\n        let item = null;\r\n\r\n        if (valid) {\r\n            [searchID] = found;\r\n            searchID = parseInt(searchID);\r\n\r\n            if (_.isUndefined(item = await this.db.get('search').find({id: searchID}))) {\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        if (!valid) {\r\n            await msg.channel.send(\"Invalid id\");\r\n            return;\r\n        }\r\n\r\n        await this.db.get('search').remove({id: searchID}).write();\r\n        await this.db.get('rss').find({searchID: searchID}).assign({searchID: null}).write();\r\n        logger.info(`A show has been removed from the searchlist - ${item.search} from server ${this.guildID}`);\r\n        await msg.channel.send(\"Query removed\");\r\n    }\r\n\r\n    async allowUser(msg) {\r\n        const mention = msg.mentions.users.first();\r\n        if (_.isUndefined(mention)) {\r\n            await msg.channel.send(\"No user mention was found\");\r\n            return;\r\n        }\r\n\r\n        await this.addToAllowed(mention.id);\r\n        await msg.channel.send(\"User was added to botlist\");\r\n        logger.info(`A new user has been added to the botlist for server ${this.guildID} - ${mention.id}`);\r\n    }\r\n\r\n    async setNewTimeout(msg) {\r\n        const regex = /\"(.+?)\" (\\d+)/g;\r\n        const found = regex.exec(msg.content);\r\n\r\n        if (found === null) {\r\n            await msg.channel.send(`Invalid timeout syntax.\\n${COMMAND_CHARACTER}timeout \"CHANNEL_TYPE\" timeoutLength where CHANNEL_TYPE is one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        let [f, channelType, timeout] = found;\r\n        if (ALLOWED_CHANNEL_TYPES.indexOf(channelType) === -1) {\r\n            msg.channel.send(`Invalid channel type, must be one of ${ALLOWED_CHANNEL_TYPES.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        timeout = parseInt(timeout);\r\n        if (timeout < MINIMAL_INTERVAL_TIMES[channelType]) {\r\n            await msg.channel.send(`Timeout for ${channelType} must be at least ${MINIMAL_INTERVAL_TIMES[channelType]} minutes or higher`);\r\n            return;\r\n        }\r\n\r\n        await this.db.set('timeout.'+channelType, timeout).write();\r\n        await this.startTimeout(channelType);\r\n        await msg.channel.send(\"New timeout set\");\r\n        logger.info(`A new timeout has been set for server ${this.guildID} - ${timeout} (${channelType})`);\r\n    }\r\n\r\n    async listShows(msg) {\r\n        const shows = await this.db.get('search').value();\r\n        if (!shows.length) {\r\n            await msg.channel.send(\"No shows are currently in the search list\");\r\n            return;\r\n        }\r\n\r\n        const items = _.chunk(shows, 15);\r\n        for (let i = 0; i < items.length; i++) {\r\n            let message = \"\";\r\n            for (let y = 0; y < items[i].length; y++) {\r\n                message += \"ID: \" + items[i][y].id.toString() + \" - \" + items[i][y].search + \"\\n\";\r\n            }\r\n            await msg.channel.send(message);\r\n        }\r\n    }\r\n}\r\n\r\nexport default BotGuildInstance;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303511723
  },
  "{\"sourceRoot\":\"/home/tashi/Desktop/nyabot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/tashi/Desktop/nyabot\",\"filename\":\"/home/tashi/Desktop/nyabot/JpopSukiProvider.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tashi/Desktop/nyabot\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/tashi/Desktop/nyabot",
      "filename": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tashi/Desktop/nyabot",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tashi/Desktop/nyabot/JpopSukiProvider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tashi/Desktop/nyabot/",
        "sourceFileName": "JpopSukiProvider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _rssParser = _interopRequireDefault(require(\"rss-parser\"));\n\nvar _Logger = _interopRequireDefault(require(\"./Logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar JpopSukiProvider = /*#__PURE__*/function () {\n  function JpopSukiProvider() {\n    _classCallCheck(this, JpopSukiProvider);\n\n    _defineProperty(this, \"baseURL\", 'https://jpopsuki.eu/feeds.php');\n\n    _defineProperty(this, \"parser\", null);\n\n    _defineProperty(this, \"regex\", null);\n\n    this.parser = new _rssParser[\"default\"]();\n    this.regex = /(.+?) - (.+?) \\[] - (.+?) \\/ (.+?)? \\/ (.+)/;\n  }\n\n  _createClass(JpopSukiProvider, [{\n    key: \"getResults\",\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params,\n            result,\n            parsed,\n            items,\n            _iterator,\n            _step,\n            i,\n            _this$regex$exec,\n            _this$regex$exec2,\n            f,\n            artist,\n            name,\n            codec,\n            compression,\n            rip,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {\n                  feed: 'torrents_notify_20316_ollohfzw7ayqvwmbqk5d8t2ykj0ze73f'\n                };\n                _context.next = 3;\n                return _axios[\"default\"].get(this.baseURL, {\n                  params: _objectSpread({\n                    user: '155887',\n                    auth: 'ce93623920c6c3ecbffc03cd6e2b8b33',\n                    passkey: 'ollohfzw7ayqvwmbqk5d8t2ykj0ze73f',\n                    authkey: '0f3e681a6ffc4d77e48e3a68e5212aff',\n                    name: 'all'\n                  }, params)\n                });\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return this.parser.parseString(result.data);\n\n              case 6:\n                parsed = _context.sent;\n\n                if (!(!('items' in parsed) || !parsed.items.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", []);\n\n              case 9:\n                items = [];\n                _iterator = _createForOfIteratorHelper(parsed.items.reverse());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    _this$regex$exec = this.regex.exec(i.title), _this$regex$exec2 = _slicedToArray(_this$regex$exec, 6), f = _this$regex$exec2[0], artist = _this$regex$exec2[1], name = _this$regex$exec2[2], codec = _this$regex$exec2[3], compression = _this$regex$exec2[4], rip = _this$regex$exec2[5];\n                    items.push(_objectSpread(_objectSpread({}, i), {\n                      artist: artist,\n                      name: name,\n                      codec: codec,\n                      compression: compression,\n                      rip: rip\n                    }));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context.abrupt(\"return\", items);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResults() {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }]);\n\n  return JpopSukiProvider;\n}();\n\nvar _default = JpopSukiProvider;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkpwb3BTdWtpUHJvdmlkZXIuanMiXSwibmFtZXMiOlsiSnBvcFN1a2lQcm92aWRlciIsInBhcnNlciIsIlBhcnNlciIsInJlZ2V4IiwicGFyYW1zIiwiZmVlZCIsImF4aW9zIiwiZ2V0IiwiYmFzZVVSTCIsInVzZXIiLCJhdXRoIiwicGFzc2tleSIsImF1dGhrZXkiLCJuYW1lIiwicmVzdWx0IiwicGFyc2VTdHJpbmciLCJkYXRhIiwicGFyc2VkIiwiaXRlbXMiLCJsZW5ndGgiLCJyZXZlcnNlIiwiaSIsImV4ZWMiLCJ0aXRsZSIsImYiLCJhcnRpc3QiLCJjb2RlYyIsImNvbXByZXNzaW9uIiwicmlwIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGdCO0FBS0YsOEJBQWM7QUFBQTs7QUFBQSxxQ0FKSiwrQkFJSTs7QUFBQSxvQ0FITCxJQUdLOztBQUFBLG1DQUZOLElBRU07O0FBQ1YsU0FBS0MsTUFBTCxHQUFjLElBQUlDLHFCQUFKLEVBQWQ7QUFFQSxTQUFLQyxLQUFMLEdBQWEsNkNBQWI7QUFDSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWdCQyxnQkFBQUEsTSwyREFBUztBQUFDQyxrQkFBQUEsSUFBSSxFQUFFO0FBQVAsaUI7O3VCQUNEQyxrQkFBTUMsR0FBTixDQUFVLEtBQUtDLE9BQWYsRUFBd0I7QUFDekNKLGtCQUFBQSxNQUFNO0FBQ0ZLLG9CQUFBQSxJQUFJLEVBQUUsUUFESjtBQUVGQyxvQkFBQUEsSUFBSSxFQUFFLGtDQUZKO0FBR0ZDLG9CQUFBQSxPQUFPLEVBQUUsa0NBSFA7QUFJRkMsb0JBQUFBLE9BQU8sRUFBRSxrQ0FKUDtBQUtGQyxvQkFBQUEsSUFBSSxFQUFFO0FBTEoscUJBTUNULE1BTkQ7QUFEbUMsaUJBQXhCLEM7OztBQUFmVSxnQkFBQUEsTTs7dUJBV2UsS0FBS2IsTUFBTCxDQUFZYyxXQUFaLENBQXdCRCxNQUFNLENBQUNFLElBQS9CLEM7OztBQUFmQyxnQkFBQUEsTTs7c0JBQ0YsRUFBRSxXQUFXQSxNQUFiLEtBQXdCLENBQUNBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhQyxNOzs7OztpREFDL0IsRTs7O0FBR1BELGdCQUFBQSxLLEdBQVEsRTt1REFFRUQsTUFBTSxDQUFDQyxLQUFQLENBQWFFLE9BQWIsRTs7O0FBQWQsc0VBQXNDO0FBQTdCQyxvQkFBQUEsQ0FBNkI7QUFBQSx1Q0FDZSxLQUFLbEIsS0FBTCxDQUFXbUIsSUFBWCxDQUFnQkQsQ0FBQyxDQUFDRSxLQUFsQixDQURmLDJEQUM3QkMsQ0FENkIseUJBQzFCQyxNQUQwQix5QkFDbEJaLElBRGtCLHlCQUNaYSxLQURZLHlCQUNMQyxXQURLLHlCQUNRQyxHQURSO0FBRWxDVixvQkFBQUEsS0FBSyxDQUFDVyxJQUFOLGlDQUNPUixDQURQLEdBRU87QUFDQ0ksc0JBQUFBLE1BQU0sRUFBTkEsTUFERDtBQUVDWixzQkFBQUEsSUFBSSxFQUFKQSxJQUZEO0FBR0NhLHNCQUFBQSxLQUFLLEVBQUxBLEtBSEQ7QUFJQ0Msc0JBQUFBLFdBQVcsRUFBWEEsV0FKRDtBQUtDQyxzQkFBQUEsR0FBRyxFQUFIQTtBQUxELHFCQUZQO0FBVUg7Ozs7Ozs7aURBRU1WLEs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUlBbEIsZ0IiLCJzb3VyY2VSb290IjoiL2hvbWUvdGFzaGkvRGVza3RvcC9ueWFib3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5pbXBvcnQgUGFyc2VyIGZyb20gXCJyc3MtcGFyc2VyXCI7XHJcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vTG9nZ2VyXCI7XHJcblxyXG5jbGFzcyBKcG9wU3VraVByb3ZpZGVyIHtcclxuICAgIGJhc2VVUkwgPSAnaHR0cHM6Ly9qcG9wc3VraS5ldS9mZWVkcy5waHAnO1xyXG4gICAgcGFyc2VyID0gbnVsbDtcclxuICAgIHJlZ2V4ID0gbnVsbDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnBhcnNlciA9IG5ldyBQYXJzZXIoKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZWdleCA9IC8oLis/KSAtICguKz8pIFxcW10gLSAoLis/KSBcXC8gKC4rPyk/IFxcLyAoLispLztcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBnZXRSZXN1bHRzKHBhcmFtcyA9IHtmZWVkOiAndG9ycmVudHNfbm90aWZ5XzIwMzE2X29sbG9oZnp3N2F5cXZ3bWJxazVkOHQyeWtqMHplNzNmJ30pIHtcclxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBheGlvcy5nZXQodGhpcy5iYXNlVVJMLCB7XHJcbiAgICAgICAgICAgIHBhcmFtczoge1xyXG4gICAgICAgICAgICAgICAgdXNlcjogJzE1NTg4NycsXHJcbiAgICAgICAgICAgICAgICBhdXRoOiAnY2U5MzYyMzkyMGM2YzNlY2JmZmMwM2NkNmUyYjhiMzMnLFxyXG4gICAgICAgICAgICAgICAgcGFzc2tleTogJ29sbG9oZnp3N2F5cXZ3bWJxazVkOHQyeWtqMHplNzNmJyxcclxuICAgICAgICAgICAgICAgIGF1dGhrZXk6ICcwZjNlNjgxYTZmZmM0ZDc3ZTQ4ZTNhNjhlNTIxMmFmZicsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnYWxsJyxcclxuICAgICAgICAgICAgICAgIC4uLnBhcmFtc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHBhcnNlZCA9IGF3YWl0IHRoaXMucGFyc2VyLnBhcnNlU3RyaW5nKHJlc3VsdC5kYXRhKTtcclxuICAgICAgICBpZiAoISgnaXRlbXMnIGluIHBhcnNlZCkgfHwgIXBhcnNlZC5pdGVtcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGl0ZW1zID0gW107XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgb2YgcGFyc2VkLml0ZW1zLnJldmVyc2UoKSkge1xyXG4gICAgICAgICAgICBsZXQgW2YsIGFydGlzdCwgbmFtZSwgY29kZWMsIGNvbXByZXNzaW9uLCByaXBdID0gdGhpcy5yZWdleC5leGVjKGkudGl0bGUpO1xyXG4gICAgICAgICAgICBpdGVtcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIC4uLmksXHJcbiAgICAgICAgICAgICAgICAuLi57XHJcbiAgICAgICAgICAgICAgICAgICAgYXJ0aXN0LFxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgY29kZWMsXHJcbiAgICAgICAgICAgICAgICAgICAgY29tcHJlc3Npb24sXHJcbiAgICAgICAgICAgICAgICAgICAgcmlwXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGl0ZW1zO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBKcG9wU3VraVByb3ZpZGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "JpopSukiProvider.js"
      ],
      "names": [
        "JpopSukiProvider",
        "parser",
        "Parser",
        "regex",
        "params",
        "feed",
        "axios",
        "get",
        "baseURL",
        "user",
        "auth",
        "passkey",
        "authkey",
        "name",
        "result",
        "parseString",
        "data",
        "parsed",
        "items",
        "length",
        "reverse",
        "i",
        "exec",
        "title",
        "f",
        "artist",
        "codec",
        "compression",
        "rip",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;AAKF,8BAAc;AAAA;;AAAA,qCAJJ,+BAII;;AAAA,oCAHL,IAGK;;AAAA,mCAFN,IAEM;;AACV,SAAKC,MAAL,GAAc,IAAIC,qBAAJ,EAAd;AAEA,SAAKC,KAAL,GAAa,6CAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEgBC,gBAAAA,M,2DAAS;AAACC,kBAAAA,IAAI,EAAE;AAAP,iB;;uBACDC,kBAAMC,GAAN,CAAU,KAAKC,OAAf,EAAwB;AACzCJ,kBAAAA,MAAM;AACFK,oBAAAA,IAAI,EAAE,QADJ;AAEFC,oBAAAA,IAAI,EAAE,kCAFJ;AAGFC,oBAAAA,OAAO,EAAE,kCAHP;AAIFC,oBAAAA,OAAO,EAAE,kCAJP;AAKFC,oBAAAA,IAAI,EAAE;AALJ,qBAMCT,MAND;AADmC,iBAAxB,C;;;AAAfU,gBAAAA,M;;uBAWe,KAAKb,MAAL,CAAYc,WAAZ,CAAwBD,MAAM,CAACE,IAA/B,C;;;AAAfC,gBAAAA,M;;sBACF,EAAE,WAAWA,MAAb,KAAwB,CAACA,MAAM,CAACC,KAAP,CAAaC,M;;;;;iDAC/B,E;;;AAGPD,gBAAAA,K,GAAQ,E;uDAEED,MAAM,CAACC,KAAP,CAAaE,OAAb,E;;;AAAd,sEAAsC;AAA7BC,oBAAAA,CAA6B;AAAA,uCACe,KAAKlB,KAAL,CAAWmB,IAAX,CAAgBD,CAAC,CAACE,KAAlB,CADf,2DAC7BC,CAD6B,yBAC1BC,MAD0B,yBAClBZ,IADkB,yBACZa,KADY,yBACLC,WADK,yBACQC,GADR;AAElCV,oBAAAA,KAAK,CAACW,IAAN,iCACOR,CADP,GAEO;AACCI,sBAAAA,MAAM,EAANA,MADD;AAECZ,sBAAAA,IAAI,EAAJA,IAFD;AAGCa,sBAAAA,KAAK,EAALA,KAHD;AAICC,sBAAAA,WAAW,EAAXA,WAJD;AAKCC,sBAAAA,GAAG,EAAHA;AALD,qBAFP;AAUH;;;;;;;iDAEMV,K;;;;;;;;;;;;;;;;;;;;;eAIAlB,gB",
      "sourceRoot": "/home/tashi/Desktop/nyabot/",
      "sourcesContent": [
        "import axios from \"axios\";\r\nimport Parser from \"rss-parser\";\r\nimport logger from \"./Logger\";\r\n\r\nclass JpopSukiProvider {\r\n    baseURL = 'https://jpopsuki.eu/feeds.php';\r\n    parser = null;\r\n    regex = null;\r\n\r\n    constructor() {\r\n        this.parser = new Parser();\r\n\r\n        this.regex = /(.+?) - (.+?) \\[] - (.+?) \\/ (.+?)? \\/ (.+)/;\r\n    }\r\n\r\n    async getResults(params = {feed: 'torrents_notify_20316_ollohfzw7ayqvwmbqk5d8t2ykj0ze73f'}) {\r\n        const result = await axios.get(this.baseURL, {\r\n            params: {\r\n                user: '155887',\r\n                auth: 'ce93623920c6c3ecbffc03cd6e2b8b33',\r\n                passkey: 'ollohfzw7ayqvwmbqk5d8t2ykj0ze73f',\r\n                authkey: '0f3e681a6ffc4d77e48e3a68e5212aff',\r\n                name: 'all',\r\n                ...params\r\n            }\r\n        });\r\n\r\n        const parsed = await this.parser.parseString(result.data);\r\n        if (!('items' in parsed) || !parsed.items.length) {\r\n            return [];\r\n        }\r\n\r\n        let items = [];\r\n\r\n        for (let i of parsed.items.reverse()) {\r\n            let [f, artist, name, codec, compression, rip] = this.regex.exec(i.title);\r\n            items.push({\r\n                ...i,\r\n                ...{\r\n                    artist,\r\n                    name,\r\n                    codec,\r\n                    compression,\r\n                    rip\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nexport default JpopSukiProvider;"
      ]
    },
    "sourceType": "script",
    "mtime": 1611303517868
  }
}